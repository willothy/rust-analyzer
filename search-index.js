var searchIndex = JSON.parse('{\
"base_db":{"doc":"base_db defines basic database traits. The concrete DB is …","t":"NDDNNSDDNDDDDGDENRDENNNDDIDDDDDDNNENNNNNDDNIEDEGGGDENIIDDDDDDDDNNNGNIDLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLMMKMKKLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLMLLLMMLLLLLLLLLLLMMLKMLLLLLLLLMMLLLMKMMLLLLLLLLMKLLKLLLMMCLKLKKKKKKLKLKKLKMKMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLMMMMMDRILLMMMLLLLLLLLLLLLLLL","n":["Alloc","AnchoredPath","AnchoredPathBuf","Attr","Beta","CURRENT","Cancelled","Change","Core","CrateData","CrateDisplayName","CrateGraph","CrateGraphQuery","CrateId","CrateName","CrateOrigin","CustomDerive","DEFAULT_PARSE_LRU_CAP","Dependency","Edition","Edition2015","Edition2018","Edition2021","Env","FileId","FileLoader","FileLoaderDelegate","FilePosition","FileRange","FileSet","FileSourceRootQuery","FileTextQuery","FuncLike","Lang","LangCrateOrigin","Library","Local","Nightly","Other","Panic","ParseQuery","ProcMacro","ProcMacro","ProcMacroExpander","ProcMacroExpansionError","ProcMacroId","ProcMacroKind","ProcMacroLoadResult","ProcMacroPaths","ProcMacros","ProcMacrosQuery","ReleaseChannel","Rustc","SourceDatabase","SourceDatabaseExt","SourceDatabaseExtGroupStorage__","SourceDatabaseExtStorage","SourceDatabaseGroupStorage__","SourceDatabaseStorage","SourceRoot","SourceRootCratesQuery","SourceRootId","SourceRootQuery","Stable","Std","System","TargetLayoutLoadResult","Test","Upcast","VfsPath","add_crate_root","add_dep","anchor","anchor","apply","as_path","as_smol_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_name","catch","cfg_options","change_file","channel","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","crate_graph","crate_graph","crate_graph","crate_id","crate_id_for_crate_root","crate_name","crates_in_topological_order","default","default","default","default","default","default","default","default","default","default","default","dependencies","deref","deref","display_name","edition","env","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","execute","expand","expander","extend","file_for_path","file_for_path","file_id","file_id","file_source_root","file_source_root","file_text","file_text","file_text","file_text","files_changed","fixture","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_canonical_name","from_iter","from_str","from_str","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","impl_intern_key","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","index","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_library","is_prelude","is_proc_macro","iter","iter","iter","iter","join","kind","len","maybe_changed_since","maybe_changed_since","name","name","name_and_extension","new","new","new","new","new","new_library","new_local","new_real_path","new_virtual_path","normalize_dashes","offset","origin","parent","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","patch_cfg_if","path","path","path_for_file","path_for_file","pop","potential_cfg_options","proc_macros","proc_macros","proc_macros","provide","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","range","relevant_crates","relevant_crates","remove_and_replace","resolve_path","resolve_path","resolve_path","resolve_path","root_file_id","roots","salsa","set","set_crate_graph","set_crate_graph","set_crate_graph_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_proc_macros","set_proc_macros","set_proc_macros_with_durability","set_roots","set_source_root","set_source_root_with_durability","sort_deps","source_root","source_root","source_root_crates","source_root_crates","starts_with","strip_prefix","target_layout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","transitive_deps","transitive_rev_deps","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","version","with_prelude","name","name","name","repo","repo","ChangeFixture","WORKSPACE","WithFixture","borrow","borrow_mut","change","file_position","files","from","into","parse","parse_with_proc_macros","test_crate","try_from","try_into","type_id","with_files","with_files_extra_proc_macros","with_many_files","with_position","with_range","with_range_or_offset","with_single_file"],"q":[[0,"base_db"],[673,"base_db::CrateOrigin"],[678,"base_db::fixture"]],"d":["","Path relative to a file.","Path relative to a file.","","","","A panic payload indicating that a salsa revision was …","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","<code>CrateGraph</code> is a bit of information which turns a set of …","","","","Origin of the crates. It is used in emitting monikers.","","","","","","","","","Handle to a file in <code>Vfs</code>","","Silly workaround for cyclic deps between the traits","","","A set of <code>VfsPath</code>s identified by <code>FileId</code>s.","","","","Crates that are provided by the language, like std, core, …","","Crates that are non member libraries.","Crates that are workspace members,","","","","","","","","","","","","","","","","Crates that are from the rustc workspace","Database which stores all significant input facts: source …","We don’t want to give HIR knowledge of source roots, …","","Representative struct for the query group.","","Representative struct for the query group.","","","Files are grouped into source roots. A source root is a …","","","","Things like “proc macro server was killed by OOM”.","","","","Path in <code>Vfs</code>.","","","File that this path is relative to.","File that this path is relative to.","","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs <code>f</code>, and catches any salsa cancellation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The crate graph.","","","","","","Returns all crates in the graph, sorted in topological …","","","","","","","","","","","","","","","A name used in the package’s project declaration: for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extends this crate graph by adding a complete disjoint …","Get the id corresponding to <code>path</code> if it exists in the set.","","","","Path to a file, relative to the root of its source root. …","","Text of the file.","","","","","A set of high-level utility fixture methods to use in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","Insert the <code>file_id, path</code> pair into the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Sysroot or crates.io library.","Whether this dependency is to be added to the depending …","","Iterate over this set’s ids.","","","","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","","Returns the number of stored paths.","","","","","Returns <code>self</code>’s base name and file extension.","Creates a crate name, checking for dashes in the string …","","","","","","","Create a path from string. Input should be a string …","Creates an “in-memory” path from <code>/</code>-separated string.","Creates a crate name, unconditionally replacing the dashes …","","","Returns the <code>VfsPath</code> without its final component, if there …","","","","","","","","","","","Path relative to <code>anchor</code>’s containing directory.","Path relative to <code>anchor</code>’s containing directory.","Get the path corresponding to <code>file</code> if it exists in the set.","","Remove the last component of <code>self</code> if there is one.","The cfg options that could be used by the crate","The crate graph.","","","","","","","","","","","","","","Remove the crate from crate graph. If any crates depend on …","","Get the id of the file corresponding to <code>path</code>.","","","","","","","Set the value of the <code>crate_graph</code> input.","","Set the value of the <code>crate_graph</code> input and promise that …","Set the value of the <code>file_source_root</code> input.","Set the value of the <code>file_source_root</code> input and promise …","Set the value of the <code>file_text</code> input.","Set the value of the <code>file_text</code> input and promise that its …","Set the value of the <code>proc_macros</code> input.","","Set the value of the <code>proc_macros</code> input and promise that …","","Set the value of the <code>source_root</code> input.","Set the value of the <code>source_root</code> input and promise that …","","Contents of the source root.","","","","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[31,0,0,33,14,3,0,0,31,0,0,0,0,0,0,0,33,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,33,10,0,10,10,14,31,48,0,0,31,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,14,31,48,0,31,0,0,1,1,26,27,17,19,21,14,48,26,27,28,19,2,50,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,17,36,37,79,54,40,41,42,80,57,43,44,45,46,25,48,26,27,28,19,2,50,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,17,36,37,79,54,40,41,42,80,57,43,44,45,46,25,4,25,35,17,35,26,27,28,19,2,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,36,37,26,27,28,19,2,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,36,37,19,2,29,21,4,14,3,55,17,54,16,1,4,1,28,1,8,17,40,41,42,43,44,45,46,35,21,4,35,35,35,26,27,28,19,2,29,30,21,10,31,4,32,33,14,35,3,8,16,37,26,27,28,19,2,29,30,21,10,31,4,32,33,14,35,3,8,16,37,40,46,81,34,1,28,30,36,37,18,57,82,18,50,57,17,0,26,27,28,19,19,2,29,30,1,21,21,10,31,31,4,4,32,33,34,14,35,3,3,8,16,17,36,37,40,41,42,43,44,45,46,25,25,54,57,54,57,48,26,27,28,19,19,2,50,29,30,1,21,10,31,31,4,4,32,33,34,14,35,3,8,16,17,36,37,79,54,40,41,42,80,57,43,44,45,46,25,4,8,14,3,8,19,2,29,21,10,31,4,32,33,14,3,16,37,0,40,41,42,43,44,45,46,40,41,42,43,44,45,46,1,28,48,26,27,28,19,2,50,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,17,36,37,79,54,40,41,42,80,57,43,44,45,46,25,1,30,16,35,28,30,1,8,19,34,28,54,57,34,16,19,21,16,17,54,57,30,30,19,19,21,36,35,19,55,54,19,2,29,21,4,14,3,1,26,27,28,30,19,35,55,17,54,25,40,41,42,43,44,45,46,37,82,50,1,82,28,50,30,35,17,0,8,55,17,55,18,18,18,18,55,17,55,17,18,18,1,18,57,18,57,19,19,35,26,27,28,19,2,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,36,37,19,21,31,4,3,25,1,1,48,26,27,28,19,2,50,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,17,36,37,79,54,40,41,42,80,57,43,44,45,46,25,48,26,27,28,19,2,50,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,17,36,37,79,54,40,41,42,80,57,43,44,45,46,25,48,26,27,28,19,2,50,29,30,1,21,10,31,4,32,33,34,14,35,3,8,16,17,36,37,79,54,40,41,42,80,57,43,44,45,46,25,83,35,16,84,85,86,85,86,0,0,0,78,78,78,78,78,78,78,78,78,87,78,78,78,87,87,87,87,87,87,87],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,[5,[4]],[5,[6]],7,[5,[7]],8,9,10,[13,[[12,[11]],[12,[11]]]],[5,[14]]],15],[[1,15,16],[[13,[0]]]],0,0,[[17,18]],[19,[[5,[20]]]],[21,22],[14,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,11],[[[0,[23,24]]],[[13,[25]]]],0,[[17,2,[5,[[12,[11]]]]]],0,[26,26],[27,27],[28,28],[19,19],[2,2],[29,29],[30,30],[1,1],[21,21],[10,10],[31,31],[4,4],[32,32],[33,33],[34,34],[14,14],[35,35],[3,3],[8,8],[16,16],[36,36],[37,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19],38],[[2,2],38],[[29,29],38],[[21,21],38],[[4,4],38],[[14,14],38],[[3,3],38],[[],[[12,[1]]]],0,0,0,[[1,2],[[5,[15]]]],[4,21],[1,[[39,[15]]]],[[],28],[[],1],[[],8],[[],17],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],0,[21,11],[4,11],0,0,0,[[26,26],9],[[27,27],9],[[28,28],9],[[19,19],9],[[2,2],9],[[29,29],9],[[30,30],9],[[21,21],9],[[10,10],9],[[31,31],9],[[4,4],9],[[32,32],9],[[33,33],9],[[14,14],9],[[35,35],9],[[3,3],9],[[8,8],9],[[16,16],9],[[37,37],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[47,[5,[47]],8],[[13,[47,48]]]],0,[[1,1,49]],[[28,19],[[5,[2]]]],[[30,19],[[5,[2]]]],0,0,[2,29],0,[2,[[12,[11]]]],[2,[[12,[11]]]],[[[50,[18]],2],[[12,[11]]]],0,0,0,[[26,51],[[13,[52]]]],[[27,51],[[13,[52]]]],[[28,51],[[13,[52]]]],[[19,51],[[13,[52]]]],[[19,51],[[13,[52]]]],[[2,51],[[13,[52]]]],[[29,51],53],[[30,51],53],[[1,51],53],[[21,51],53],[[21,51],53],[[10,51],53],[[31,51],53],[[31,51],53],[[4,51],53],[[4,51],53],[[32,51],53],[[33,51],53],[[34,51],53],[[14,51],53],[[35,51],53],[[3,51],53],[[3,51],53],[[8,51],53],[[16,51],53],[[17,51],53],[[36,51],53],[[37,51],53],[[40,51],53],[[41,51],53],[[42,51],53],[[43,51],53],[[44,51],53],[[45,51],53],[[46,51],53],[[25,51],[[13,[52]]]],[[25,51],[[13,[52]]]],[[54,55,56,51],53],[[57,18,56,51],53],[[54,58,59]],[[57,58,59]],[[]],[[]],[[]],[[]],[60,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,31],[[]],[21,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,4],[61,8],[11,[[5,[14]]]],[11,[[13,[3]]]],[[8,11],[[5,[6]]]],[[19,62]],[[2,62]],[[29,62]],[[21,62]],[[10,62]],[[31,62]],[[4,62]],[[32,62]],[[33,62]],[[14,62]],[[3,62]],[[16,62]],[[37,62]],0,[[40,55],[[63,[40]]]],[[41,55],[[63,[41]]]],[[42,55],[[63,[42]]]],[[43,18],[[63,[43]]]],[[44,18],[[63,[44]]]],[[45,18],[[63,[45]]]],[[46,18],[[63,[46]]]],[[40,55],[[64,[40]]]],[[41,55],[[64,[41]]]],[[42,55],[[64,[42]]]],[[43,18],[[64,[43]]]],[[44,18],[[64,[44]]]],[[45,18],[[64,[45]]]],[[46,18],[[64,[46]]]],[[1,15],35],[[28,2,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,9],0,[16,9],0,[28,65],[30,65],[1,65],[8,65],[[19,11],[[5,[19]]]],0,[28,66],[[54,55,56,67],9],[[57,18,56,67],9],0,0,[19,5],[11,[[13,[21,11]]]],[[21,15],16],[[],17],[68,54],[68,57],[28,30],[28,30],[6,19],[6,19],[11,21],0,0,[19,[[5,[19]]]],[2,[[70,[69]]]],0,[[19,19],[[5,[38]]]],[[2,2],[[5,[38]]]],[[29,29],[[5,[38]]]],[[21,21],[[5,[38]]]],[[4,4],[[5,[38]]]],[[14,14],[[5,[38]]]],[[3,3],[[5,[38]]]],[1,9],0,0,[[28,2],[[5,[19]]]],[[30,2],[[5,[19]]]],[19,9],0,[[],[[12,[71]]]],0,0,[72],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],0,[2,[[12,[[74,[15]]]]]],[[[50,[18]],2],[[12,[[74,[15]]]]]],[[1,15,15],[[13,[0]]]],[27,[[5,[2]]]],[[28,27],[[5,[2]]]],[[[50,[18]],27],[[5,[2]]]],[[30,27],[[5,[2]]]],0,0,0,[[8,11,6]],[[[12,[1]]]],[[17,1]],[[[12,[1]],75]],[[2,29]],[[2,29,75]],[[2,[12,[11]]]],[[2,[12,[11]],75]],[[[12,[71]]]],[[17,71]],[[[12,[71]],75]],[[17,[39,[30]]]],[[29,[12,[30]]]],[[29,[12,[30]],75]],[1],[29,[[12,[30]]]],0,[29,[[12,[[74,[15]]]]]],0,[[19,19],9],[[19,19],[[5,[76]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[1,15],65],[[1,15],65],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[],77],[[]],0,[[21,15,9],16],0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,[[]],[[]],[11,78],[[11,39],78],[[],15],[[],13],[[],13],[[],77],[11],[[11,39]],[11],[11],[11],[11],[11]],"c":[],"p":[[3,"CrateGraph"],[3,"FileId"],[4,"Edition"],[3,"CrateDisplayName"],[4,"Option"],[3,"String"],[3,"CfgOptions"],[3,"Env"],[15,"bool"],[4,"CrateOrigin"],[15,"str"],[3,"Arc"],[4,"Result"],[4,"ReleaseChannel"],[6,"CrateId"],[3,"Dependency"],[3,"Change"],[8,"SourceDatabaseExt"],[3,"VfsPath"],[3,"AbsPath"],[3,"CrateName"],[3,"SmolStr"],[8,"FnOnce"],[8,"UnwindSafe"],[3,"Cancelled"],[3,"AnchoredPathBuf"],[3,"AnchoredPath"],[3,"FileSet"],[3,"SourceRootId"],[3,"SourceRoot"],[4,"LangCrateOrigin"],[3,"ProcMacroId"],[4,"ProcMacroKind"],[3,"ProcMacro"],[3,"CrateData"],[3,"FilePosition"],[3,"FileRange"],[4,"Ordering"],[3,"Vec"],[3,"ParseQuery"],[3,"CrateGraphQuery"],[3,"ProcMacrosQuery"],[3,"FileTextQuery"],[3,"FileSourceRootQuery"],[3,"SourceRootQuery"],[3,"SourceRootCratesQuery"],[6,"Subtree"],[4,"ProcMacroExpansionError"],[6,"ProcMacroPaths"],[3,"FileLoaderDelegate"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"SourceDatabaseGroupStorage__"],[8,"SourceDatabase"],[3,"DatabaseKeyIndex"],[3,"SourceDatabaseExtGroupStorage__"],[3,"Runtime"],[8,"FnMut"],[3,"AbsPathBuf"],[8,"IntoIterator"],[8,"Hasher"],[3,"QueryTable"],[3,"QueryTableMut"],[8,"Iterator"],[15,"usize"],[3,"Revision"],[15,"u16"],[3,"SourceFile"],[3,"Parse"],[6,"ProcMacros"],[3,"Demand"],[3,"Arc"],[6,"FxHashSet"],[3,"Durability"],[3,"RelPath"],[3,"TypeId"],[3,"ChangeFixture"],[3,"SourceDatabaseStorage"],[3,"SourceDatabaseExtStorage"],[8,"ProcMacroExpander"],[8,"FileLoader"],[8,"Upcast"],[13,"Rustc"],[13,"Local"],[13,"Library"],[8,"WithFixture"]]},\
"cfg":{"doc":"cfg defines conditional compiling options, <code>cfg</code> attribute …","t":"NNNEDEDDNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["All","Any","Atom","CfgAtom","CfgDiff","CfgExpr","CfgOptions","DnfExpr","Flag","InactiveReason","Invalid","KeyValue","Not","apply_diff","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","compute_enable_hints","default","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","from","get_cfg_keys","get_cfg_values","hash","hash","insert_atom","insert_key_value","into","into","into","into","into","into","is_empty","is_target_defined","len","new","new","parse","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","why_inactive","key","value"],"q":[[0,"cfg"],[105,"cfg::CfgAtom"]],"d":["","","","A simple configuration value passed in from the outside.","","","Configuration options used for conditional compilation on …","A <code>#[cfg]</code> directive in Disjunctive Normal Form (DNF).","eg. <code>#[cfg(test)]</code>","","","eg. <code>#[cfg(target_os = &quot;linux&quot;)]</code>","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>CfgDiff</code> objects that would enable this directive …","","","","","","","","","","","","","","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> when the atom comes from the target …","Returns the total number of atoms changed by this diff.","","Create a new CfgDiff. Will return None if the same item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes a list of present or absent atoms in <code>opts</code> that …","",""],"i":[3,3,3,0,0,0,0,0,6,0,3,6,3,1,8,12,6,3,1,2,8,12,6,3,1,2,1,6,3,1,2,6,3,1,2,6,8,1,2,6,3,1,2,8,12,6,6,3,1,2,2,3,8,12,6,3,3,1,2,1,1,6,3,1,1,8,12,6,3,1,2,2,6,2,8,2,3,6,6,3,1,2,8,12,6,2,8,12,6,3,1,2,8,12,6,3,1,2,8,12,6,3,1,2,8,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,3],[[5,[4]]]],[6,6],[3,3],[1,1],[2,2],[[]],[[]],[[]],[[]],[[6,6],7],[[8,1],9],[[],1],[[],2],[[6,6],4],[[3,3],4],[[1,1],4],[[2,2],4],[[8,10],11],[[12,10],11],[[6,10],11],[[6,10],11],[[3,10],11],[[1,10],11],[[2,10],11],[[2,10],11],[[3,13],[[5,[4]]]],[[]],[[]],[[]],[[]],[6,3],[[]],[[]],[1,9],[[1,14],9],[[6,15]],[[3,15]],[[1,16]],[[1,16,16]],[[]],[[]],[[]],[[]],[[]],[[]],[2,4],[6,4],[2,17],[3,8],[[[18,[6]],[18,[6]]],[[5,[2]]]],[19,3],[[6,6],[[5,[7]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[8,1],[[5,[12]]]],0,0],"c":[],"p":[[3,"CfgOptions"],[3,"CfgDiff"],[4,"CfgExpr"],[15,"bool"],[4,"Option"],[4,"CfgAtom"],[4,"Ordering"],[3,"DnfExpr"],[8,"Iterator"],[3,"Formatter"],[6,"Result"],[3,"InactiveReason"],[8,"Fn"],[15,"str"],[8,"Hasher"],[3,"SmolStr"],[15,"usize"],[3,"Vec"],[3,"Subtree"],[3,"String"],[4,"Result"],[3,"TypeId"],[13,"KeyValue"]]},\
"flycheck":{"doc":"Flycheck provides the functionality needed to run …","t":"NENNDDEDDNNNNNNNEDNNNEENNENNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMM","n":["AddDiagnostic","Applicability","CargoCommand","CustomCommand","Diagnostic","DiagnosticCode","DiagnosticLevel","DiagnosticSpan","DiagnosticSpanMacroExpansion","DidCancel","DidCheckCrate","DidFailToRestart","DidFinish","DidStart","Error","FailureNote","FlycheckConfig","FlycheckHandle","HasPlaceholders","Help","Ice","InvocationLocation","InvocationStrategy","MachineApplicable","MaybeIncorrect","Message","Note","Once","PerWorkspace","Progress","Progress","Root","Unspecified","Warning","Workspace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_end","byte_start","cancel","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","column_end","column_start","def_site_span","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expansion","explanation","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","id","into","into","into","into","into","into","into","into","into","into","into","into","is_primary","label","level","line_end","line_start","macro_decl_name","message","rendered","restart","serialize","serialize","serialize","serialize","serialize","serialize","span","spans","spawn","suggested_replacement","suggestion_applicability","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","all_features","all_targets","ansi_color_output","args","command","command","extra_args","extra_env","extra_env","features","invocation_location","invocation_strategy","no_default_features","target_triples","diagnostic","id","id","progress","workspace_root"],"q":[[0,"flycheck"],[228,"flycheck::FlycheckConfig"],[242,"flycheck::Message"]],"d":["Request adding a diagnostic with fixes included to a file","Whether a suggestion can be safely applied.","","","A diagnostic message generated by rustc","The error code associated to this diagnostic.","The diagnostic level","A section of the source code associated with a Diagnostic","Macro expansion information associated with a diagnostic.","","","","","","Error","Failure note","","Flycheck wraps the shared state and communication …","The suggested replacement has placeholders that will need …","Help","Internal compiler error","","","The suggested replacement can be applied automatically …","The suggested replacement may be incorrect in some …","","Note","","","","Request check progress notification to client","","The suggested replacement will probably not work.","Warning","","","","","","","","","","","","","","","","","","","","","","","","","","The byte offset in the file where this diagnostic ends.","The byte offset in the file where this diagnostic starts …","Stop this cargo check worker.","Associated diagnostic messages.","","","","","","","","","","","","","","","","","","","The code itself.","The associated error code for this diagnostic","1-based, character offset.","1-based, character offset.","span where macro was defined (if known)","","","","","","","","","","","","","","","","","","","","","","","","","","","Macro invocations that created the code at this span, if …","An explanation for the code","The file name or the macro name this diagnostic comes from.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this a “primary” span – meaning the point, or one …","Label that should be placed at this location (if any)","“error: internal compiler error”, “error”, “…","1-based. The line in the file.","1-based. The line in the file.","name of macro that was applied (e.g., “foo!” or “#[…","The error message of this diagnostic.","The message as rustc would render it","Schedule a re-start of the cargo check worker.","","","","","","","span where macro was applied to generate this code; note …","A list of source code spans this diagnostic is associated …","","If we are suggesting a replacement, this will contain text …","If the suggestion is approximate","Source text from the start of line_start to the end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flycheck instance ID","",""],"i":[14,0,4,4,0,0,0,0,0,17,17,17,17,17,9,9,0,0,8,9,9,0,0,8,8,0,9,2,2,0,14,3,8,9,3,14,2,3,4,1,17,5,6,7,8,9,10,14,2,3,4,1,17,5,6,7,8,9,10,7,7,1,10,2,3,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,5,10,7,7,6,2,3,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,7,5,7,14,2,3,4,4,1,17,5,6,7,8,9,10,10,14,2,3,4,1,17,5,6,7,8,9,10,5,6,7,8,9,10,1,14,2,3,4,1,17,5,6,7,8,9,10,7,7,10,7,7,6,10,10,1,5,6,7,8,9,10,6,10,1,7,7,7,2,3,4,5,6,7,8,9,10,4,10,14,2,3,4,1,17,5,6,7,8,9,10,14,2,3,4,1,17,5,6,7,8,9,10,14,2,3,4,1,17,5,6,7,8,9,10,27,27,27,28,27,28,27,27,28,27,28,28,27,27,29,29,30,30,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],0,[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],2],[[],3],[11,[[12,[5]]]],[11,[[12,[6]]]],[11,[[12,[7]]]],[11,[[12,[8]]]],[11,[[12,[9]]]],[11,[[12,[10]]]],[[2,2],13],[[3,3],13],[[4,4],13],[[5,5],13],[[6,6],13],[[7,7],13],[[8,8],13],[[9,9],13],[[10,10],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,[[14,15],16],[[2,15],16],[[3,15],16],[[4,15],16],[[4,15],16],[[1,15],16],[[17,15],16],[[5,15],[[12,[18]]]],[[6,15],[[12,[18]]]],[[7,15],[[12,[18]]]],[[8,15],[[12,[18]]]],[[9,15],[[12,[18]]]],[[10,15],[[12,[18]]]],[[10,15],[[12,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,19]],[[6,19]],[[7,19]],[[8,19]],[[9,19]],[[10,19]],[1,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[[5,21],12],[[6,21],12],[[7,21],12],[[8,21],12],[[9,21],12],[[10,21],12],0,0,[[20,[23,[22]],4,24],1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"FlycheckHandle"],[4,"InvocationStrategy"],[4,"InvocationLocation"],[4,"FlycheckConfig"],[3,"DiagnosticCode"],[3,"DiagnosticSpanMacroExpansion"],[3,"DiagnosticSpan"],[4,"Applicability"],[4,"DiagnosticLevel"],[3,"Diagnostic"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[4,"Message"],[3,"Formatter"],[6,"Result"],[4,"Progress"],[3,"Error"],[8,"Hasher"],[15,"usize"],[8,"Serializer"],[8,"Fn"],[3,"Box"],[3,"AbsPathBuf"],[3,"String"],[3,"TypeId"],[13,"CargoCommand"],[13,"CustomCommand"],[13,"AddDiagnostic"],[13,"Progress"]]},\
"hir":{"doc":"HIR (previously known as descriptors) provides a …","t":"NENNEDENNENNNNNNCNNIEEQNDNDDDENENNNNNNNNNCNDNDNNNNNNNDEEEEDNDNDNENNNNDNNNNNNNDNNNNNNNDNNDNNNDENNNNNDNNNNNNNNDNNNNNSNNDNNNNNNNGCNDENNNNNNNNNNNNNNNNNDNNNNNNNNNNEENNIIINNIINIEDIDNNNNNNDNCDDNNNNNNCNEENNDNENDENDNDNNDDNNCCCDNENNCNNNENNCCCCDDNNNNENENENNCNNNNENDNECNNNCNNNNNNNENDNNNNNNNNNNNNNDNNNEENNNNNNNNENNNNNECCNNNSNNNNNNNNNNNNNNNNNCNNNNEEDNDDNNNNNNNNNNNNNNDNNNNDNNNENNNNNNNNNDNDNNNNDNNNNDNNNNNNNNNNNNDDNNNNNDNCDDNNECNNCNCDNNNNNNNNCCCCCCCCNNNNNCNNNNDNNNNEEDLLMLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLALLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAKLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLKLLLLLLMALLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKLLLLLLLLLLLLLLLLLLLLLLMMMDDDDDDDDDDDDDDDDDDDDIDDDDIDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDKLMLLLLLLLKMKMKKMKKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMLLLLLLLLLLLLLLLKMKMKMKMKMKMKKMKMKKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMLLLLLLLLLLLLLLKMKKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMKMLLLLLLLKKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKKMKMKMKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKKMKMKMKMKMKMKMKMKMKMKKKKKMLLLKMKMKMKMLLLKKKKKLKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKKKMKMKMKMKMLLLLLLLKMKMKMKMKMKKMKMKMKKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMEDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNNNNNNNNDEDDNNDENNNNLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLFLMLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLMMMMLLLMLLLLLLLLLLLL","n":["Abs","Access","Add","AddAssign","Adjust","Adjustment","Adt","Adt","Adt","AdtId","AdtId","AdtSelfType","AlignOffset","All","AllocLayout","Any","AnyDiagnostic","Array","ArrayToPointer","AsAssocItem","AssocItem","AssocItemContainer","Ast","Atom","Attr","Attr","AttributeTemplate","Attrs","AttrsWithOwner","AutoBorrow","BeginPanic","BindingMode","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","BlockExpr","Borrow","BoxFree","BreakOutsideOfLoop","BuiltIn","BuiltinAttr","BuiltinAttr","BuiltinType","BuiltinType","BuiltinType","ByCrate","BySelf","CStr","CVoid","Call","Callable","CallableKind","CaptureKind","CfgAtom","CfgExpr","CfgOptions","Clone","Closure","Closure","ClosureCapture","ClosureFnPointer","ClosureStyle","ClosureWithId","ClosureWithSubst","CoerceUnsized","CoerceUnsizedError","Const","Const","Const","Const","Const","ConstEvalError","ConstId","ConstPanicFmt","ConstParam","ConstParam","ConstParam","ConstParamTy","Context","ControlFlowBreak","ControlFlowContinue","Copy","Crate","Crate","Crate","CrateDependency","Declarative","Def","Def","DefMap","DefWithBody","Deref","Deref","DerefMut","DerefTarget","Derive","DeriveHelper","DeriveHelper","Destruct","Discriminant","DiscriminantKind","DispatchFromDyn","DisplaySourceCodeError","Div","DivAssign","Documentation","DollarCrate","Drop","DropInPlace","DynMetadata","DynTrait","EMPTY","EhCatchTypeinfo","EhPersonality","Enum","Enum","EnumId","EnumVariantId","Error","ExchangeMalloc","Exclusive","ExecutionLimitExceeded","ExpandResult","ExpectedFunction","ExternBlock","Field","FieldSource","Flag","FmtError","Fn","Fn","FnMut","FnOnce","FnOnceOutput","FnPtr","FnPtrAddr","FnPtrTrait","FormatAlignment","FormatArgument","FormatArguments","FormatCount","FormatPlaceholder","FormatUnsafeArg","Freeze","Function","Function","Function","Function","Function","Function","FunctionId","Future","FuturePoll","Generator","GeneratorState","GenericDef","GenericParam","GenericParam","GetContext","HasAttrs","HasContainer","HasCrate","HasErrorType","HasPlaceholder","HasSource","HasVisibility","Hide","HirDisplay","HirDisplayError","HirFileId","HirWrite","Impl","Impl","Impl","Impl","ImplFn","ImplSelfType","ImplTrait","InFile","InFunction","InactiveCode","IncoherentImpl","IncorrectCase","Index","IndexMut","IntoFutureIntoFuture","IntoIterIntoIter","Invalid","InvalidConst","InvalidDeriveTarget","InvalidVTableId","ItemContainer","ItemInNs","IteratorNext","KeyValue","Label","Label","LangItem","LangItemNotFound","Layout","LayoutError","LayoutError","LifetimeParam","LifetimeParam","Local","Local","Local","LocalSource","Macro","Macro","Macro","MacroDefError","MacroError","MacroExpansionParseError","MacroFile","MacroId","MacroKind","Macros","Macros","MalformedDerive","ManuallyDrop","MaybeUninit","Metadata","MirEvalError","MirLowerError","MirLowerErrorForClosure","MismatchedArgCount","MissingFields","MissingMatchArms","MissingUnsafe","ModPath","Module","Module","Module","Module","Module","ModuleDef","ModuleDef","ModuleDefId","ModuleId","ModuleSource","Move","Move","MovedOutOfRef","Mul","MulAssign","Mut","MutToConstPointer","Mutability","MutableRef","Name","Named","Namespace","NeedMut","Neg","Never","NeverToAny","NoSuchField","Not","Not","NotImplemented","NotSupported","Option","OptionNone","OptionSome","Origin","Other","OverloadedDeref","Owned","OwnedBox","Panic","Panic","PanicBoundsCheck","PanicCannotUnwind","PanicDisplay","PanicFmt","PanicImpl","PanicInfo","PanicLocation","PanicMisalignedPointerDereference","PanicNounwind","Param","PartialEq","PartialOrd","Path","PathKind","PathResolution","PhantomData","Pin","PinNewUnchecked","Placeholder","Plain","Plain","PointeeTrait","Pointer","PointerCast","PointerLike","Poll","PollPending","PollReady","Pos","PrefixKind","PrivateAssocItem","PrivateField","ProcMacro","Public","RANotation","ROOT","Range","RangeFrom","RangeFull","RangeInclusiveNew","RangeInclusiveStruct","RangeTo","RangeToInclusive","RawPtr","RawPtr","Receiver","Record","Ref","Ref","Reference","ReifyFnPointer","Rem","RemAssign","ReplaceFilterMapNextWithFindMap","ResultErr","ResultOk","ResumeTy","Safe","Safety","ScopeDef","SelfParam","SelfType","Semantics","SemanticsScope","Shared","Shared","SharedRef","Shl","ShlAssign","Shr","ShrAssign","SizeOverflow","Sized","Slice","SliceLen","SourceFile","StackOverflow","Start","Static","Static","Static","StaticId","String","Struct","Struct","Struct","StructId","StructKind","StructuralPeq","StructuralTeq","Sub","SubAssign","Super","Sync","TargetDataLayoutNotAvailable","TargetLayoutNotAvailable","Termination","ToolModule","ToolModule","Trait","Trait","Trait","Trait","Trait","TraitAlias","TraitAlias","TraitAlias","TraitAliasId","TraitId","TraitRef","TransmuteOpts","TransmuteTrait","Try","TryTraitBranch","TryTraitFromOutput","TryTraitFromResidual","TryTraitFromYeet","Tuple","Tuple","Tuple","TupleEnumVariant","TupleStruct","Type","TypeAlias","TypeAlias","TypeAlias","TypeAlias","TypeAliasId","TypeError","TypeInfo","TypeIsUnsized","TypeMismatch","TypeOrConstParam","TypeParam","TypeParam","TypeParam","TypeRef","TypedHole","Types","Types","UndeclaredLabel","UndefinedBehavior","UnimplementedBuiltinMacro","Union","Union","Union","UnionId","UniqueSharedRef","Unit","Unknown","Unknown","Unpin","UnreachableLabel","UnresolvedExternCrate","UnresolvedField","UnresolvedImport","UnresolvedMacroCall","UnresolvedMethodCall","UnresolvedModule","UnresolvedProcMacro","Unsafe","UnsafeCell","UnsafeFnPointer","Unsize","Unsize","UnusedMut","UserError","VaList","Values","Values","Variant","Variant","Variant","Variant","Variant","VariantDef","Visibility","VisibleTraits","access","adjusted","adjusted","align","all","all_for_trait","all_for_type","all_in_crate","all_items","ancestors_at_offset_with_macros","ancestors_with_macros","ancestors_with_macros","ancestors_with_macros","ancestors_with_macros_skip_attr_item","applicable_inherent_traits","apply_diff","as_adt","as_array","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","as_associated_type_parent_trait","as_builtin","as_call_id_with_errors","as_callable","as_closure","as_def_with_body","as_dyn_trait","as_enum","as_ident","as_ident_pat","as_impl_traits","as_keyword_for_ptr","as_keyword_for_ref","as_local","as_module_def","as_proc_macro","as_ref","as_reference","as_self_param","as_slice","as_str","as_str","as_text","as_tuple_index","as_type_param","assert_contains_node","assoc_fn_params","assoc_type_shorthand_candidates","async_ret_type","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","autoderef","binding_mode_of_pat","body_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_key","call_node","canonical_module_path","canonical_path","capture_types","captured_items","cfg","cfg","cfg","check","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","cmp","cmp","cmp","cmp","constructor_ty","constructor_ty","constructor_ty","container","container","container","container","container","container","container","container","container","container","container","container","containing_module","containing_trait","containing_trait_impl","containing_trait_or_trait_impl","contains_unknown","could_coerce_to","could_unify_with","crate_root","db","db","db","debug_hir","debug_mir","declaration_source","declarations","default","default","default","definition_source","dependencies","deref","deref","deref","derive","derive_helpers_in_scope","descend_into_macros","descend_into_macros_single","descend_into_macros_with_kind_preference","descend_into_macros_with_same_text","descend_node_into_attributes","descendants","diagnostics","diagnostics","diagnostics","diagnostics","diagnostics","diagnostics_display_range","display","display","display","display","display_name","display_place","display_source_code","display_test","display_truncated","display_with_id","display_with_impl","doc_aliases","doc_exprs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs_with_rangemap","dump","dump_block_scopes","edition","end_location_link","enum_tag_size","env_traits","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","expand","expand_attr_macro","expand_derive_as_pseudo_attr_macro","expand_derive_macro","expansion_info","expansion_level","expected_case","expr_adjustments","field_offset","fields","fields","fields","fields","fields","file","file","file_id","file_id","file_id","file_syntax","find_node_at_offset_with_descend","find_node_at_offset_with_macros","find_nodes_at_offset_with_descend","find_use_path","find_use_path_prefixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_as_proc_macro","fn_trait","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ast","from_kind","from_mutable","from_name","from_segments","from_src","from_str","generate_new_name","generic_parameters","generic_params","get","get_cfg_keys","get_cfg_values","get_html_root_url","get_type_argument","has_adjustment","has_body","has_doc_hidden","has_non_default_type_params","has_non_default_type_params","has_self_param","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir_file_for","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","id","ident","ident_text","ident_type","impl_","impl_defs","impls_fnonce","impls_into_future","impls_trait","import_map","index","index","input","insert_atom","insert_key_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_displayable","into_ident_pat","is_Self","is_array","is_async","is_attr","is_attr_macro","is_attr_macro_call","is_auto","is_bool","is_bool","is_builtin","is_builtin_derive","is_builtin_derive","is_builtin_derive","is_char","is_char","is_closure","is_const","is_copy","is_crate_root","is_custom_derive","is_data_carrying","is_derive","is_derive_annotated","is_derive_attr_pseudo_expansion","is_escaped","is_float","is_float","is_fn","is_fn_like","is_ident","is_implicit","is_include_macro","is_inline","is_inside_unsafe","is_int","is_int_or_uint","is_macro","is_macro_export","is_mod_rs","is_mut","is_mut","is_mut","is_mutable_reference","is_negative","is_never","is_no_std","is_packed","is_param","is_proc_macro","is_proc_macro_attribute","is_proc_macro_derive","is_raw_ptr","is_ref","is_reference","is_rustc_coherence_is_core","is_self","is_self","is_shared","is_slice","is_str","is_target_defined","is_uint","is_unit","is_unknown","is_unsafe","is_unsafe_ident_pat","is_unsafe_macro_call","is_unsafe_method_call","is_unsafe_ref_expr","is_unsafe_to_call","is_unstable","is_unstable_feature_enabled","is_usize","is_visible_from","is_visible_from","items","items","items_with_supertraits","iterate_assoc_items","iterate_method_candidates","iterate_method_candidates_with_traits","iterate_path_candidates","kind","kind","kind","kind","kind","kind","kind","known","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","lang","lang","lang_item","layout","layout","layout","layout","layout","legacy_macros","len","lifetime","list","local","local","macro_call_id","macro_file","map","merge","merge","method_params","missing","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module_id","modules","modules","modules_for_file","n_params","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name_value_str","nearest_non_block_module","new","new","new","new_lifetime","new_slice","new_tuple_field","niches","normalize_trait_assoc_type","num_params","origin","original","original","original_ast_node","original_ast_node","original_call_node","original_file","original_file","original_file_range","original_file_range","original_file_range_full","original_file_range_opt","original_file_range_opt","original_range","original_range_opt","original_syntax_node","original_syntax_node","params","params","params_without_self","parent","parent","parent","parent","parent","parent","parent","parent","parent_def","parent_enum","parse","parse","parse_or_expand","parse_path_comma_token_tree","parse_proc_macro_decl","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path","path_to_root","pattern_adjustments","pattern_source","pop_segment","potential_cfg","pretty_print","primary_source","proc_macro_loading_error","process_all_names","push_segment","query_external_importables","receiver_param","record_literal_missing_fields","record_pattern_missing_fields","recursion_limit","reference","registered_attrs","registered_tools","remove_raw_ptr","remove_ref","render_eval","repr","repr","resolve_attr_macro_call","resolve_await_to_poll","resolve_bin_expr","resolve_bind_pat_to_const","resolve_derive_macro","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_extern_crate","resolve_field","resolve_index_expr","resolve_label","resolve_lifetime_param","resolve_macro_call","resolve_method_call","resolve_method_call_as_callable","resolve_method_call_field_fallback","resolve_path","resolve_prefix_expr","resolve_record_field","resolve_record_pat_field","resolve_trait","resolve_try_expr","resolve_type","resolve_variant","resolver","resolver","ret_type","return_type","reverse_dependencies","root_file","root_module","scope","scope","scope_at_offset","scope_for_def","segments","self_param","self_ty","self_ty","shifted_in","shifted_in_from","shifted_out","shifted_out_to","single_ident_value","size","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source_map","sources","speculative_expand","speculative_expand_attr_macro","speculative_expand_derive_as_pseudo_attr_macro","speculative_resolve","split","start_location_link","storage","storage","str","string_value","strip_reference","strip_references","suggested_text","symbols","syntax","syntax","syntax_ptr","target","template","to_def","to_module_def","to_module_defs","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smol_str","to_string","token_ancestors_with_macros","token_tree_value","trait_","trait_","trait_bounds","trait_ref","transitive_reverse_dependencies","transpose","transpose","try_fold_with","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_fields","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty_with_args","type_and_const_arguments","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_binding_in_pat","type_of_expr","type_of_pat","type_of_self","type_or_const_param_count","type_params","type_ref","unescaped","unescaped","upmap","value","value","value","value","variant_body_ty","variants","version","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visible_traits","visit_with","walk","walk","with_ancestor_maps","with_value","word","key","value","AdtVarianceQuery","AssociatedTyDataQuery","AssociatedTyValueQuery","AstIdMapQuery","AttrsQuery","BlockDefMapQuery","BodyQuery","BodyWithSourceMapQuery","BorrowckQuery","CallableItemSignatureQuery","ConstDataQuery","ConstEvalDiscriminantQuery","ConstEvalQuery","ConstEvalStaticQuery","ConstParamTyQuery","ConstVisibilityQuery","CrateDefMapQueryQuery","CrateLangItemsQuery","CrateLimits","CrateSupportsNoStdQuery","DefDatabase","DefDatabaseGroupStorage__","DefDatabaseStorage","EnumDataQuery","EnumDataWithDiagnosticsQuery","ExpandDatabase","ExpandDatabaseStorage","ExpandProcAttrMacrosQuery","ExpandProcMacroQuery","ExprScopesQuery","FieldTypesQuery","FieldVisibilitiesQuery","FieldsAttrsQuery","FieldsAttrsSourceMapQuery","FileItemTreeQuery","FnDefDatumQuery","FnDefVarianceQuery","FunctionDataQuery","FunctionVisibilityQuery","GenericDefaultsQuery","GenericParamsQuery","GenericPredicatesForParamQuery","GenericPredicatesQuery","HirDatabase","HirDatabaseGroupStorage__","HirDatabaseStorage","HygieneFrameQuery","ImplDataQuery","ImplDataWithDiagnosticsQuery","ImplDatumQuery","ImplSelfTyQuery","ImplTraitQuery","ImportMapQuery","IncoherentInherentImplCratesQuery","InferQueryQuery","InherentImplsInBlockQuery","InherentImplsInCrateQuery","InternAnonymousConstLookupQuery","InternAnonymousConstQuery","InternBlockLookupQuery","InternBlockQuery","InternCallableDefLookupQuery","InternCallableDefQuery","InternClosureLookupQuery","InternClosureQuery","InternConstLookupQuery","InternConstQuery","InternDatabase","InternDatabaseGroupStorage__","InternDatabaseStorage","InternEnumLookupQuery","InternEnumQuery","InternExternBlockLookupQuery","InternExternBlockQuery","InternFunctionLookupQuery","InternFunctionQuery","InternGeneratorLookupQuery","InternGeneratorQuery","InternImplLookupQuery","InternImplQuery","InternImplTraitIdLookupQuery","InternImplTraitIdQuery","InternLifetimeParamIdLookupQuery","InternLifetimeParamIdQuery","InternMacro2LookupQuery","InternMacro2Query","InternMacroCallQuery","InternMacroRulesLookupQuery","InternMacroRulesQuery","InternProcMacroLookupQuery","InternProcMacroQuery","InternStaticLookupQuery","InternStaticQuery","InternStructLookupQuery","InternStructQuery","InternTraitAliasLookupQuery","InternTraitAliasQuery","InternTraitLookupQuery","InternTraitQuery","InternTypeAliasLookupQuery","InternTypeAliasQuery","InternTypeOrConstParamIdLookupQuery","InternTypeOrConstParamIdQuery","InternUnionLookupQuery","InternUnionQuery","InternedCallableDefId","InternedClosureId","InternedConstParamId","InternedGeneratorId","InternedLifetimeParamId","InternedOpaqueTyId","InternedTypeOrConstParamId","LangItemQuery","LayoutOfAdtQuery","LayoutOfTyQuery","Macro2DataQuery","MacroArgTextQuery","MacroDefQuery","MacroExpandQuery","MacroRulesDataQuery","MirBodyForClosureQuery","MirBodyQuery","MonomorphizedMirBodyForClosureQuery","MonomorphizedMirBodyQuery","ParseMacroExpansionErrorQuery","ParseMacroExpansionQuery","ProcMacroDataQuery","ProgramClausesForChalkEnvQuery","ReturnTypeImplTraitsQuery","StaticDataQuery","StructDataQuery","StructDataWithDiagnosticsQuery","StructDatumQuery","TargetDataLayoutQuery","TraitAliasDataQuery","TraitDataQuery","TraitDataWithDiagnosticsQuery","TraitDatumQuery","TraitEnvironmentQuery","TraitImplsInBlockQuery","TraitImplsInCrateQuery","TraitImplsInDepsQuery","TraitSolveQueryQuery","TyQuery","TypeAliasDataQuery","UnionDataQuery","UnionDataWithDiagnosticsQuery","ValueTyQuery","VariantsAttrsQuery","VariantsAttrsSourceMapQuery","adt_variance","adt_variance","adt_variance","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","associated_ty_data","associated_ty_data","associated_ty_value","associated_ty_value","ast_id_map","attrs","attrs","attrs_with_owner","block_def_map","block_def_map","body","body","body_with_source_map","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowck","borrowck","callable_item_signature","callable_item_signature","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","const_data","const_data","const_eval","const_eval","const_eval_discriminant","const_eval_discriminant","const_eval_static","const_eval_static","const_param_ty","const_param_ty","const_visibility","const_visibility","crate_def_map","crate_def_map_query","crate_def_map_query","crate_lang_items","crate_lang_items","crate_limits","crate_supports_no_std","crate_supports_no_std","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","enum_data","enum_data","enum_data_with_diagnostics","enum_data_with_diagnostics","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expand_proc_attr_macros","expand_proc_attr_macros","expand_proc_macro","expr_scopes","expr_scopes","field_types","field_types","field_visibilities","field_visibilities","fields_attrs","fields_attrs","fields_attrs_source_map","fields_attrs_source_map","file_item_tree","file_item_tree","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","fmt_index","fn_def_datum","fn_def_datum","fn_def_variance","fn_def_variance","fn_def_variance","for_each_query","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","function_data","function_data","function_visibility","function_visibility","generic_defaults","generic_defaults","generic_params","generic_params","generic_predicates","generic_predicates","generic_predicates_for_param","generic_predicates_for_param","hash","hash","hash","hash","hash","hash","hash","hygiene_frame","impl_data","impl_data","impl_data_with_diagnostics","impl_data_with_diagnostics","impl_datum","impl_datum","impl_self_ty","impl_self_ty","impl_trait","impl_trait","import_map","import_map","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","incoherent_inherent_impl_crates","incoherent_inherent_impl_crates","infer","infer_query","infer_query","inherent_impls_in_block","inherent_impls_in_block","inherent_impls_in_crate","inherent_impls_in_crate","intern_anonymous_const","intern_anonymous_const","intern_block","intern_block","intern_callable_def","intern_callable_def","intern_closure","intern_closure","intern_const","intern_const","intern_enum","intern_enum","intern_extern_block","intern_extern_block","intern_function","intern_function","intern_generator","intern_generator","intern_impl","intern_impl","intern_impl_trait_id","intern_impl_trait_id","intern_lifetime_param_id","intern_lifetime_param_id","intern_macro2","intern_macro2","intern_macro_call","intern_macro_rules","intern_macro_rules","intern_proc_macro","intern_proc_macro","intern_static","intern_static","intern_struct","intern_struct","intern_trait","intern_trait","intern_trait_alias","intern_trait_alias","intern_type_alias","intern_type_alias","intern_type_or_const_param_id","intern_type_or_const_param_id","intern_union","intern_union","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lang_item","lang_item","layout_of_adt","layout_of_adt","layout_of_ty","layout_of_ty","lookup_intern_anonymous_const","lookup_intern_anonymous_const","lookup_intern_block","lookup_intern_block","lookup_intern_callable_def","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_closure","lookup_intern_const","lookup_intern_const","lookup_intern_enum","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_extern_block","lookup_intern_function","lookup_intern_function","lookup_intern_generator","lookup_intern_generator","lookup_intern_impl","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_lifetime_param_id","lookup_intern_macro2","lookup_intern_macro2","lookup_intern_macro_call","lookup_intern_macro_rules","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_static","lookup_intern_struct","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait","lookup_intern_trait_alias","lookup_intern_trait_alias","lookup_intern_type_alias","lookup_intern_type_alias","lookup_intern_type_or_const_param_id","lookup_intern_type_or_const_param_id","lookup_intern_union","lookup_intern_union","macro2_data","macro2_data","macro_arg","macro_arg_text","macro_def","macro_expand","macro_rules_data","macro_rules_data","maybe_changed_since","maybe_changed_since","maybe_changed_since","mir_body","mir_body","mir_body_for_closure","mir_body_for_closure","monomorphized_mir_body","monomorphized_mir_body","monomorphized_mir_body_for_closure","monomorphized_mir_body_for_closure","new","new","new","normalize_projection","parse_macro_expansion","parse_macro_expansion_error","parse_or_expand","parse_or_expand_with_err","partial_cmp","proc_macro_data","proc_macro_data","program_clauses_for_chalk_env","program_clauses_for_chalk_env","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","recursion_limit","recursion_limit","return_type_impl_traits","return_type_impl_traits","set_expand_proc_attr_macros","set_expand_proc_attr_macros_with_durability","static_data","static_data","struct_data","struct_data","struct_data_with_diagnostics","struct_data_with_diagnostics","struct_datum","struct_datum","target_data_layout","target_data_layout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trait_alias_data","trait_alias_data","trait_data","trait_data","trait_data_with_diagnostics","trait_data_with_diagnostics","trait_datum","trait_datum","trait_environment","trait_environment","trait_environment_for_body","trait_impls_in_block","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","trait_impls_in_deps","trait_solve","trait_solve_query","trait_solve_query","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_alias_data","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","union_data","union_data_with_diagnostics","union_data_with_diagnostics","value_ty","value_ty","variants_attrs","variants_attrs","variants_attrs_source_map","variants_attrs_source_map","AnyDiagnostic","BreakOutsideOfLoop","BreakOutsideOfLoop","ExpectedFunction","ExpectedFunction","InactiveCode","InactiveCode","IncoherentImpl","IncoherentImpl","IncorrectCase","IncorrectCase","InvalidDeriveTarget","InvalidDeriveTarget","MacroDefError","MacroDefError","MacroError","MacroError","MacroExpansionParseError","MacroExpansionParseError","MalformedDerive","MalformedDerive","MismatchedArgCount","MismatchedArgCount","MissingFields","MissingFields","MissingMatchArms","MissingMatchArms","MissingUnsafe","MissingUnsafe","MovedOutOfRef","MovedOutOfRef","NeedMut","NeedMut","NoSuchField","NoSuchField","PrivateAssocItem","PrivateAssocItem","PrivateField","PrivateField","ReplaceFilterMapNextWithFindMap","ReplaceFilterMapNextWithFindMap","TypeMismatch","TypeMismatch","TypedHole","TypedHole","UndeclaredLabel","UndeclaredLabel","UnimplementedBuiltinMacro","UnimplementedBuiltinMacro","UnreachableLabel","UnreachableLabel","UnresolvedExternCrate","UnresolvedExternCrate","UnresolvedField","UnresolvedField","UnresolvedImport","UnresolvedImport","UnresolvedMacroCall","UnresolvedMacroCall","UnresolvedMethodCall","UnresolvedMethodCall","UnresolvedModule","UnresolvedModule","UnresolvedProcMacro","UnresolvedProcMacro","UnusedMut","UnusedMut","actual","bad_value_break","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_expr","candidates","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decl","decl","decl","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","errors","expected","expected","expected","expected_case","expr","expr","expr","expr","expr","expr","expr_or_pat","expr_or_pat","field","field","field_list_parent","field_list_parent_path","field_with_same_name","file","file","file","file_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","found","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","ident","ident_text","ident_type","impl_","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_bang","is_break","item","kind","krate","local","local","macro_call","macro_name","message","message","method_with_same_name_exists","missed_fields","name","name","name","name","name","next_expr","node","node","node","node","node","node","node","node","node","node","opts","path","precise_location","precise_location","precise_location","precise_location","receiver","receiver","scrutinee_expr","span","span","suggested_text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncovered_patterns","Adt","AssociatedItem","BuiltinType","Const","Contains","EnumVariant","Equals","Function","Fuzzy","ImportInfo","ImportKind","ImportMap","ImportPath","Macro","Module","Query","SearchMode","Static","Trait","TraitAlias","TypeAlias","assoc_items_only","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","clone","clone","clone_into","clone_into","container","default","display","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exclude_import_kind","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","import_info_for","import_map_query","into","into","into","into","into","into","is_trait_assoc_item","limit","name_only","new","path","path_of","search_dependencies","search_mode","segments","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Box","Clone","Copy","Debug","Default","Eq","Future","Hash","Index","IntoFuture","IntoIter","IntoIterator","Item","Iterator","Neg","None","Not","Ok","Option","Ord","Output","PartialEq","PartialOrd","Range","RangeFrom","RangeFull","RangeInclusive","RangeTo","RangeToInclusive","Result","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Target","Try","add","add_assign","alloc","asm","assert","bench","bitand","bitand_assign","bitor","bitor_assign","bitxor","bitxor_assign","bool","boxed","branch","call","call_mut","call_once","cfg","cfg_accessible","cfg_attr","cfg_eval","char","column","compile_error","concat","concat_bytes","concat_idents","const_format_args","core","core_panic","crate_type","deref","deref_mut","derive","div","div_assign","doc","drop","env","eq","f32","f64","feature","file","filter_map","fn","fn_mut","fn_once","format_args","format_args_nl","future","future_trait","ge","global_allocator","global_asm","gt","i128","i16","i32","i64","i8","include","include_bytes","include_str","index","index_mut","into_future","is_empty","isize","iter","iter_mut","le","len","line","llvm_asm","log_syntax","lt","macro_rules","module_path","mul","mul_assign","ne","neg","new","next","no_core","no_std","not","ops","option","option_env","owned_box","partial_ord","pieces","poll","prelude","recursion_limit","register_attr","register_tool","rem","rem_assign","result","rust_2015","rust_2018","rust_2021","shl","shl_assign","shr","shr_assign","std","std_panic","str","stringify","sub","sub_assign","test","test_case","trace_macros","u128","u16","u32","u64","u8","unreachable","unsafe_cell","usize","v1","va_list","DeclarationLocation","FileSymbol","SymbolCollector","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","collect","collect_module","container_name","def","eq","eq","equivalent","equivalent","finish","fmt","fmt","from","from","from","hash","hash","hir_file_id","into","into","into","is_alias","loc","name","name_ptr","new","original_name_range","original_range","ptr","syntax","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"hir"],[2519,"hir::CfgAtom"],[2521,"hir::db"],[4699,"hir::diagnostics"],[5175,"hir::import_map"],[5276,"hir::known"],[5440,"hir::symbols"]],"d":["Absolute path (::foo)","","The <code>add</code> lang item.","The <code>add_assign</code> lang item.","","","A Data Type","","","A Data Type","","","The <code>align_offset</code> lang item. Align offset for stride != 1; …","","The <code>alloc_layout</code> lang item.","","","","Go from <code>*const [T; N]</code> to <code>*const T</code>","","Invariant: <code>inner.as_assoc_item(db).is_some()</code> We do not …","","","","","A procedural attribute macro.","A template that the attribute input must match. Only …","","","","The <code>begin_panic</code> lang item. libstd panic entry point. …","","The <code>bitand</code> lang item.","The <code>bitand_assign</code> lang item.","The <code>bitor</code> lang item.","The <code>bitor_assign</code> lang item.","The <code>bitxor</code> lang item.","The <code>bitxor_assign</code> lang item.","","Take the address and produce either a <code>&amp;</code> or <code>*</code> pointer.","The <code>box_free</code> lang item.","","A built-in function-like macro.","","","","","","Causes paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>…","The <code>CStr</code> lang item.","The <code>c_void</code> lang item.","","","","","A simple configuration value passed in from the outside.","","Configuration options used for conditional compilation on …","The <code>clone</code> lang item.","","","","Go from a non-capturing closure to an fn pointer or an …","","<code>{closure#14825}</code>, useful for some diagnostics (like type …","<code>{closure#14825}&lt;i32, ()&gt;</code>, useful for internal usage.","The <code>coerce_unsized</code> lang item.","","","","","","","","","The <code>const_panic_fmt</code> lang item.","","A const parameter","","The <code>const_param_ty</code> lang item.","The <code>Context</code> lang item.","The <code>Break</code> lang item.","The <code>Continue</code> lang item.","The <code>copy</code> lang item.","hir::Crate describes a single crate. It’s the main …","","","","<code>macro_rules!</code> or Macros 2.0 macro.","","An item","Contains the results of (early) name resolution.","The defs which have a body.","Dereference once, producing a place.","The <code>deref</code> lang item.","The <code>deref_mut</code> lang item.","The <code>deref_target</code> lang item.","A built-in or custom derive.","","","The <code>destruct</code> lang item.","The <code>discriminant_type</code> lang item. The associated item of …","The <code>discriminant_kind</code> lang item.","The <code>dispatch_from_dyn</code> lang item.","Errors that can occur when generating source code","The <code>div</code> lang item.","The <code>div_assign</code> lang item.","Holds documentation","<code>$crate</code> from macro expansion","The <code>drop</code> lang item.","The <code>drop_in_place</code> lang item.","The <code>dyn_metadata</code> lang item.","","","The <code>eh_catch_typeinfo</code> lang item.","The <code>eh_personality</code> lang item.","","","","","","The <code>exchange_malloc</code> lang item.","","","","","","","","eg. <code>#[cfg(test)]</code>","<code>FmtError</code> is required to be compatible with …","The <code>fn</code> lang item.","A fn pointer. Last element of the vector is the return …","The <code>fn_mut</code> lang item.","The <code>fn_once</code> lang item.","The <code>fn_once_output</code> lang item.","","The <code>fn_ptr_addr</code> lang item.","The <code>fn_ptr_trait</code> lang item.","The <code>format_alignment</code> lang item.","The <code>format_argument</code> lang item.","The <code>format_arguments</code> lang item.","The <code>format_count</code> lang item.","The <code>format_placeholder</code> lang item.","The <code>format_unsafe_arg</code> lang item.","The <code>freeze</code> lang item.","","","","","","","","The <code>future_trait</code> lang item.","The <code>poll</code> lang item.","The <code>generator</code> lang item.","The <code>generator_state</code> lang item.","","","","The <code>get_context</code> lang item.","","","Trait for obtaining the defining crate of an item.","","","","","<code>…</code>, which is the <code>TYPE_HINT_TRUNCATION</code>","","","Input to the analyzer is a set of files, where each file …","","","","","","<code>impl FnX(i32, i32) -&gt; i32</code>, where <code>FnX</code> is the most special …","","","<code>InFile&lt;T&gt;</code> stores a value of <code>T</code> inside a particular …","","","","","The <code>index</code> lang item.","The <code>index_mut</code> lang item.","The <code>into_future</code> lang item.","The <code>into_iter</code> lang item.","","","","","","","The <code>next</code> lang item.","eg. <code>#[cfg(target_os = &quot;linux&quot;)]</code>","","","A representation of all the valid language items in Rust.","","","","","","","A single local definition.","A local binding (only value namespace)","","","","","","","","","","","","","","","The <code>manually_drop</code> lang item.","The <code>maybe_uninit</code> lang item.","The <code>metadata_type</code> lang item.","","","","","","","","","","","","","Visibility is restricted to a certain module.","The defs which can be visible in the module.","","The defs which can be visible in the module.","","","","","","The <code>mul</code> lang item.","The <code>mul_assign</code> lang item.","","Go from a mut raw pointer to a const raw pointer.","","","<code>Name</code> is a wrapper around string, which is used in hir for …","","","","The <code>neg</code> lang item.","","Go from ! to any type.","","","The <code>not</code> lang item.","","","The <code>Option</code> lang item.","The <code>None</code> lang item.","The <code>Some</code> lang item.","","Some other type that implements <code>FnOnce</code>.","","","The <code>owned_box</code> lang item.","The <code>panic</code> lang item.","","The <code>panic_bounds_check</code> lang item.","The <code>panic_cannot_unwind</code> lang item.","The <code>panic_display</code> lang item.","The <code>panic_fmt</code> lang item.","The <code>panic_impl</code> lang item.","The <code>panic_info</code> lang item.","The <code>panic_location</code> lang item.","The <code>panic_misaligned_pointer_dereference</code> lang item.","The <code>panic_nounwind</code> lang item.","","The <code>eq</code> lang item.","The <code>partial_ord</code> lang item.","","","","The <code>phantom_data</code> lang item.","The <code>pin</code> lang item.","The <code>new_unchecked</code> lang item.","","","Causes paths to ignore imports in the local module.","The <code>pointee_trait</code> lang item.","","","The <code>pointer_like</code> lang item.","The <code>Poll</code> lang item.","The <code>Pending</code> lang item.","The <code>Ready</code> lang item.","","","","","A function-like procedural macro.","Visibility is unrestricted.","<code>|i32, i32| -&gt; i32</code>","","The <code>Range</code> lang item.","The <code>RangeFrom</code> lang item.","The <code>RangeFull</code> lang item.","The <code>range_inclusive_new</code> lang item.","The <code>RangeInclusive</code> lang item.","The <code>RangeTo</code> lang item.","The <code>RangeToInclusive</code> lang item.","Converts from T to *T.","","The <code>receiver</code> lang item.","","","Converts from T to &amp;T.","","Go from a fn-item type to a fn-pointer type.","The <code>rem</code> lang item.","The <code>rem_assign</code> lang item.","","The <code>Err</code> lang item.","The <code>Ok</code> lang item.","The <code>ResumeTy</code> lang item.","Safe","Whether a function is safe or not.","For IDE only","","","Primary API to get semantic information, like types, from …","<code>SemanticsScope</code> encapsulates the notion of a scope (the set …","","","","The <code>shl</code> lang item.","The <code>shl_assign</code> lang item.","The <code>shr</code> lang item.","The <code>shr_assign</code> lang item.","","The <code>sized</code> lang item.","","The <code>slice_len_fn</code> lang item.","","","The <code>start</code> lang item.","","","","","The <code>String</code> lang item.","","","","","","The <code>structural_peq</code> lang item. Trait injected by …","The <code>structural_teq</code> lang item. Trait injected by …","The <code>sub</code> lang item.","The <code>sub_assign</code> lang item.","<code>self::</code> is <code>Super(0)</code>","The <code>sync</code> lang item.","","","The <code>termination</code> lang item.","","","","","","","","","","","","","","The <code>transmute_opts</code> lang item.","The <code>transmute_trait</code> lang item.","The <code>Try</code> lang item.","The <code>branch</code> lang item.","The <code>from_output</code> lang item.","The <code>from_residual</code> lang item.","The <code>from_yeet</code> lang item.","","The <code>tuple_trait</code> lang item.","","","","","","","","","","Means that code had type errors (or mismatched args) and …","","","","","","A type parameter","","Compare ty::Ty","","","","","Means that code had undefined behavior. We don’t try to …","","","","","","","","","","The <code>unpin</code> lang item.","","","","","","","","","Unsafe","The <code>unsafe_cell</code> lang item.","Go from a safe fn pointer to an unsafe fn pointer.","Unsize a pointer/reference value, e.g., <code>&amp;[T; n]</code> to <code>&amp;[T]</code>. …","The <code>unsize</code> lang item.","","","The <code>va_list</code> lang item.","","","","","","","","","Visibility of an item, with the path resolved.","","","The adjusted type, or the original in case no adjustments …","The adjusted type, if an adjustment happened.","","","","","","","","Iterates the ancestors of the given node, climbing up …","","","Skips the attributed item that caused the macro invocation …","If a type can be represented as <code>dyn Trait</code>, returns all …","","","","","","","","","","","","","","","","","","If this path is a single identifier, like <code>foo</code>, return its …","","","","","","","","","","","","Returns the text this name represents if it isn’t a …","","Returns the text this name represents if it isn’t a …","Returns the tuple index this name represents if it is a …","","","","Iterates over associated types that may be specified after …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type this def’s body has to evaluate tof this is a macro call, returns the syntax node of the …","","","","","","","","","Iterates over all child moduleseturns the module containing <code>local_mod</code>, either the parent …","","","","","","","Topmost parent of this module. Every module has a …","Re-exports various subcrates databases so that the calling …","","","A textual representation of the HIR of this def’s body …","A textual representation of the MIR of this def’s body …","Returns a node which declares this module, either a …","","","","","Returns a node which defines this module. That is, a file …","","","","","","","Descend the token into macrocalls to all its mapped …","Descend the token into macrocalls to its first mapped …","","Descend the token into macrocalls to all its mapped …","Maps a node down by mapping its first and last token down.","","Re-export diagnostics such that clients of <code>hir</code> don’t …","Fills <code>acc</code> with the module’s diagnostics.","","","Get a reference to the def map’s diagnostics.","","","","Returns a <code>Display</code>able type that is human-readable. Use …","","","","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","Returns a <code>Display</code>able type that is human-readable and …f <code>item</code> has an attribute macro attached to it, expands it.","","","Return expansion information if it is a macro-expansion …","","","","","","","","","","","","","","","","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","Finds a path that can be used to refer to the given item …","Finds a path that can be used to refer to the given item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","","Opposite of <code>LangItem::name</code>","","","Opposite of <code>LangItem::name</code>","Generates a new name which is only equal to itself, by …","Combines lifetime indicators, type and constant parameters …","Returns unique <code>GenericParam</code>s contained in this type.","","","","Try to get the root URL of the documentation of a crate.","Returns <code>idx</code>-th argument of this trait reference if it is a …","","Whether this function declaration has a definition.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that particular type <code>ty</code> implements <code>std::ops::FnOnce</code>.","Checks that particular type <code>ty</code> implements …","","A map of all publicly exported items in a crate.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a <code>Display</code>able type that is human-readable.","","","","","","Return whether this file is an attr macro","","","","","","Indicate it is macro file generated for builtin derive","","","","","","","","","","Returns true if at least one variant of this enum is a …","","","Return whether this file is the pseudo expansion of the …","","","","","","","Is this type parameter implicitly introduced (eg. <code>Self</code> in …","Return whether this file is an include macro","","Returns <code>true</code> if the <code>node</code> is inside an <code>unsafe</code> context.","","","","","","","","Returns <code>true</code> if the mutability is <code>Mut</code>.","","","","","","","","","","","","","","","","Returns <code>true</code> if the mutability is <code>Shared</code>.","","","Returns <code>true</code> when the atom comes from the target …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the crate this module is part of.","","","","","","","","","","","","","","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","","","","","","","","","","","","","","","","Returns the number of segments in the path (counting …","Returns the lifetime of the DataType","","","","","","","","","","A fake name for things missing in the source code.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the module containing <code>self</code> (or <code>self</code>, if <code>self</code> is …","","","","","","","Name of this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds nearest non-block ancestor <code>Module</code> (<code>self</code> included).","","","","","","","","","","","","The original type of the expression or pattern.","Attempts to map the node out of macro expanded files. This …","","If this is a macro call, returns the syntax node of the …","","For macro-expansion files, returns the file original …","Falls back to the macro call range if the node cannot be …","Falls back to the macro call range if the node cannot be …","Falls back to the macro call range if the node cannot be …","Attempts to map the syntax node back up its macro calls.","Attempts to map the syntax node back up its macro calls.","Attempts to map the node out of macro expanded files …","Attempts to map the node out of macro expanded files …","Attempts to map the node out of macro expanded files. This …","","","","","Finds a parent module.","","","","","","","If this <code>DefMap</code> is for a block expression, returns the …","","","","","","Parses this attribute as a token tree consisting of comma …","","","","","","","","","","","","","","","","","The leftmost definition for this local. Example: …","","Calls the passed closure <code>f</code> on all names in scope.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to resolve this call expression as a method call …","","","","","","","","","","","Get this function’s return type","","","","","","Returns a <code>ModuleScope</code>: a set of items, visible in this …","","","","","","","","","","","#[path(ident)]","","Fetches the definition’s source node. Using …","Search for a definition’s source and cache its syntax …","","","","","","","","","","","","","","","","","","","","","","","","All definitions for this local. Example: …","","","","Resolve a path as-if it was written at the given scope. …","","","","","","#[path = “string”]","","","","File symbol extraction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the textual representation of this name as a …","","","#[path TokenTree]","","","FIXME: this only lists trait bounds from the item defining …eturns the type as in the signature of the struct (i.e., …","","","","Turns this ADT into a type. Any type parameters of the ADT …","","","","","","","","","","","","Turns this ADT into a type with the given type parameters. …","Iterates its type and const arguments","Iterates its type arguments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","It also includes the changes that binding mode makes in …","","","","","","","","","","","","","","The type of the enum variant bodies.","","","","","","","","","","","","","","","","","","","","Note: <code>VisibleTraits</code> should be treated as an opaque type, …","","Visits every type, including generic arguments, in this …","","Ascends the <code>DefMap</code> hierarchy and calls <code>f</code> with every <code>DefMap</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code> …pecial case of the previous query for procedural macros. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Collects all crates in the dependency graph that have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macro ids. That’s probably the tricksiest bit in …","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lowers syntactic macro call to a token tree representation.","Extracts syntax node, corresponding to a macro call. That…","Gets the expander for this macro. This compiles …","Expand macro call to a token tree.","","","","","","","","","","","","","","","","","","Implementation for the macro case.","Firewall query that returns the errors from the …","Main public API – parses a hir file, not caring whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum depth for potentially infinitely-recursive …","","","Set the value of the <code>expand_proc_attr_macros</code> input.","Set the value of the <code>expand_proc_attr_macros</code> input and …eturns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The crate id of the proc-macro this macro belongs to, or …","","","","","","","","","","","","","","This expression is the whole method chain up to and …","","","","","","","","","","","","","","If the diagnostic can be pinpointed more accurately than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import map entry should contain the query string.","","Import map entry should strictly match the query string.","","Import map entry should contain all letters from the query …","Item import details stored in the <code>ImportMap</code>.","","A map from publicly exported items to the path needed to …","","","","","A way to match import map contents against the search …","","","","","Matches only the entries that are associated items, …","","","","","","","","","","","","","Respect casing of the query string when matching.","","","","","The module containing this item.","","","","","","","","","","","Do not include imports of the specified kind in the search …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the import is a trait associated item or not.","Limits the returned number of items to <code>limit</code>.","Matches entries’ names only, ignoring the rest of the …","","A path that can be used to import the item, relative to …","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","Searches dependencies of <code>krate</code> for an importable path …","Specifies the way to search for the entries using the …he actual data that is stored in the index. It should be …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The file id for both the <code>ptr</code> and <code>name_ptr</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","This points to the <code>syntax::ast::Name</code> identifier of the …","","","","This points to the whole syntax node of the declaration.","","","","","","","","","","","",""],"i":[86,0,108,108,0,0,0,30,93,0,117,13,108,83,108,83,0,110,106,0,0,0,235,83,0,91,0,0,0,0,108,0,108,108,108,108,108,108,113,101,108,0,91,0,63,0,30,117,115,115,108,108,140,0,0,0,0,0,0,108,0,204,0,106,0,109,109,108,112,0,30,31,29,93,112,117,108,0,63,73,108,108,108,108,108,0,86,104,0,91,140,63,0,0,101,108,108,108,91,0,63,108,108,108,108,165,108,108,0,86,108,108,108,110,77,108,108,0,27,116,117,110,108,3,112,0,0,104,0,0,85,165,108,110,108,108,108,204,108,108,108,108,108,108,108,108,108,0,204,30,31,29,93,117,108,108,108,108,0,0,13,108,0,0,0,111,111,0,0,109,0,0,0,0,0,92,93,104,109,13,110,0,112,0,0,0,108,108,108,108,83,112,0,112,0,0,108,85,0,13,0,112,0,0,112,0,73,0,63,13,0,0,30,110,0,0,0,0,117,0,88,56,0,108,108,108,0,112,112,0,0,0,0,0,0,30,104,113,114,0,13,0,117,0,203,76,0,108,108,52,106,0,203,0,142,0,0,108,110,101,0,83,108,111,112,108,108,108,0,204,0,3,108,108,112,108,108,108,108,108,108,108,108,108,0,108,108,110,0,0,108,108,108,110,86,115,108,101,0,108,108,108,108,142,0,0,0,91,114,109,119,108,108,108,108,108,108,108,102,110,108,107,76,102,110,106,108,108,0,108,108,108,89,0,0,0,63,0,0,3,52,203,108,108,108,108,111,108,110,108,113,112,108,0,30,31,117,108,0,27,90,116,0,108,108,108,108,86,108,112,111,108,0,63,0,30,92,93,104,0,30,93,117,117,0,108,108,108,108,108,108,108,107,108,110,204,204,0,0,30,29,93,117,112,0,112,0,0,0,63,73,0,0,88,56,0,112,0,0,27,90,116,203,107,13,111,108,0,0,0,0,0,0,0,0,89,108,106,106,108,0,111,108,88,56,0,30,90,31,93,0,0,0,1,4,4,6,8,11,11,11,13,15,15,21,21,21,5,25,5,5,545,30,31,32,33,34,5,5,21,5,5,30,5,27,48,50,5,52,52,54,56,32,21,5,55,5,49,58,49,49,5,15,32,62,32,546,66,30,67,68,69,47,70,27,32,33,71,10,72,34,57,56,29,73,61,74,75,11,13,5,15,31,85,83,25,15,140,49,50,48,86,203,82,79,87,204,63,21,4,62,124,88,89,8,123,66,30,67,142,68,69,165,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,45,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,117,85,83,25,15,140,49,50,48,86,203,82,79,87,204,63,21,4,62,124,88,89,8,123,66,30,67,142,68,69,165,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,45,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,117,77,79,30,30,46,46,82,8,77,25,66,85,83,25,49,48,86,82,79,87,63,21,88,89,8,66,30,67,68,69,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,52,109,110,111,112,113,114,115,116,117,85,83,25,49,48,86,82,79,87,63,21,88,89,8,66,30,67,68,69,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,52,109,110,111,112,113,114,115,116,117,21,85,49,48,86,89,116,68,69,70,547,66,68,69,47,32,33,71,10,72,34,29,119,29,29,29,5,5,5,66,0,15,62,31,31,66,66,25,61,77,66,8,124,77,65,94,119,15,15,15,15,15,21,0,66,30,31,119,15,49,48,548,1,8,81,548,548,548,46,46,77,77,546,66,67,68,69,47,70,27,32,33,71,10,72,34,57,29,73,61,74,75,11,77,65,119,119,8,549,6,5,85,83,25,140,49,48,86,82,79,87,63,21,88,89,8,66,30,67,142,68,69,47,70,27,90,31,32,3,1,33,71,10,72,34,35,91,57,56,29,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,6,76,13,100,101,102,103,104,58,77,65,106,107,108,143,52,109,110,111,112,119,113,114,115,116,117,85,83,25,140,49,48,86,82,79,87,63,21,88,89,8,66,30,67,142,68,69,47,70,27,90,31,32,3,1,33,71,10,72,34,35,91,57,56,29,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,6,76,13,100,101,102,103,104,58,77,65,106,107,108,143,52,109,110,111,112,119,113,114,115,116,117,70,32,15,15,15,15,79,79,157,15,6,68,69,70,90,5,50,157,79,21,143,21,15,15,15,66,66,85,85,83,25,15,140,49,48,86,82,79,87,63,21,4,62,124,88,89,8,123,66,30,67,142,68,69,47,70,27,90,31,32,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,45,6,76,13,100,101,102,103,104,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,117,119,46,83,85,83,83,25,15,140,49,50,48,48,86,203,82,79,79,79,87,204,63,21,4,62,124,88,89,8,8,123,66,66,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,67,67,142,68,68,69,69,165,165,47,47,70,70,27,27,27,27,27,90,90,90,90,90,31,31,31,31,31,31,32,32,3,3,54,1,33,33,71,71,10,10,72,72,34,34,35,35,91,57,57,56,56,56,56,29,29,92,93,93,93,93,93,93,93,93,93,93,93,93,93,55,55,94,95,96,97,97,73,73,73,73,73,61,61,74,74,75,75,98,98,11,11,99,46,81,5,45,6,76,13,13,100,101,102,103,104,105,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,110,48,52,108,48,48,108,49,5,5,77,25,25,8,99,4,32,77,27,34,32,85,83,49,48,86,79,87,21,88,89,8,66,30,67,68,69,47,70,27,90,31,32,1,33,71,10,72,34,35,91,57,56,29,93,55,94,95,96,97,73,61,74,75,98,11,99,46,13,101,102,103,104,58,106,108,52,110,114,116,117,15,548,66,67,68,69,47,70,27,32,33,71,10,72,34,57,73,61,74,75,98,5,110,82,157,157,157,143,66,5,5,5,0,67,119,82,25,25,85,83,25,15,140,49,50,48,86,203,82,79,87,204,63,21,4,62,124,88,89,8,123,66,30,67,142,68,69,165,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,45,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,117,548,50,48,5,32,57,79,15,10,35,5,8,79,57,11,35,5,5,32,5,66,79,47,57,15,79,49,35,5,5,57,48,61,79,66,15,35,5,79,57,66,71,55,52,5,11,5,119,5,55,77,77,77,5,55,5,119,48,55,52,5,35,85,35,5,5,10,15,15,15,15,32,77,119,5,550,114,10,11,10,5,5,5,5,68,70,57,81,45,48,100,0,551,62,66,66,67,68,69,47,70,27,32,33,71,10,72,34,57,56,29,5,13,119,116,123,10,77,77,67,47,70,27,5,66,48,27,105,81,50,87,79,21,61,75,32,49,62,30,68,69,47,70,27,90,31,32,33,71,10,72,34,57,29,55,97,73,61,74,75,98,11,116,117,119,8,119,119,45,50,66,30,67,68,69,47,70,27,90,31,32,54,33,71,10,72,34,35,57,29,55,94,95,96,97,73,61,74,75,98,108,123,105,66,15,21,58,49,5,49,6,5,32,8,4,4,15,21,79,50,79,21,21,21,21,21,15,15,15,21,93,45,32,66,55,97,73,74,75,98,119,67,70,83,15,15,82,77,85,49,48,86,89,116,82,108,82,66,15,54,48,8,112,55,119,62,48,8,45,15,15,119,5,119,119,5,5,33,68,47,15,15,15,15,15,546,66,67,68,69,47,70,27,32,33,71,10,72,34,57,29,73,61,74,75,11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,27,116,32,45,8,8,8,15,66,15,15,48,32,11,99,89,89,89,89,82,6,235,15,50,67,68,69,47,70,27,32,54,1,33,71,10,72,34,57,97,74,98,11,50,100,65,55,15,15,15,62,98,549,48,110,35,82,5,5,157,0,50,21,50,100,95,15,15,15,21,85,83,25,49,48,86,82,79,87,63,21,88,89,8,66,30,67,68,69,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,52,109,110,111,112,113,114,115,116,117,49,85,15,82,11,99,61,11,8,21,21,89,85,83,25,15,140,49,50,48,86,203,82,79,87,204,63,21,4,62,124,88,89,8,123,66,30,67,142,68,69,165,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,45,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,117,85,83,25,15,140,49,50,48,86,203,82,79,87,204,63,21,4,62,124,88,89,8,123,66,30,67,142,68,69,165,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,45,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,117,5,67,68,69,47,27,32,54,1,33,71,34,35,55,61,75,98,27,5,5,85,83,25,15,140,49,50,48,86,203,82,79,87,204,63,21,4,62,124,88,89,8,123,66,30,67,142,68,69,165,47,70,27,90,31,32,3,54,1,33,71,10,72,34,35,91,57,56,29,92,93,55,94,95,96,97,73,61,74,75,98,11,99,46,81,5,45,6,76,13,100,101,102,103,104,105,58,77,65,106,107,108,157,143,52,109,110,111,112,119,113,114,115,116,117,15,15,15,15,10,93,34,49,48,21,70,33,71,21,47,47,8,550,66,30,67,68,69,47,70,27,32,33,71,10,72,34,57,29,62,89,5,110,119,21,105,552,552,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,423,252,254,255,256,257,258,259,2,423,2,423,22,138,422,138,138,422,138,422,138,422,279,553,280,281,282,283,284,285,286,287,288,554,419,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,555,422,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,556,423,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,257,258,259,279,553,280,281,282,283,284,285,286,287,288,554,419,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,555,422,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,556,423,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,257,258,259,2,423,2,423,252,254,255,256,257,258,259,252,254,255,256,257,258,259,259,138,422,2,423,2,423,2,423,2,423,138,422,138,138,422,138,422,138,138,422,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,138,422,138,422,252,254,255,256,257,258,259,252,254,255,256,257,258,259,138,422,22,138,422,2,423,138,422,138,422,138,422,138,422,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,257,258,259,419,422,423,2,423,2,2,423,419,422,423,279,553,280,281,282,283,284,285,286,287,288,554,419,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,555,422,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,556,423,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,256,257,257,258,258,259,259,252,254,255,256,257,258,259,138,422,138,422,2,423,138,422,2,423,2,423,252,254,255,256,257,258,259,22,138,422,138,422,2,423,2,423,2,423,138,422,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,2,423,2,2,423,2,423,2,423,420,419,420,419,2,423,2,423,420,419,420,419,420,419,420,419,2,423,420,419,2,423,2,423,420,419,22,420,419,420,419,420,419,420,419,420,419,420,419,420,419,2,423,420,419,279,553,280,281,282,283,284,285,286,287,288,554,419,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,555,422,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,556,423,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,257,258,259,138,422,2,423,2,423,420,419,420,419,2,423,2,423,420,419,420,419,420,419,420,419,2,423,420,419,2,423,2,423,420,419,22,420,419,420,419,420,419,420,419,420,419,420,419,420,419,2,423,420,419,138,422,22,22,22,22,138,422,419,422,423,2,423,2,423,2,423,2,423,419,422,423,2,22,22,22,22,259,138,422,2,423,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,138,279,2,423,138,138,138,422,138,422,138,422,2,423,2,423,252,254,255,256,257,258,259,138,422,138,422,138,422,2,423,2,423,2,2,423,2,423,2,423,2,2,423,279,553,280,281,282,283,284,285,286,287,288,554,419,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,555,422,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,556,423,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,257,258,259,279,553,280,281,282,283,284,285,286,287,288,554,419,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,555,422,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,556,423,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,257,258,259,2,423,138,422,279,553,280,281,282,283,284,285,286,287,288,554,419,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,555,422,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,556,423,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,252,254,255,256,257,258,259,138,422,138,422,2,423,138,422,138,422,0,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,0,130,531,512,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,522,529,514,507,504,505,506,507,508,509,510,511,504,505,506,507,508,509,510,511,514,515,516,504,505,506,507,508,509,510,511,504,505,506,507,508,509,510,511,510,513,529,531,157,512,513,523,524,525,526,521,531,520,525,527,527,524,527,528,157,143,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,522,529,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,157,157,157,143,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,504,512,521,508,508,532,533,504,508,509,511,523,527,505,506,511,523,524,528,505,506,507,508,509,510,511,517,518,519,507,504,504,508,509,510,523,524,530,532,534,157,504,505,506,507,508,509,510,511,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,534,130,512,513,514,515,516,504,505,506,507,508,509,510,511,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,530,537,537,537,537,538,537,538,537,538,0,0,0,0,537,537,0,0,537,537,537,537,216,535,536,438,537,538,216,535,536,438,537,538,216,216,535,536,535,536,535,438,536,535,536,438,537,535,536,438,537,216,535,536,438,537,538,216,535,536,438,537,538,216,537,438,438,535,536,438,537,538,216,535,216,216,216,535,438,0,216,536,535,536,535,536,438,537,538,216,535,536,438,537,538,216,535,536,438,537,538,216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,544,542,543,544,542,543,542,543,542,543,544,544,542,542,542,543,542,543,544,542,543,544,542,543,542,543,543,544,542,543,542,542,542,543,544,543,543,543,543,542,543,544,542,543,544,542,543,544,542,543],"fc":[],"p":[[3,"SelfParam"],[8,"HirDatabase"],[4,"Access"],[3,"TypeInfo"],[3,"Type"],[3,"Layout"],[15,"u64"],[3,"Crate"],[3,"Vec"],[3,"Trait"],[3,"Impl"],[3,"PerNs"],[4,"ScopeDef"],[3,"ArrayVec"],[3,"Semantics"],[6,"SyntaxNode"],[3,"TextSize"],[8,"Iterator"],[4,"RustLanguage"],[3,"SyntaxNode"],[3,"InFile"],[8,"ExpandDatabase"],[8,"Clone"],[3,"SyntaxToken"],[3,"CfgOptions"],[3,"CfgDiff"],[4,"Adt"],[4,"Option"],[4,"AssocItem"],[4,"ModuleDef"],[4,"DefWithBody"],[3,"Function"],[3,"Const"],[3,"TypeAlias"],[3,"BuiltinType"],[3,"MacroCall"],[3,"CrateData"],[3,"Idx"],[8,"Fn"],[3,"MacroCallId"],[4,"ExpandError"],[3,"ValueResult"],[3,"UnresolvedMacro"],[4,"Result"],[3,"Callable"],[3,"Closure"],[3,"Enum"],[3,"ModPath"],[3,"Name"],[3,"LocalSource"],[3,"IdentPat"],[4,"Mutability"],[15,"str"],[3,"Param"],[3,"Local"],[4,"ItemInNs"],[3,"Macro"],[3,"Documentation"],[3,"SmolStr"],[15,"usize"],[3,"TypeParam"],[3,"SemanticsScope"],[4,"PathResolution"],[8,"FnMut"],[3,"AttrsWithOwner"],[3,"Module"],[3,"Field"],[3,"Struct"],[3,"Union"],[3,"Variant"],[3,"Static"],[3,"TraitAlias"],[4,"GenericParam"],[3,"LifetimeParam"],[3,"ConstParam"],[4,"BindingMode"],[3,"Attrs"],[3,"AttrQuery"],[3,"HirFileId"],[3,"String"],[3,"ClosureCapture"],[3,"Attr"],[4,"CfgExpr"],[15,"bool"],[4,"CfgAtom"],[4,"PathKind"],[3,"MacroFile"],[4,"Namespace"],[4,"Safety"],[4,"VariantDef"],[4,"MacroKind"],[4,"AssocItemContainer"],[4,"GenericDef"],[3,"DeriveHelper"],[3,"BuiltinAttr"],[3,"ToolModule"],[3,"Label"],[3,"TypeOrConstParam"],[3,"TraitRef"],[3,"Adjustment"],[4,"Adjust"],[4,"AutoBorrow"],[3,"OverloadedDeref"],[4,"ItemContainer"],[3,"AttributeTemplate"],[4,"PointerCast"],[4,"StructKind"],[4,"LangItem"],[4,"ClosureStyle"],[4,"TypeRef"],[4,"LayoutError"],[4,"MirEvalError"],[4,"ModuleSource"],[4,"Visibility"],[4,"PrefixKind"],[4,"AdtId"],[4,"ModuleDefId"],[4,"Ordering"],[3,"DefMap"],[3,"ModuleData"],[3,"ModuleId"],[3,"Module"],[3,"CrateDependency"],[3,"VisibleTraits"],[4,"Adt"],[3,"FileAstId"],[6,"SyntaxToken"],[3,"SmallVec"],[8,"AstNode"],[4,"AnyDiagnostic"],[6,"SyntaxNodePtr"],[3,"FileRange"],[8,"Display"],[8,"Sized"],[3,"HirDisplayWrapper"],[3,"CrateDisplayName"],[4,"DisplaySourceCodeError"],[8,"DefDatabase"],[4,"Edition"],[4,"Origin"],[8,"PartialEq"],[4,"FieldSource"],[3,"IncoherentImpl"],[15,"i128"],[4,"ConstEvalError"],[4,"Item"],[3,"Attr"],[3,"ExpansionInfo"],[15,"u32"],[4,"Expr"],[3,"FileId"],[8,"Into"],[3,"Formatter"],[3,"Error"],[6,"Result"],[8,"Debug"],[3,"IncorrectCase"],[3,"FunctionId"],[3,"ProcMacroId"],[4,"FnTrait"],[6,"CrateId"],[3,"FieldId"],[3,"StructId"],[3,"UnionId"],[4,"HirDisplayError"],[3,"EnumId"],[3,"EnumVariantId"],[4,"VariantId"],[4,"DefWithBodyId"],[4,"Mutability"],[3,"ConstId"],[3,"StaticId"],[3,"TraitId"],[3,"TraitAliasId"],[3,"TypeAliasId"],[4,"BuiltinType"],[4,"MacroId"],[4,"ItemInNs"],[4,"AssocItemId"],[4,"GenericDefId"],[4,"GenericParamId"],[3,"TypeParamId"],[3,"LifetimeParamId"],[3,"ConstParamId"],[3,"TypeOrConstParamId"],[3,"ImplId"],[4,"CallableDefId"],[3,"Macro2Id"],[3,"MacroRulesId"],[3,"LowerCtx"],[4,"Type"],[8,"IntoIterator"],[3,"Path"],[3,"Hygiene"],[6,"FxHashSet"],[3,"AttrId"],[8,"Hasher"],[8,"Hash"],[3,"HirFormatter"],[4,"DisplayTarget"],[3,"MethodCallExpr"],[3,"RefExpr"],[4,"CaptureKind"],[4,"CallableKind"],[3,"LifetimeParamData"],[8,"FnOnce"],[3,"Name"],[3,"Lifetime"],[15,"u128"],[4,"CrateOrigin"],[3,"Subtree"],[3,"SourceFile"],[3,"ProcMacroDef"],[4,"Path"],[4,"Pat"],[3,"Query"],[3,"RecordExpr"],[3,"RecordPat"],[3,"ReprOptions"],[3,"AwaitExpr"],[3,"BinExpr"],[3,"ExternCrate"],[3,"FieldExpr"],[3,"IndexExpr"],[4,"Either"],[3,"PrefixExpr"],[3,"RecordExprField"],[3,"RecordPatField"],[3,"TryExpr"],[3,"Resolver"],[3,"DebruijnIndex"],[3,"NoSolution"],[3,"TokenId"],[3,"Ident"],[8,"HasSource"],[3,"Variant"],[3,"Param"],[3,"SelfParam"],[3,"Label"],[3,"AttrSourceMap"],[3,"TokenTree"],[3,"InternStorage"],[8,"FallibleTypeFolder"],[3,"TypeId"],[3,"UnescapedName"],[3,"UnescapedModPath"],[8,"TypeVisitor"],[4,"ControlFlow"],[3,"Interner"],[3,"AdtId"],[3,"Variances"],[3,"InternedTypeOrConstParamId"],[3,"InternId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedOpaqueTyId"],[3,"InternedClosureId"],[3,"InternedGeneratorId"],[3,"InternedCallableDefId"],[3,"AssocTypeId"],[3,"AssociatedTyDatum"],[3,"Arc"],[3,"AssociatedTyValueId"],[3,"AssociatedTyValue"],[3,"AstIdMap"],[3,"Arc"],[4,"AttrDefId"],[3,"BlockId"],[3,"Body"],[4,"MirLowerError"],[3,"CallableSig"],[3,"Binders"],[3,"ConstData"],[4,"GeneralConstId"],[3,"Substitution"],[3,"Const"],[3,"Ty"],[3,"LangItems"],[3,"CrateLimits"],[3,"AstIdMapQuery"],[3,"ParseMacroExpansionQuery"],[3,"InternMacroCallQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"ExpandProcMacroQuery"],[3,"ParseMacroExpansionErrorQuery"],[3,"HygieneFrameQuery"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTraitAliasQuery"],[3,"InternTraitAliasLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternExternBlockQuery"],[3,"InternExternBlockLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"InternMacro2Query"],[3,"InternMacro2LookupQuery"],[3,"InternProcMacroQuery"],[3,"InternProcMacroLookupQuery"],[3,"InternMacroRulesQuery"],[3,"InternMacroRulesLookupQuery"],[3,"InternAnonymousConstQuery"],[3,"InternAnonymousConstLookupQuery"],[3,"ExpandProcAttrMacrosQuery"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"StructDataWithDiagnosticsQuery"],[3,"UnionDataQuery"],[3,"UnionDataWithDiagnosticsQuery"],[3,"EnumDataQuery"],[3,"EnumDataWithDiagnosticsQuery"],[3,"ImplDataQuery"],[3,"ImplDataWithDiagnosticsQuery"],[3,"TraitDataQuery"],[3,"TraitDataWithDiagnosticsQuery"],[3,"TraitAliasDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"Macro2DataQuery"],[3,"MacroRulesDataQuery"],[3,"ProcMacroDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[3,"ConstVisibilityQuery"],[3,"CrateLangItemsQuery"],[3,"CrateSupportsNoStdQuery"],[3,"InferQueryQuery"],[3,"MirBodyQuery"],[3,"MirBodyForClosureQuery"],[3,"MonomorphizedMirBodyQuery"],[3,"MonomorphizedMirBodyForClosureQuery"],[3,"BorrowckQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ConstEvalQuery"],[3,"ConstEvalStaticQuery"],[3,"ConstEvalDiscriminantQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"LayoutOfAdtQuery"],[3,"LayoutOfTyQuery"],[3,"TargetDataLayoutQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"InherentImplsInBlockQuery"],[3,"IncoherentInherentImplCratesQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInBlockQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeOrConstParamIdQuery"],[3,"InternTypeOrConstParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"InternGeneratorQuery"],[3,"InternGeneratorLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[3,"EnumData"],[3,"ExprScopes"],[3,"FieldData"],[3,"ArenaMap"],[3,"TupleField"],[3,"AstPtr"],[3,"RecordField"],[3,"ItemTree"],[3,"InternDatabaseGroupStorage__"],[8,"InternDatabase"],[3,"DatabaseKeyIndex"],[3,"DefDatabaseGroupStorage__"],[3,"HirDatabaseGroupStorage__"],[3,"FnDefId"],[3,"FnDefDatum"],[3,"Runtime"],[3,"OpaqueTyId"],[3,"ClosureId"],[3,"GeneratorId"],[3,"FunctionData"],[3,"GenericParams"],[3,"Interned"],[3,"HygieneFrame"],[3,"ImplData"],[3,"ImplId"],[3,"ImplDatum"],[3,"TraitRef"],[3,"ImportMap"],[3,"QueryTable"],[3,"QueryTableMut"],[4,"TyFingerprint"],[3,"InferenceResult"],[3,"InherentImpls"],[3,"AnonymousConstId"],[3,"BlockLoc"],[3,"Const"],[3,"AssocItemLoc"],[3,"Enum"],[3,"ItemLoc"],[3,"ExternBlock"],[3,"ExternBlockId"],[3,"Function"],[3,"Impl"],[4,"ImplTraitId"],[3,"Macro2Loc"],[3,"MacroCallLoc"],[3,"MacroRulesLoc"],[3,"ProcMacroLoc"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"TraitAlias"],[3,"TypeAlias"],[3,"Union"],[4,"LangItemTarget"],[3,"RustcEnumVariantIdx"],[3,"LayoutS"],[3,"Macro2Data"],[3,"GreenNode"],[3,"MacroDefId"],[4,"TokenExpander"],[4,"ParseError"],[3,"MacroRulesData"],[3,"Revision"],[3,"MirBody"],[3,"TraitEnvironment"],[15,"u16"],[3,"ProjectionTy"],[3,"Global"],[3,"Box"],[3,"Parse"],[3,"ProcMacroData"],[3,"Environment"],[3,"ProgramClauses"],[3,"ReturnTypeImplTraits"],[3,"Durability"],[3,"StaticData"],[3,"StructData"],[3,"AdtDatum"],[3,"TargetDataLayout"],[3,"TraitAliasData"],[3,"TraitData"],[3,"TraitId"],[3,"TraitDatum"],[3,"TraitImpls"],[3,"Goal"],[3,"InEnvironment"],[3,"Canonical"],[4,"Solution"],[4,"TyDefId"],[3,"TypeAliasData"],[4,"ValueTyDefId"],[3,"EnumVariantData"],[3,"UnresolvedMacroCall"],[3,"UnreachableLabel"],[3,"UndeclaredLabel"],[3,"InactiveCode"],[3,"UnresolvedProcMacro"],[3,"MacroError"],[3,"MacroExpansionParseError"],[3,"MacroDefError"],[3,"BreakOutsideOfLoop"],[3,"TypedHole"],[3,"UnresolvedModule"],[3,"UnresolvedExternCrate"],[3,"UnresolvedImport"],[3,"UnimplementedBuiltinMacro"],[3,"InvalidDeriveTarget"],[3,"MalformedDerive"],[3,"NoSuchField"],[3,"PrivateAssocItem"],[3,"ExpectedFunction"],[3,"UnresolvedField"],[3,"UnresolvedMethodCall"],[3,"PrivateField"],[3,"MissingUnsafe"],[3,"MissingFields"],[3,"ReplaceFilterMapNextWithFindMap"],[3,"MismatchedArgCount"],[3,"MissingMatchArms"],[3,"TypeMismatch"],[3,"NeedMut"],[3,"UnusedMut"],[3,"MovedOutOfRef"],[3,"ImportInfo"],[3,"ImportPath"],[4,"ImportKind"],[4,"SearchMode"],[3,"FxHasher"],[3,"BuildHasherDefault"],[3,"HashSet"],[3,"FileSymbol"],[3,"DeclarationLocation"],[3,"SymbolCollector"],[8,"AsAssocItem"],[8,"HasAttrs"],[8,"HasContainer"],[8,"HirDisplay"],[8,"HirWrite"],[8,"HasVisibility"],[8,"HasCrate"],[13,"KeyValue"],[3,"ExpandDatabaseStorage"],[3,"InternDatabaseStorage"],[3,"DefDatabaseStorage"],[3,"HirDatabaseStorage"]]},\
"hir_def":{"doc":"<code>hir_def</code> crate contains everything between macro expansion …","t":"ENNNDNIEDEDDNNNNNDNNNNNNDNQNEDNGDNNNNDNNDNDNNNNNEEENIDNNNEDDNGGGGGIDNDEENNDNDEDNNNDNDDNNNGDNNDNNNGDNNNNGDNNNNDDNDNNGENLMMLKLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLAALALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAMLLACLLMMMMMMKLLLLLLLLLLLLLLLAFKLLLLLLLLLLLALLMMMMLLLLLLLLLLLAAALLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLANNDDDDEEDDSNNNLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDRRLLLLLLFLLLLMMMMLLLLLLLMDEDGGGGNGGNGGDNNNNMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLMLMLLALLLLLLLLLLLLLLLLMMMMMMMMMMMMMDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSNEEEENNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLILKDDDDDDDDDDMALLLLMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLMMMMMLMMMMLMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMDDDSSSSSSSNNDDENNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMMMDDDDDDDDDDIDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDKMKKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKKMKMKKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMKMLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKKKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMDQDDIQLLLLLLLLLLLLKLLLKLLLLKLALLLLLLLLLLRDRRRRRRGRRRRRRRRRRRRRRLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLNNNELLLLLLFFLLLLLLLNDNNDNDNNNEDNNENEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLMMMMMMMMNNENENNNNNENNDEGENNNNNNNNNNNNNENNNNEENNNNNNNNNNENGNENNDNNNNNNDGNNNNENNEENNNDNNNENNNNNNNNNEEGNNNNNENDNDNNNNNNNNNNNENNNNNNNNENNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNEENNNNNNNNDNNNENNNNNNNNENNNNNEDNEENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNDEDDNNDENNNNLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLFLMLLLLLLLLLLLLLLLLLLLLEDNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEDNNDNDNDNDNEEDDNNNNDNDNENDDIDNNDNDNDNENENNSSSENNNDNNNQDNDNNDNDNDNNDNNNDNNDENDNMMMLKLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMKLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNEEDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLDLLMLLLLLLLLNNNNNDNNENDEESNALLLLLLLLLLMLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMALLLLMLLLLLLLLLLLLLLLLLLMLMMMMMMMMNNELLLLLLLDENNNNNNNNNNNNLLLLLLLLLLLLMLLMLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMNNNDELLLLLLLLLLLLLLMMLLLLLLMNNDNNNSEDENNDNEEDDNNNNMMMLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMDLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLMLNNNNNNNNNNNINNNNNNNEDENNNNNNENDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFFLLLLLLLLLLLLLLLLLLLLLLLLLLLIIQQKKNNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AdtId","AdtId","AdtId","AdtId","AnonymousConstId","AnonymousConstId","AsMacroCall","AssocItemId","AssocItemLoc","AttrDefId","BlockId","BlockLoc","BuiltIn","BuiltInAttr","BuiltInDerive","BuiltInEager","BuiltinType","ConstId","ConstId","ConstId","ConstId","ConstId","ConstId","ConstId","ConstParamId","ConstParamId","Data","Declarative","DefWithBodyId","EnumId","EnumId","EnumLoc","EnumVariantId","EnumVariantId","EnumVariantId","EnumVariantId","EnumVariantId","ExternBlockId","ExternBlockId","ExternBlockId","FieldId","FieldId","FunctionId","FunctionId","FunctionId","FunctionId","FunctionId","FunctionId","GeneralConstId","GenericDefId","GenericParamId","GenericParamId","HasModule","ImplId","ImplId","ImplId","ImplId","ItemContainerId","ItemLoc","LifetimeParamId","LifetimeParamId","LocalEnumVariantId","LocalFieldId","LocalLifetimeParamId","LocalModuleId","LocalTypeOrConstParamId","Lookup","Macro2Id","Macro2Id","Macro2Loc","MacroExpander","MacroId","MacroId","MacroId","MacroRulesId","MacroRulesId","MacroRulesLoc","ModuleDefId","ModuleId","ModuleId","ModuleId","ModuleId","ProcMacroId","ProcMacroId","ProcMacroLoc","StaticId","StaticId","StaticId","StaticId","StaticLoc","StructId","StructId","StructId","TraitAliasId","TraitAliasId","TraitAliasId","TraitAliasId","TraitAliasLoc","TraitId","TraitId","TraitId","TraitId","TraitId","TraitLoc","TypeAliasId","TypeAliasId","TypeAliasId","TypeAliasId","TypeAliasId","TypeOrConstParamId","TypeParamId","TypeParamId","UnionId","UnionId","UnionId","UnionLoc","VariantId","VariantId","adt_id","allow_internal_unsafe","allow_internal_unsafe","as_call_id","as_call_id_with_errors","as_generic_def_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_mod_item","attr","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_type","child_by_source","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_source","child_source","child_source","child_source","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","container","container","container","container","container","containing_block","containing_module","data","db","def_map","dyn_map","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expander","expander","expander","expander","file_id","find_path","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_unchecked","from_unchecked","generic_def","generics","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir","id","id","id","id","id","import_map","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_attribute","item_scope","item_tree","kind","krate","krate","lang_item","layout","local_id","local_id","local_id","local_id","local_id","local_id","local_id","local_inner","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lower","macro_id_to_def_id","module","module","module","module","module","module","module","module","module","module","module","name","nameres","parent","parent","parent","parent","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","per_ns","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","source","source","source","source","source","src","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","variant_data","visibility","Alias","Atom","AttrQuery","AttrSourceMap","Attrs","AttrsWithOwner","DocAtom","DocExpr","DocsRangeMap","Documentation","EMPTY","Flag","Invalid","KeyValue","aliases","as_str","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin","by_key","cfg","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","doc_aliases","doc_exprs","docs","docs_with_rangemap","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","exists","find_string_value_in_tt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","has_doc_hidden","hash","hash","hash","into","into","into","into","into","into","into","into","is_proc_macro","is_proc_macro_attribute","is_proc_macro_derive","is_unstable","lang","lang_item","map","new","parse_proc_macro_decl","partial_cmp","source_map","source_of","string_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_values","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","key","value","AttributeTemplate","BuiltinAttribute","INERT_ATTRIBUTES","TOOL_MODULES","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","find_builtin_attr_idx","from","from","into","into","list","name","name_value_str","template","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","word","Body","BodyDiagnostic","BodySourceMap","ExprPtr","ExprSource","FieldPtr","FieldSource","InactiveCode","LabelPtr","LabelSource","MacroError","PatPtr","PatSource","SyntheticSyntax","UndeclaredLabel","UnreachableLabel","UnresolvedMacroCall","UnresolvedProcMacro","bindings","blocks","body_expr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","default","diagnostics","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expr_syntax","exprs","field_syntax","fmt","fmt","fmt","fmt","from","from","from","from","index","index","index","index","into","into","into","into","label_syntax","labels","macro_expansion_expr","node_expr","node_field","node_label","node_macro_file","node_pat","node_self_param","params","pat_syntax","pats","pretty_print","pretty_print_expr","scope","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","walk_bindings_in_pat","walk_pats","walk_pats_shallow","cfg","krate","message","name","name","node","node","node","node","node","node","opts","path","ExprScopes","ScopeData","ScopeEntry","ScopeId","binding","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","entries","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","label","name","resolve_name_in_scope","scope_by_expr","scope_chain","scope_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ALL","Bool","BuiltinFloat","BuiltinInt","BuiltinType","BuiltinUint","Char","F32","F64","Float","I128","I16","I32","I64","I8","Int","Isize","Str","U128","U16","U32","U64","U8","Uint","Usize","as_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_name","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_suffix","from_suffix","from_suffix","hash","hash","hash","hash","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ChildBySource","child_by_source","child_by_source_to","ConstData","FunctionData","ImplData","Macro2Data","MacroRulesData","ProcMacroData","StaticData","TraitAliasData","TraitData","TypeAliasData","abi","adt","associated_type_by_name","associated_types","attribute_calls","attribute_calls","attribute_calls","attribute_calls","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","fundamental","has_async_kw","has_body","has_const_kw","has_default_kw","has_self_param","has_unsafe_kw","helpers","helpers","into","into","into","into","into","into","into","into","into","into","is_auto","is_extern","is_extern","is_negative","is_unsafe","is_varargs","items","items","legacy_const_generics_indices","macro_export","method_by_name","mutable","name","name","name","name","name","name","name","name","name","params","ret_type","rustc_allow_incoherent_impl","rustc_allow_incoherent_impl","rustc_allow_incoherent_impl","rustc_has_incoherent_inherent_impls","rustc_has_incoherent_inherent_impls","self_ty","skip_array_during_method_dispatch","target_trait","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","type_ref","type_ref","visibility","visibility","visibility","visibility","visibility","visibility","visibility","EnumData","EnumVariantData","FieldData","IS_BOX","IS_FUNDAMENTAL","IS_MANUALLY_DROP","IS_PHANTOM_DATA","IS_RUSTC_HAS_INCOHERENT_INHERENT_IMPL","IS_UNSAFE_CELL","NO_FLAGS","Record","Record","StructData","StructFlags","StructKind","Tuple","Tuple","Unit","Unit","VariantData","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","contains","contains","difference","empty","empty","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","field","fields","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","insert","insert","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","kind","name","name","name","name","not","remove","remove","repr","repr","rustc_has_incoherent_inherent_impls","set","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","union","variant","variant_body_type","variant_data","variant_data","variants","visibility","visibility","visibility","AttrsQuery","BlockDefMapQuery","BodyQuery","BodyWithSourceMapQuery","ConstDataQuery","ConstVisibilityQuery","CrateDefMapQueryQuery","CrateLangItemsQuery","CrateLimits","CrateSupportsNoStdQuery","DefDatabase","DefDatabaseGroupStorage__","DefDatabaseStorage","EnumDataQuery","EnumDataWithDiagnosticsQuery","ExpandProcAttrMacrosQuery","ExprScopesQuery","FieldVisibilitiesQuery","FieldsAttrsQuery","FieldsAttrsSourceMapQuery","FileItemTreeQuery","FunctionDataQuery","FunctionVisibilityQuery","GenericParamsQuery","ImplDataQuery","ImplDataWithDiagnosticsQuery","ImportMapQuery","InternAnonymousConstLookupQuery","InternAnonymousConstQuery","InternBlockLookupQuery","InternBlockQuery","InternConstLookupQuery","InternConstQuery","InternDatabase","InternDatabaseGroupStorage__","InternDatabaseStorage","InternEnumLookupQuery","InternEnumQuery","InternExternBlockLookupQuery","InternExternBlockQuery","InternFunctionLookupQuery","InternFunctionQuery","InternImplLookupQuery","InternImplQuery","InternMacro2LookupQuery","InternMacro2Query","InternMacroRulesLookupQuery","InternMacroRulesQuery","InternProcMacroLookupQuery","InternProcMacroQuery","InternStaticLookupQuery","InternStaticQuery","InternStructLookupQuery","InternStructQuery","InternTraitAliasLookupQuery","InternTraitAliasQuery","InternTraitLookupQuery","InternTraitQuery","InternTypeAliasLookupQuery","InternTypeAliasQuery","InternUnionLookupQuery","InternUnionQuery","LangItemQuery","Macro2DataQuery","MacroRulesDataQuery","ProcMacroDataQuery","StaticDataQuery","StructDataQuery","StructDataWithDiagnosticsQuery","TraitAliasDataQuery","TraitDataQuery","TraitDataWithDiagnosticsQuery","TypeAliasDataQuery","UnionDataQuery","UnionDataWithDiagnosticsQuery","VariantsAttrsQuery","VariantsAttrsSourceMapQuery","attrs","attrs","attrs_with_owner","block_def_map","block_def_map","body","body","body_with_source_map","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","const_data","const_data","const_visibility","const_visibility","crate_def_map","crate_def_map_query","crate_def_map_query","crate_lang_items","crate_lang_items","crate_limits","crate_supports_no_std","crate_supports_no_std","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","enum_data","enum_data","enum_data_with_diagnostics","enum_data_with_diagnostics","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","expand_proc_attr_macros","expand_proc_attr_macros","expr_scopes","expr_scopes","field_visibilities","field_visibilities","fields_attrs","fields_attrs","fields_attrs_source_map","fields_attrs_source_map","file_item_tree","file_item_tree","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_data","function_data","function_visibility","function_visibility","generic_params","generic_params","impl_data","impl_data","impl_data_with_diagnostics","impl_data_with_diagnostics","import_map","import_map","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","intern_anonymous_const","intern_anonymous_const","intern_block","intern_block","intern_const","intern_const","intern_enum","intern_enum","intern_extern_block","intern_extern_block","intern_function","intern_function","intern_impl","intern_impl","intern_macro2","intern_macro2","intern_macro_rules","intern_macro_rules","intern_proc_macro","intern_proc_macro","intern_static","intern_static","intern_struct","intern_struct","intern_trait","intern_trait","intern_trait_alias","intern_trait_alias","intern_type_alias","intern_type_alias","intern_union","intern_union","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lang_item","lang_item","lookup_intern_anonymous_const","lookup_intern_anonymous_const","lookup_intern_block","lookup_intern_block","lookup_intern_const","lookup_intern_const","lookup_intern_enum","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_extern_block","lookup_intern_function","lookup_intern_function","lookup_intern_impl","lookup_intern_impl","lookup_intern_macro2","lookup_intern_macro2","lookup_intern_macro_rules","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_static","lookup_intern_struct","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait","lookup_intern_trait_alias","lookup_intern_trait_alias","lookup_intern_type_alias","lookup_intern_type_alias","lookup_intern_union","lookup_intern_union","macro2_data","macro2_data","macro_rules_data","macro_rules_data","maybe_changed_since","maybe_changed_since","new","new","proc_macro_data","proc_macro_data","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","recursion_limit","recursion_limit","set_expand_proc_attr_macros","set_expand_proc_attr_macros_with_durability","static_data","static_data","struct_data","struct_data","struct_data_with_diagnostics","struct_data_with_diagnostics","trait_alias_data","trait_alias_data","trait_data","trait_data","trait_data_with_diagnostics","trait_data_with_diagnostics","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_alias_data","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","union_data","union_data_with_diagnostics","union_data_with_diagnostics","variants_attrs","variants_attrs","variants_attrs_source_map","variants_attrs_source_map","DynMap","K","Key","KeyMap","Policy","V","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","from","from","from","get","get","index","index_mut","insert","insert","into","into","into","is_empty","is_empty","keys","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ATTR_MACRO_CALL","AstPtrPolicy","CONST","CONST_PARAM","DERIVE_MACRO_CALL","ENUM","FUNCTION","IMPL","Key","LIFETIME_PARAM","MACRO2","MACRO_RULES","PROC_MACRO","RECORD_FIELD","STATIC","STRUCT","TRAIT","TRAIT_ALIAS","TUPLE_FIELD","TYPE_ALIAS","TYPE_PARAM","UNION","VARIANT","borrow","borrow_mut","from","get","insert","into","is_empty","try_from","try_into","type_id","Expander","Mark","borrow","borrow","borrow_mut","borrow_mut","ctx","current_file_id","enter_expand","enter_expand_id","exit","fmt","fmt","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","ByCrate","BySelf","Plain","PrefixKind","borrow","borrow_mut","clone","clone_into","eq","equivalent","find_path","find_path_prefixed","fmt","from","into","to_owned","try_from","try_into","type_id","ArgumentImplTrait","ConstParamData","ConstParamData","ForLifetime","GenericParams","Lifetime","LifetimeParamData","TraitSelf","TypeBound","TypeOrConstParam","TypeOrConstParamData","TypeParamData","TypeParamData","TypeParamList","TypeParamProvenance","TypeRef","WherePredicate","WherePredicateTypeTarget","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","const_param","default","default","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_const_by_name","find_trait_self_param","find_type_by_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","has_default","has_default","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_trait_self","iter","lifetimes","name","name","name","name","provenance","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_or_consts","type_param","where_predicates","bound","bound","bound","lifetimes","target","target","target","Add","And","ArithOp","ArithOp","Array","Array","Assignment","Async","Async","Await","BinaryOp","BinaryOp","Bind","Binding","BindingAnnotation","BindingId","BindingProblems","BitAnd","BitOr","BitXor","Block","Bool","BoundInconsistently","BoundMoreThanOnce","Box","Box","Break","ByteString","CString","Call","CaptureBy","Cast","Char","Closure","Closure","ClosureKind","CmpOp","CmpOp","Const","Const","ConstBlock","Continue","Deref","Div","ElementList","Eq","Exclusive","Expr","Expr","ExprId","ExprId","ExprOrPatId","Field","Float","FloatTypeWrapper","Generator","Greater","If","Inclusive","Index","Int","Label","LabelId","Less","Let","Let","Lit","Literal","Literal","Literal","LiteralOrConst","LogicOp","LogicOp","Loop","Match","MatchArm","MethodCall","Missing","Missing","Movability","Movable","Mul","Mutable","Neg","Not","NotBoundAcrossAll","Or","Or","Ord","Ordering","Pat","PatId","PatId","Path","Path","Range","Range","RangeOp","Record","RecordFieldPat","RecordLit","RecordLitField","Ref","Ref","Ref","Ref","RefMut","Rem","Repeat","Return","Shl","Shr","Slice","Statement","Static","String","Sub","Tuple","Tuple","TupleStruct","Uint","Unannotated","UnaryOp","UnaryOp","Underscore","Unsafe","Value","While","Wild","Yeet","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","definitions","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","expr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","guard","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_f32","into_f64","is_upvar","mode","name","name","name","name","negate","new","new","owner","pat","pat","problems","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","walk_child_exprs","walk_child_pats","elements","initializer","is_assignee_expr","repeat","op","negated","ordering","strict","arg_types","args","args","args","arms","base","body","body","body","callee","capture_by","closure_kind","condition","condition","ellipsis","else_branch","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","exprs","fields","generic_args","id","id","id","index","is_assignee_expr","is_assignee_expr","is_assignee_expr","label","label","label","label","label","lhs","lhs","method_name","mutability","name","op","op","pat","path","range_type","rawness","receiver","ret_type","rhs","rhs","spread","statements","statements","statements","tail","tail","tail","then_branch","type_ref","args","args","args","ellipsis","ellipsis","ellipsis","end","id","inner","mutability","pat","path","path","prefix","slice","start","subpat","suffix","else_branch","expr","has_semi","initializer","pat","type_ref","Array","Bool","Char","ConstRef","ConstRefOrPath","DynTrait","Error","Error","Fn","ForLifetime","ImplTrait","Int","Lifetime","LifetimeRef","Macro","Maybe","Mut","Mutability","Never","None","Path","Path","Path","Placeholder","RawPtr","RawPtr","Rawness","Ref","Reference","Scalar","Shared","Slice","TraitBoundModifier","TraitRef","Tuple","TypeBound","TypeRef","UInt","Unknown","as_keyword_for_ptr","as_keyword_for_ref","as_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","display","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ast","from_mutable","from_raw","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_mut","is_raw","is_shared","missing","name","path","storage","storage","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","walk","Adt","AssociatedItem","BuiltinType","Const","Contains","EnumVariant","Equals","Function","Fuzzy","ImportInfo","ImportKind","ImportMap","ImportPath","Macro","Module","Query","SearchMode","Static","Trait","TraitAlias","TypeAlias","assoc_items_only","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","clone","clone","clone_into","clone_into","container","default","display","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exclude_import_kind","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","import_info_for","import_map_query","into","into","into","into","into","into","is_trait_assoc_item","limit","name_only","new","path","path_of","search_dependencies","search_mode","segments","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ItemInNs","ItemScope","Macros","PerNsGlobImports","Types","Values","as_module_def_id","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","child_by_source_to","clone","clone_into","declarations","default","default","entries","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","hash","impls","into","into","into","krate","legacy_macros","module","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","unnamed_consts","values","AssocItem","AttrOwner","Const","Const","Const","Enum","Enum","ExternBlock","ExternBlock","ExternCrate","ExternCrate","Field","Field","FieldAstId","Fields","FileItemTreeId","Function","Function","Function","Glob","Glob","Impl","Impl","Import","Import","ImportKind","Inline","ItemTree","ItemTreeId","ItemTreeNode","MacroCall","MacroCall","MacroCall","MacroDef","MacroDef","MacroRules","MacroRules","Mod","Mod","ModItem","ModItem","ModKind","Normal","Outline","PRIV","PUB","PUB_CRATE","Param","Param","Plain","Prefixed","RawVisibilityId","Record","Record","Single","Source","Static","Static","Struct","Struct","TopLevel","Trait","Trait","TraitAlias","TraitAlias","TreeId","Tuple","Tuple","TypeAlias","TypeAlias","TypeAlias","TypeOnly","Union","Union","Unit","UseTree","UseTreeKind","Varargs","Variant","Variant","abi","abi","alias","as_assoc_item","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","downcast","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expand","expand_to","explicit_generic_params","fields","fields","fields","file_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generic_params","generic_params","generic_params","generic_params","generic_params","generic_params","generic_params","hash","hash","hash","hash","hash","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_auto","is_negative","is_unsafe","item_tree","items","items","kind","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","mutable","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","new","params","path","pretty_print","ret_type","self_ty","target_trait","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_level_attrs","top_level_items","tree_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","type_ref","type_ref","type_ref","use_tree","use_tree_to_ast","value","variants","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","items","alias","list","path","path","prefix","Add","AddAssign","AlignOffset","AllocLayout","BeginPanic","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","BoxFree","CStr","CVoid","Clone","CoerceUnsized","ConstPanicFmt","ConstParamTy","Context","ControlFlowBreak","ControlFlowContinue","Copy","Deref","DerefMut","DerefTarget","Destruct","Discriminant","DiscriminantKind","DispatchFromDyn","Div","DivAssign","Drop","DropInPlace","DynMetadata","EhCatchTypeinfo","EhPersonality","EnumId","EnumVariant","Exact","ExchangeMalloc","Fn","FnMut","FnOnce","FnOnceOutput","FnPtrAddr","FnPtrTrait","FormatAlignment","FormatArgument","FormatArguments","FormatCount","FormatPlaceholder","FormatUnsafeArg","Freeze","Function","Future","FuturePoll","Generator","GeneratorState","GenericRequirement","GetContext","ImplDef","Index","IndexMut","IntoFutureIntoFuture","IntoIterIntoIter","IteratorNext","LangItem","LangItemTarget","LangItems","ManuallyDrop","MaybeUninit","Metadata","Minimum","Mul","MulAssign","Neg","None","Not","Option","OptionNone","OptionSome","OwnedBox","Panic","PanicBoundsCheck","PanicCannotUnwind","PanicDisplay","PanicFmt","PanicImpl","PanicInfo","PanicLocation","PanicMisalignedPointerDereference","PanicNounwind","PartialEq","PartialOrd","PhantomData","Pin","PinNewUnchecked","PointeeTrait","PointerLike","Poll","PollPending","PollReady","Range","RangeFrom","RangeFull","RangeInclusiveNew","RangeInclusiveStruct","RangeTo","RangeToInclusive","Receiver","Rem","RemAssign","ResultErr","ResultOk","ResumeTy","Shl","ShlAssign","Shr","ShrAssign","Sized","SliceLen","Start","Static","String","Struct","StructuralPeq","StructuralTeq","Sub","SubAssign","Sync","Termination","Trait","TransmuteOpts","TransmuteTrait","Try","TryTraitBranch","TryTraitFromOutput","TryTraitFromResidual","TryTraitFromYeet","Tuple","TypeAlias","Union","Unpin","UnsafeCell","Unsize","VaList","as_enum","as_enum_variant","as_function","as_impl_def","as_static","as_struct","as_trait","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_name","from_str","hash","hash","into","into","into","into","lang_attr","name","path","target","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","LowerCtx","borrow","borrow_mut","db","from","into","new","try_from","try_into","type_id","with_file_id","with_hygiene","Attr","Bang","BlockExpr","BlockExpr","CrateRoot","DefMap","File","Inline","MacroSubNs","Module","ModuleData","ModuleOrigin","ModuleSource","ROOT","SourceFile","attr_resolution","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone_into","clone_into","clone_into","containing_module","declaration","declaration_source","definition_source","derive_helpers_in_scope","diagnostics","diagnostics","dump","dump_block_scopes","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","file_id","fmt","fmt","fmt","fmt","fn_as_proc_macro","from","from","from","from","from","hash","index","into","into","into","into","into","is_inline","is_no_std","is_rustc_coherence_is_core","is_unstable_feature_enabled","krate","module_id","modules","modules_for_file","origin","parent","parent","proc_macro","proc_macro_loading_error","recursion_limit","registered_attrs","registered_tools","scope","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","visibility","with_ancestor_maps","block","declaration","declaration_tree_id","definition","definition","definition","definition_tree_id","is_mod_rs","Macro","Other","ResolvedAttr","borrow","borrow_mut","from","into","try_from","try_into","type_id","DefDiagnostic","DefDiagnosticKind","InvalidDeriveTarget","MacroDefError","MacroError","MacroExpansionParseError","MalformedDerive","UnconfiguredCode","UnimplementedBuiltinMacro","UnresolvedExternCrate","UnresolvedImport","UnresolvedMacroCall","UnresolvedModule","UnresolvedProcMacro","borrow","borrow","borrow_mut","borrow_mut","eq","eq","equivalent","equivalent","fmt","fmt","from","from","in_module","into","into","kind","try_from","try_from","try_into","try_into","type_id","type_id","unconfigured_code","ast","ast","ast","ast","ast","ast","ast","ast","ast","ast","ast","candidates","cfg","errors","id","id","id","index","krate","message","message","opts","path","Attr","CustomDerive","FnLike","ProcMacroDef","ProcMacroKind","borrow","borrow","borrow_mut","borrow_mut","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","kind","name","try_from","try_from","try_into","try_into","type_id","type_id","helpers","Abs","Alias","AssociatedTypeBinding","Const","Crate","DollarCrate","EMPTY","GenericArg","GenericArgs","ImportAlias","LangItem","Lifetime","ModPath","Normal","Path","PathKind","PathSegment","PathSegments","Plain","Super","Type","Underscore","args","args","args_and_bindings","as_ident","bindings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","desugared_from_fn","display","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_known_path","from_known_path_with_no_generic","from_segments","from_src","from_src","get","has_self_type","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_Self","is_empty","is_ident","is_self","is_self_type","iter","kind","kind","last","len","len","mod_path","name","name","partial_cmp","partial_cmp","path","pop_segment","push_segment","qualifier","segments","segments","skip","storage","storage","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_anchor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","unescaped","generic_args","mod_path","type_anchor","PerNs","borrow","borrow_mut","both","clone","clone_into","default","eq","equivalent","filter_visibility","fmt","from","hash","into","is_full","is_none","iter_items","macros","macros","none","or","or_else","take_macros","take_types","take_types_vis","take_values","to_owned","try_from","try_into","type_id","types","types","values","values","with_visibility","AdtId","AdtSelfType","AdtSelfType","BuiltinType","ConstId","EnumVariantId","EnumVariantId","FunctionId","GenericParam","GenericParam","GenericParam","HasResolver","ImplSelf","ImplSelfType","Label","Local","LocalBinding","ModuleDef","Partial","ResolveValueResult","Resolver","ScopeDef","SelfType","StaticId","StructId","TraitAliasId","TraitId","TypeAliasId","TypeNs","Unknown","UpdateGuard","ValueNs","ValueNs","body_owner","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","def_map","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","generic_def","generic_params","hash","hash","hash","into","into","into","into","into","into","krate","module","names_in_scope","reset_to_guard","resolve_known_enum","resolve_known_struct","resolve_known_trait","resolve_module_path_in_items","resolve_module_path_in_trait_assoc_items","resolve_path_as_macro","resolve_path_in_type_ns","resolve_path_in_type_ns_fully","resolve_path_in_value_ns","resolve_path_in_value_ns_fully","resolve_visibility","resolver","resolver_for_expr","resolver_for_scope","to_owned","to_owned","to_owned","to_owned","to_owned","traits_in_scope","traits_in_scope_from_block_scopes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_to_inner_scope","where_predicates_in_scope","HasChildSource","HasSource","Value","Value","child_source","source","Module","Module","Public","Public","RawVisibility","Visibility","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","into","into","is_visible_from","resolve","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"hir_def"],[955,"hir_def::attr"],[1097,"hir_def::attr::DocAtom"],[1099,"hir_def::attr::builtin"],[1126,"hir_def::body"],[1219,"hir_def::body::BodyDiagnostic"],[1232,"hir_def::body::scope"],[1275,"hir_def::builtin_type"],[1375,"hir_def::child_by_source"],[1378,"hir_def::data"],[1578,"hir_def::data::adt"],[1764,"hir_def::db"],[2908,"hir_def::dyn_map"],[2948,"hir_def::dyn_map::keys"],[2981,"hir_def::expander"],[3005,"hir_def::find_path"],[3024,"hir_def::generics"],[3177,"hir_def::generics::WherePredicate"],[3184,"hir_def::hir"],[3684,"hir_def::hir::Array"],[3688,"hir_def::hir::BinaryOp"],[3689,"hir_def::hir::CmpOp"],[3692,"hir_def::hir::Expr"],[3759,"hir_def::hir::Pat"],[3777,"hir_def::hir::Statement"],[3783,"hir_def::hir::type_ref"],[3969,"hir_def::import_map"],[4070,"hir_def::item_scope"],[4121,"hir_def::item_tree"],[4858,"hir_def::item_tree::ModKind"],[4859,"hir_def::item_tree::UseTreeKind"],[4864,"hir_def::lang_item"],[5072,"hir_def::lower"],[5084,"hir_def::nameres"],[5191,"hir_def::nameres::ModuleOrigin"],[5199,"hir_def::nameres::attr_resolution"],[5209,"hir_def::nameres::diagnostics"],[5246,"hir_def::nameres::diagnostics::DefDiagnosticKind"],[5269,"hir_def::nameres::proc_macro"],[5296,"hir_def::nameres::proc_macro::ProcMacroKind"],[5297,"hir_def::path"],[5489,"hir_def::path::Path"],[5492,"hir_def::per_ns"],[5527,"hir_def::resolver"],[5659,"hir_def::src"],[5665,"hir_def::visibility"]],"d":["A Data Type","","","","","","A helper trait for converting to MacroCallId","","","","","","","","","","","","","","","","","","A TypeOrConstParamId with an invariant that it actually …","","","","The defs which have a body.","","","","","","","","","","","","","","","","","","","","A constant, which might appears as a const item, an …","","A generic param","","","","","","","","","","","","","","An ID of a module, <strong>local</strong> to a <code>DefMap</code>.","","","","","","","A macro","","","","","","The defs which can be visible in the module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A TypeOrConstParamId with an invariant that it actually …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A higher level attributes based on TokenTree, with also …","Defines <code>Body</code>: a lowered representation of bodies of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module defines built-in types.","When <em>constructing</em> <code>hir</code>, we start at some parent syntax node …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains basic data about various HIR declarations.","Defines database &amp; queries for name resolution.","","This module defines a <code>DynMap</code> – a container for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macro expansion utilities.","","","","","An algorithm to find a path to refer to a certain item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Caller should check if this toc id really belongs to a type","Caller should check if this toc id really belongs to a …","","Many kinds of items or constructs can have generic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module describes hir-level representation of …","","","","","","A map of all publicly exported items in a crate.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Describes items defined or visible (ie, imported) in a …","A simplified AST that only contains items.","","","","Collects lang items: items marked with <code>#[lang = &quot;...&quot;]</code> …","","","","The module’s ID in its originating <code>DefMap</code>.","","","","","","","","","","","","","","","","","","","","","","Context for lowering paths.","","","","","","","","","Returns the module containing <code>self</code> (or <code>self</code>, if <code>self</code> is …","","","","","This module implements import-resolution/macro expansion …","","","","","","","","","","","","","","","","","","A desugared representation of paths like <code>crate::foo</code> or …","In rust, it is possible to have a value, a type and a …","Name resolution façade.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utilities for mapping between hir IDs and the surface …efines hir-level representation of visibility (e.g. <code>pub</code> …","eg. <code>#[doc(alias(&quot;x&quot;, &quot;y&quot;))]</code>","eg. <code>#[doc(hidden)]</code>, <code>#[doc(alias = &quot;x&quot;)]</code>","","","","","","","A struct to map text ranges from <code>Documentation</code> back to …","Holds documentation","","eg. <code>#[doc(hidden)]</code>","","eg. <code>#[doc(alias = &quot;x&quot;)]</code>","","","","","","","","","","","","","","","","","","","","Builtin attributes resolved by nameres.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find string value for a specific key inside token tree","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Maps a <code>TextRange</code> relative to the documentation string back …","","","","","Maps the lowered <code>Attr</code> back to its original syntax node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A template that the attribute input must match. Only …","","Attributes that have a special meaning to rustc or rustdoc.","Ignored attribute namespaces used by tools.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The body of an item (function, const etc.).","","An item body together with the mapping from syntax nodes …","","","","","","","","","","","","","","","","","Returns an iterator over all block expressions in this …","The <code>ExprId</code> of the actual body expression.","","","","","","","","","","","","","","Get a reference to the body source map’s diagnostics.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The patterns for the function’s parameters. While the …","","","","","Name resolution for expressions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>scope</code> refers to a block expression scope, returns the …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If <code>scope</code> refers to a labeled expression scope, returns the …","","","","Returns the scopes in ascending order.","","","","","","","","","","","","","","Different signed int types.","","Different unsigned int types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines hir-level representation of structs, enums and …","","","","","Whether the trait has …","","","","","","","","","","","","","","","","","","","","","","","Bounds restricting the type alias itself (eg. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","True if the first param is <code>self</code>. This is relevant to …","","Derive helpers, if this is a derive rustc_builtin_macro","Derive helpers, if this is a derive","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","<code>None</code> for <code>const _: () = ();</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single field of an enum variant or struct","Indicates whether this struct is <code>Box</code>.","Indicates whether the struct has a <code>#[fundamental]</code> …","Indicates whether this struct is <code>ManuallyDrop</code>.","Indicates whether the struct is <code>PhantomData</code>.","Indicates whether the struct has a …","Indicates whether this struct is <code>UnsafeCell</code>.","","","","Note that we use <code>StructData</code> for unions as well!","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","","Convert from underlying bit representation, preserving all …","","","Convert from underlying bit representation, dropping any …","","","Get the value for a flag from its stringified name.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","","Iterate over enabled flag values.","","","Iterate over enabled flag values with their stringified …","","","","","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code> …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum depth for potentially infinitely-recursive …","Set the value of the <code>expand_proc_attr_macros</code> input.","Set the value of the <code>expand_proc_attr_macros</code> input and …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","keys to be used with <code>DynMap</code>","","","","","","","","","","","","XXX: AST Nodes and SyntaxNodes have identity equality …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Causes paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>…","Causes paths to ignore imports in the local module.","","","","","","","","Find a path that can be used to refer to a certain item. …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Data about a generic const parameter (to a function, …","","","Data about the generic parameters of a function, struct, …","","Data about a generic lifetime parameter (to a function, …","","","For desugared where predicates that can directly refer to …","","Data about a generic type parameter (to a function, …","","","","","A single predicate from a where clause, i.e. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterator of type_or_consts field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Explicit binding annotations given in the HIR for a …","","","","","","","","https://doc.rust-lang.org/stable/error_codes/E0409.html","https://doc.rust-lang.org/stable/error_codes/E0416.html","","","","","","","","","","","","","","","","","","","<code>*</code>","","","","<code>..</code>","","","","","","","","","","","","<code>..=</code>","","","","","","","","","","","","Used in range patterns.","","","","","","","This is produced if the syntax tree does not have a …","","","","","Annotated with <code>mut x</code> – could be either ref or not, …","<code>-</code>","<code>!</code>","https://doc.rust-lang.org/stable/error_codes/E0408.html","","","","","Close relative to rustc’s hir::PatKind","","","","","","","","","","","","","<code>move</code> keyword was not specified.","Annotated as <code>ref</code>, like <code>ref x</code>","","Annotated as <code>ref mut x</code>.","","","","","","","","","","","","","","","No binding annotation given: this means that the final …","","","","","<code>move |x| y + x</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Id of the closure/generator that owns this binding. If it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HIR for references to types. Paths in these are not yet …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A concrete constant value","","","","","A fn pointer. Last element of the vector is the return …","","","","","","","","","","","","","","","","","","","","","","","","A modifier on a bound, currently this is only used for …","","","","Compare ty::Ty","","Case of an unknown value that rustc might know but we don…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the mutability is <code>Mut</code>.","","Returns <code>true</code> if the mutability is <code>Shared</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import map entry should contain the query string.","","Import map entry should strictly match the query string.","","Import map entry should contain all letters from the query …","Item import details stored in the <code>ImportMap</code>.","","A map from publicly exported items to the path needed to …","","","","","A way to match import map contents against the search …","","","","","Matches only the entries that are associated items, …","","","","","","","","","","","","","Respect casing of the query string when matching.","","","","","The module containing this item.","","","","","","","","","","","Do not include imports of the specified kind in the search …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the import is a trait associated item or not.","Limits the returned number of items to <code>limit</code>.","Matches entries’ names only, ignoring the rest of the …","","A path that can be used to import the item, relative to …","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","Searches dependencies of <code>krate</code> for an importable path …","Specifies the way to search for the entries using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","Iterate over all legacy textual scoped macros visible at …","","","","","","","","","","","","","","","","","","","","","","","","","","A single field of an enum variant or struct","","","","","","","","","This is a glob-import of all names in the <code>ModPath</code>.","","","","","","<code>mod m { ... }</code>","The item tree of a source file.","","Trait implemented by all item nodes in the item tree.","","","","“Macros 2.0” macro definition.","","","","","","","Attributes on an item.","","","<code>mod m;</code>","","","","","","The <code>ModPath</code> is imported normally.","","","","","","","","","","","Inner attributes of the source file.","","","","","Identifies a particular <code>ItemTree</code>.","","","","","","This is a <code>some::path::self</code> import, which imports <code>some::path</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bounds on the type alias itself. Only valid in trait …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expands the <code>UseTree</code> into individually imported <code>ModPath</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Downcasts a <code>ModItem</code> to a <code>FileItemTreeId</code> specific to this …","","","","","","","","","","","","","","","","","","Upcasts a <code>FileItemTreeId</code> to a generic <code>ModItem</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Looks up an instance of <code>Self</code> in an item tree.","","","","","","","","","","","","","","","","","","","","","","","","<code>None</code> for <code>const _: () = ();</code>","","","","","","The name of the declared macro.","","","","","","Path to the called macro.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inner attributes of the source file.","Returns an iterator over all items located at the top …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps a <code>UseTree</code> contained in this import back to its AST …","","","","","","","","","","","","","","","","","","","","","","","The <code>add</code> lang item.","The <code>add_assign</code> lang item.","The <code>align_offset</code> lang item. Align offset for stride != 1; …","The <code>alloc_layout</code> lang item.","The <code>begin_panic</code> lang item. libstd panic entry point. …","The <code>bitand</code> lang item.","The <code>bitand_assign</code> lang item.","The <code>bitor</code> lang item.","The <code>bitor_assign</code> lang item.","The <code>bitxor</code> lang item.","The <code>bitxor_assign</code> lang item.","The <code>box_free</code> lang item.","The <code>CStr</code> lang item.","The <code>c_void</code> lang item.","The <code>clone</code> lang item.","The <code>coerce_unsized</code> lang item.","The <code>const_panic_fmt</code> lang item.","The <code>const_param_ty</code> lang item.","The <code>Context</code> lang item.","The <code>Break</code> lang item.","The <code>Continue</code> lang item.","The <code>copy</code> lang item.","The <code>deref</code> lang item.","The <code>deref_mut</code> lang item.","The <code>deref_target</code> lang item.","The <code>destruct</code> lang item.","The <code>discriminant_type</code> lang item. The associated item of …","The <code>discriminant_kind</code> lang item.","The <code>dispatch_from_dyn</code> lang item.","The <code>div</code> lang item.","The <code>div_assign</code> lang item.","The <code>drop</code> lang item.","The <code>drop_in_place</code> lang item.","The <code>dyn_metadata</code> lang item.","The <code>eh_catch_typeinfo</code> lang item.","The <code>eh_personality</code> lang item.","","","","The <code>exchange_malloc</code> lang item.","The <code>fn</code> lang item.","The <code>fn_mut</code> lang item.","The <code>fn_once</code> lang item.","The <code>fn_once_output</code> lang item.","The <code>fn_ptr_addr</code> lang item.","The <code>fn_ptr_trait</code> lang item.","The <code>format_alignment</code> lang item.","The <code>format_argument</code> lang item.","The <code>format_arguments</code> lang item.","The <code>format_count</code> lang item.","The <code>format_placeholder</code> lang item.","The <code>format_unsafe_arg</code> lang item.","The <code>freeze</code> lang item.","","The <code>future_trait</code> lang item.","The <code>poll</code> lang item.","The <code>generator</code> lang item.","The <code>generator_state</code> lang item.","","The <code>get_context</code> lang item.","","The <code>index</code> lang item.","The <code>index_mut</code> lang item.","The <code>into_future</code> lang item.","The <code>into_iter</code> lang item.","The <code>next</code> lang item.","A representation of all the valid language items in Rust.","","","The <code>manually_drop</code> lang item.","The <code>maybe_uninit</code> lang item.","The <code>metadata_type</code> lang item.","","The <code>mul</code> lang item.","The <code>mul_assign</code> lang item.","The <code>neg</code> lang item.","","The <code>not</code> lang item.","The <code>Option</code> lang item.","The <code>None</code> lang item.","The <code>Some</code> lang item.","The <code>owned_box</code> lang item.","The <code>panic</code> lang item.","The <code>panic_bounds_check</code> lang item.","The <code>panic_cannot_unwind</code> lang item.","The <code>panic_display</code> lang item.","The <code>panic_fmt</code> lang item.","The <code>panic_impl</code> lang item.","The <code>panic_info</code> lang item.","The <code>panic_location</code> lang item.","The <code>panic_misaligned_pointer_dereference</code> lang item.","The <code>panic_nounwind</code> lang item.","The <code>eq</code> lang item.","The <code>partial_ord</code> lang item.","The <code>phantom_data</code> lang item.","The <code>pin</code> lang item.","The <code>new_unchecked</code> lang item.","The <code>pointee_trait</code> lang item.","The <code>pointer_like</code> lang item.","The <code>Poll</code> lang item.","The <code>Pending</code> lang item.","The <code>Ready</code> lang item.","The <code>Range</code> lang item.","The <code>RangeFrom</code> lang item.","The <code>RangeFull</code> lang item.","The <code>range_inclusive_new</code> lang item.","The <code>RangeInclusive</code> lang item.","The <code>RangeTo</code> lang item.","The <code>RangeToInclusive</code> lang item.","The <code>receiver</code> lang item.","The <code>rem</code> lang item.","The <code>rem_assign</code> lang item.","The <code>Err</code> lang item.","The <code>Ok</code> lang item.","The <code>ResumeTy</code> lang item.","The <code>shl</code> lang item.","The <code>shl_assign</code> lang item.","The <code>shr</code> lang item.","The <code>shr_assign</code> lang item.","The <code>sized</code> lang item.","The <code>slice_len_fn</code> lang item.","The <code>start</code> lang item.","","The <code>String</code> lang item.","","The <code>structural_peq</code> lang item. Trait injected by …","The <code>structural_teq</code> lang item. Trait injected by …","The <code>sub</code> lang item.","The <code>sub_assign</code> lang item.","The <code>sync</code> lang item.","The <code>termination</code> lang item.","","The <code>transmute_opts</code> lang item.","The <code>transmute_trait</code> lang item.","The <code>Try</code> lang item.","The <code>branch</code> lang item.","The <code>from_output</code> lang item.","The <code>from_residual</code> lang item.","The <code>from_yeet</code> lang item.","The <code>tuple_trait</code> lang item.","","","The <code>unpin</code> lang item.","The <code>unsafe_cell</code> lang item.","The <code>unsize</code> lang item.","The <code>va_list</code> lang item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Opposite of <code>LangItem::name</code>","Opposite of <code>LangItem::name</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Macros inside attributes, i.e. attribute macros and derive …","Function-like macros, suffixed with <code>!</code>.","Pseudo-module introduced by a block scope (contains only …","","","Contains the results of (early) name resolution.","Note that non-inline modules, by definition, live inside …","","See <code>sub_namespace_match()</code>.","","","","","","","Post-nameres attribute resolution.","","","","","","","","","","","","","","","","","","Returns the module containing <code>local_mod</code>, either the parent …","","Returns a node which declares this module, either a …","Returns a node which defines this module. That is, a file …","","Diagnostics emitted during DefMap construction.","Get a reference to the def map’s diagnostics.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Where does this module come from?","If this <code>DefMap</code> is for a block expression, returns the …","Always <code>None</code> for block modules","Nameres-specific procedural macro data and helpers.","","","","","","","","","","","","","","","","","","","","","","","","Declared visibility of this module.","Ascends the <code>DefMap</code> hierarchy and calls <code>f</code> with every <code>DefMap</code> …","","","","","","","","","Attribute resolved to an attribute macro.","Attribute resolved to something else that does not require …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Absolute path (::foo)","Named alias","An associated type binding like in <code>Iterator&lt;Item = T&gt;</code>.","","","<code>$crate</code> from macro expansion","","A single generic argument.","Generic arguments to a path segment (e.g. the <code>i32</code> in …","","A link to a lang item. It is used in desugaring of things …","","","A normal path","","","","","","<code>self::</code> is <code>Super(0)</code>","","Unnamed alias, as in <code>use Foo as _;</code>","","The generic arguments to the associated type. e.g. For …","","If this path is a single identifier, like <code>foo</code>, return its …","Associated type bindings like in <code>Iterator&lt;Item = T&gt;</code>.","","","","","","","","","","","","","","","","","","","Bounds for the associated type, like in …","","","","","","","","","","","","","","","","","","","Whether these generic args were desugared from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","Converts a known mod path to <code>Path</code>.","Converts a known mod path to <code>Path</code>.","","","Converts an <code>ast::Path</code> to <code>Path</code>. Works with use trees. It …","","This specifies whether the args contain a Self type as the …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the number of segments in the path (counting …","","The name of the associated type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type bound to this associated type (in <code>Item = T</code>, this …","","Invariant: the same len as <code>self.mod_path.segments</code> or <code>None</code> …","","Type based path like <code>&lt;T&gt;::foo</code>. Note that paths like …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a set of names available in the current scope.","","Resolve known enum from std, like <code>std::result::Result</code>","Resolve known struct from std, like <code>std::boxed::Box</code>","Resolve known trait from std, like <code>std::futures::Future</code>","","","","","","","","","Builds a resolver for type references inside this def.","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>expr_id</code> is required to be an expression id that comes …","","","","","","","","<code>pub(in module)</code>, <code>pub(crate)</code> or <code>pub(super)</code>. Also private, …","Visibility is restricted to a certain module.","<code>pub</code>.","Visibility is unrestricted.","Visibility of an item, not yet resolved.","Visibility of an item, with the path resolved.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,58,12,61,0,59,0,0,0,0,0,0,46,46,46,46,58,0,58,59,11,60,12,61,0,57,392,46,0,0,2,0,0,58,12,61,1,0,55,61,0,61,0,58,11,60,12,61,0,0,0,61,0,0,55,12,61,0,0,0,57,0,0,0,0,0,0,0,56,0,0,0,58,61,0,56,0,0,0,55,58,61,0,56,0,0,58,11,61,0,0,2,1,0,58,12,61,0,0,55,58,12,61,0,0,58,60,12,61,0,0,57,0,2,1,0,0,11,1,47,48,393,393,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,11,0,0,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,0,0,32,17,20,23,11,12,1,17,12,12,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,15,16,17,23,24,25,26,27,28,2,56,42,43,47,48,49,32,32,0,0,32,0,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,0,47,48,49,1,0,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,51,51,52,53,54,55,55,2,2,2,2,56,56,56,56,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,29,59,59,59,11,11,11,11,11,60,60,60,60,12,12,12,12,12,12,12,12,12,12,12,12,12,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,1,1,1,1,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,52,53,59,0,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,0,42,43,47,48,49,0,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,56,0,0,49,32,61,0,0,52,53,32,44,45,51,54,48,392,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,0,394,43,20,22,55,2,56,58,11,12,1,59,0,52,53,44,45,51,54,15,16,17,23,24,25,26,27,28,2,56,0,0,0,32,13,15,16,17,44,18,19,20,21,22,23,24,25,26,27,55,2,56,11,12,1,42,43,47,48,49,0,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,32,42,43,13,15,16,17,44,45,18,19,20,21,22,23,24,46,25,47,26,48,27,49,28,50,51,52,53,54,55,2,56,57,58,29,59,11,60,12,61,1,0,1,0,87,87,0,0,0,0,0,0,0,0,93,96,87,96,87,88,90,88,93,95,96,87,98,99,90,88,93,95,96,87,98,99,90,0,93,93,88,93,95,96,87,90,88,93,95,96,87,90,96,93,93,95,93,93,93,95,88,93,95,96,87,88,93,95,96,87,90,90,88,93,95,96,87,98,99,90,88,93,95,96,87,87,98,99,90,93,93,88,96,87,88,93,95,96,87,98,99,90,93,93,93,93,93,93,99,88,93,96,95,98,90,88,93,95,96,87,90,88,93,95,96,87,98,99,90,88,93,95,96,87,98,99,90,90,88,93,95,96,87,98,99,90,395,395,0,0,0,0,396,109,396,109,109,109,0,396,109,396,109,109,396,109,396,109,396,109,396,109,396,109,109,0,0,0,0,0,0,0,114,0,0,114,0,0,0,114,114,114,114,111,111,111,111,113,112,114,111,113,112,114,112,112,111,113,112,113,111,113,112,114,111,113,112,114,113,111,113,111,113,112,114,111,113,112,114,111,111,111,111,111,113,112,114,113,111,113,113,113,113,113,113,113,111,113,111,111,111,0,112,111,113,112,114,111,113,112,114,111,113,112,114,111,111,111,397,398,399,400,401,397,399,398,402,400,401,397,402,0,0,0,0,135,136,136,135,138,136,135,138,136,136,135,138,136,135,138,136,135,138,136,135,138,136,135,138,136,135,136,136,136,136,136,135,138,136,135,138,136,135,138,69,69,0,0,0,0,69,142,142,69,140,140,140,140,140,69,140,69,141,141,141,141,141,69,141,69,140,141,142,69,140,141,142,69,69,140,141,142,69,140,141,142,69,140,141,142,140,141,142,69,140,141,142,69,140,140,141,141,142,142,69,69,140,141,142,69,140,141,142,140,141,142,69,140,141,142,69,140,141,142,140,141,142,69,140,141,142,69,140,141,142,69,140,141,142,69,140,141,142,69,0,403,403,0,0,0,0,0,0,0,0,0,0,145,0,143,143,143,144,143,144,145,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,146,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,143,145,145,145,145,145,145,148,150,145,146,143,147,144,148,149,150,151,152,143,146,152,144,143,145,143,144,145,149,143,152,145,146,143,147,148,149,150,151,152,145,145,145,146,151,146,143,144,143,144,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,145,146,143,147,144,148,149,150,151,152,146,151,152,145,146,143,147,148,151,152,0,0,0,153,153,153,153,153,153,153,86,159,0,0,0,86,159,86,159,0,153,153,153,153,153,153,153,153,153,153,155,153,156,157,86,158,159,155,153,156,157,86,158,159,155,153,156,157,86,158,159,155,153,156,157,86,158,159,153,153,153,153,153,153,155,153,156,157,86,158,159,155,153,156,157,86,158,159,153,86,86,155,155,153,153,153,153,153,156,157,86,158,159,155,153,156,157,86,158,159,153,153,153,153,153,153,153,153,153,153,153,153,153,153,155,153,156,157,86,158,159,153,153,153,153,153,153,153,153,153,86,155,156,157,158,153,153,153,155,156,156,153,153,153,153,153,155,153,156,157,86,158,159,153,153,155,153,156,157,86,158,159,155,153,156,157,86,158,159,155,153,156,157,86,158,159,158,153,156,156,155,157,156,155,156,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,243,30,30,243,30,243,30,243,165,404,240,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,405,243,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,165,404,240,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,405,243,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,243,30,243,30,30,243,30,243,30,30,243,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,243,30,243,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,243,30,243,30,243,30,243,30,243,30,243,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,240,243,240,243,165,404,240,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,405,243,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,243,30,243,30,243,30,243,30,243,30,243,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,165,404,240,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,405,243,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,243,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,241,240,30,243,30,243,240,243,240,243,30,243,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,165,30,30,30,243,30,243,30,243,30,243,30,243,30,243,165,404,240,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,405,243,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,165,404,240,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,405,243,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,243,165,404,240,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,405,243,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,30,243,30,243,30,243,30,243,0,258,0,0,0,258,257,33,259,257,33,259,257,257,33,257,33,259,258,259,33,33,258,259,257,33,259,258,259,0,257,257,33,259,257,33,259,257,33,259,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,406,406,406,406,406,406,406,406,406,406,0,0,261,263,261,263,261,261,261,261,261,261,263,261,263,261,263,261,261,263,261,263,261,263,264,264,264,0,264,264,264,264,264,264,0,0,264,264,264,264,264,264,264,270,0,271,272,0,272,0,270,272,273,0,0,271,270,0,273,0,0,267,268,269,270,271,245,272,273,267,268,269,270,271,245,272,273,267,268,269,270,271,245,272,273,267,268,269,270,271,245,272,273,271,245,267,267,268,269,270,271,245,272,273,267,268,269,270,271,245,272,273,245,245,245,267,268,269,270,271,245,272,273,267,268,269,270,271,271,271,245,272,273,271,269,267,268,269,270,271,245,272,273,267,268,269,270,271,245,272,273,271,245,245,271,267,268,269,267,245,267,268,269,270,271,245,272,273,267,268,269,270,271,245,272,273,267,268,269,270,271,245,272,273,269,267,268,269,270,271,245,272,273,245,271,245,407,408,409,409,407,408,409,282,279,0,278,0,118,278,118,287,118,0,118,120,0,0,0,0,282,282,282,118,285,295,295,118,120,118,285,285,118,0,118,285,118,287,0,0,278,286,118,120,118,277,282,290,280,276,0,293,0,283,0,118,285,0,287,281,118,276,118,285,0,0,281,118,293,120,0,286,118,0,0,278,118,118,0,118,118,120,0,289,282,294,277,277,295,279,120,280,0,0,0,283,118,120,118,120,0,120,0,118,0,118,288,294,120,294,282,290,118,282,282,120,0,289,285,282,118,120,120,285,294,0,118,118,118,288,118,120,118,118,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,284,122,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,291,292,276,277,278,278,279,279,280,280,281,282,282,283,124,284,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,276,277,278,279,280,281,282,283,283,283,124,284,285,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,291,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,284,284,122,122,124,292,122,296,285,284,294,122,291,296,122,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,278,279,280,282,284,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,276,277,278,279,280,281,282,283,124,284,285,286,118,287,288,289,290,291,292,293,294,295,122,296,120,0,118,120,410,411,410,411,412,413,414,414,415,416,417,415,418,419,420,421,415,416,415,415,422,421,423,422,424,418,425,426,427,428,429,430,431,432,433,434,435,423,417,436,437,438,419,416,423,435,436,420,421,439,425,440,441,417,432,429,434,440,424,423,441,432,417,415,440,441,423,436,437,438,436,437,438,422,431,442,443,444,442,443,444,445,446,447,448,448,443,444,449,449,445,446,449,450,451,451,450,450,450,306,303,303,0,0,306,306,302,306,302,306,303,302,0,306,308,301,0,306,308,306,302,309,306,304,306,0,304,306,309,301,306,0,0,306,0,0,303,303,301,301,302,301,304,305,306,307,302,308,309,303,301,304,305,306,307,302,308,309,303,303,301,304,305,306,307,302,308,309,303,301,304,305,306,307,302,308,309,303,309,301,304,305,306,307,302,308,309,303,301,304,305,306,307,302,308,309,303,301,304,305,306,307,302,308,309,303,303,301,304,305,306,307,302,308,309,303,303,306,301,304,301,304,305,306,307,302,308,309,303,301,304,305,306,307,302,308,309,303,301,304,301,307,307,305,305,306,302,301,304,305,306,307,302,308,309,303,303,301,304,305,306,307,302,308,309,303,301,304,305,306,307,302,308,309,303,301,304,305,306,307,302,308,309,303,306,315,315,315,315,316,315,316,315,316,0,0,0,0,315,315,0,0,315,315,315,315,312,313,314,247,315,316,312,313,314,247,315,316,312,312,313,314,313,314,313,247,314,313,314,247,315,313,314,247,315,312,313,314,247,315,316,312,313,314,247,315,316,312,315,247,247,313,314,247,315,316,312,313,312,312,312,313,247,0,312,314,313,314,313,314,247,315,316,312,313,314,247,315,316,312,313,314,247,315,316,312,0,0,265,0,265,265,265,319,318,265,319,318,265,318,265,265,318,319,318,318,318,265,318,265,319,318,265,319,318,265,265,318,319,318,265,265,318,265,265,319,318,265,319,318,265,319,318,265,318,318,318,0,0,0,31,321,0,31,0,31,0,31,0,348,0,0,0,0,31,321,341,344,0,31,0,31,0,343,0,0,0,0,31,321,0,31,0,31,0,31,0,348,0,342,343,337,337,337,0,348,344,341,0,345,346,341,41,0,31,0,31,348,0,31,0,31,0,345,346,0,31,321,344,0,31,345,0,0,342,0,348,81,71,325,31,41,31,324,325,81,71,72,326,327,75,328,329,330,80,79,331,332,333,334,321,324,325,81,71,72,326,327,75,328,329,330,80,79,331,332,333,334,349,347,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,79,81,336,337,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,345,346,347,336,337,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,345,346,347,239,31,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,340,332,71,72,326,349,339,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,336,337,239,348,348,348,348,348,338,339,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,321,321,321,321,349,345,346,347,72,326,327,329,330,80,79,336,348,338,339,31,41,324,325,81,71,72,326,327,75,328,329,330,80,79,331,332,333,334,41,324,325,81,71,72,326,327,75,328,329,330,80,79,331,332,333,334,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,340,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,329,80,329,339,329,80,331,41,324,325,81,71,72,326,327,75,328,329,330,80,79,331,332,333,334,328,325,71,72,326,327,75,328,329,330,79,331,333,334,349,347,339,71,332,239,71,80,80,336,337,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,345,346,347,239,239,339,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,336,337,239,348,338,339,31,324,340,341,325,81,71,342,72,326,327,75,328,329,330,80,79,331,343,332,333,334,344,321,349,345,346,347,75,328,79,347,324,324,339,327,324,325,71,72,326,327,75,328,329,330,79,331,334,347,452,453,454,453,455,454,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,250,250,456,102,102,102,102,102,102,102,102,102,102,102,102,102,102,250,102,102,102,102,0,102,250,102,102,102,102,102,0,0,0,102,102,102,456,102,102,102,456,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,250,102,250,102,102,102,102,102,102,250,102,102,102,102,102,102,102,102,250,250,102,102,102,102,250,250,250,250,250,250,250,456,250,164,102,456,250,164,102,250,164,102,250,164,102,164,250,164,102,250,164,102,250,164,102,456,250,164,102,102,102,250,102,456,250,164,102,0,102,102,164,250,164,102,456,250,164,102,456,250,164,102,456,250,164,102,0,262,262,262,262,262,262,262,262,262,262,262,358,358,356,357,356,0,356,356,0,357,0,0,0,63,357,0,63,356,362,357,358,63,356,362,357,358,362,356,357,358,356,357,358,63,356,362,362,63,0,63,63,63,63,356,362,357,358,63,356,362,357,358,356,63,356,362,357,63,63,356,362,357,358,356,63,63,356,362,357,358,356,63,63,63,63,63,63,63,362,63,362,0,63,63,63,63,362,356,357,358,63,356,362,357,358,63,356,362,357,358,63,356,362,357,358,362,63,457,458,458,459,458,460,460,458,461,461,0,461,461,461,461,461,461,461,0,0,365,365,365,365,365,365,365,365,365,365,365,365,365,366,365,366,365,366,365,366,365,366,365,366,366,365,366,366,365,366,365,366,365,366,366,462,463,464,465,466,467,468,469,470,471,472,462,464,468,473,470,471,473,465,467,472,464,466,369,369,369,0,0,105,369,105,369,105,369,105,369,105,369,105,369,105,369,105,105,105,369,105,369,105,369,474,370,371,0,374,370,370,376,0,0,0,354,374,0,354,0,0,0,0,370,370,374,371,372,373,375,266,372,376,266,370,371,354,372,373,374,375,376,266,370,371,354,372,373,374,375,373,266,370,371,354,372,373,374,375,266,370,371,354,372,373,374,375,266,370,372,266,266,370,371,354,372,373,374,375,266,370,371,354,372,373,374,375,376,266,370,371,371,354,372,373,374,375,376,266,266,370,371,354,354,372,373,374,375,266,354,354,266,266,354,376,372,266,370,354,372,373,374,375,376,266,370,371,354,372,373,374,375,266,376,266,266,354,376,354,266,376,376,266,354,373,375,266,370,0,266,266,354,266,354,376,266,372,376,266,370,371,354,372,373,374,375,371,376,266,370,371,354,372,373,374,375,376,266,370,371,354,372,373,374,375,354,376,266,370,371,354,372,373,374,375,373,266,475,475,475,0,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,382,382,385,382,384,382,384,384,382,384,385,0,384,385,385,385,384,385,383,0,0,0,382,384,384,382,382,382,0,385,0,0,383,84,390,84,382,383,384,385,390,84,382,383,384,385,84,382,383,384,385,84,382,383,384,385,84,382,383,384,385,382,383,384,385,84,382,383,384,385,390,84,382,383,384,385,84,84,382,383,384,390,84,382,383,384,385,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,476,0,0,84,382,383,384,385,84,84,390,84,382,383,384,385,390,84,382,383,384,385,390,84,382,383,384,385,84,84,0,0,477,478,478,477,391,163,391,163,0,0,391,163,391,163,391,163,391,163,391,163,391,163,391,163,391,163,163,391,163,163,391,391,163,391,163,391,163,391,163],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[3,4,5],[[7,[6]]]],[[3,4,5],[[10,[[8,[[7,[6]]]],9]]]],[11,[[7,[12]]]],[13,14],[15,14],[16,14],[17,14],[18,14],[19,14],[20,14],[21,14],[22,14],[23,14],[24,14],[25,14],[26,14],[27,14],[28,14],[29,14],[[11,30],31],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[32,30,33,34]],[[17,30,33,34]],[[20,30,33,34]],[[23,30,33,34]],[[11,30,33,34]],[[12,30,33,34]],[[1,30,33,34]],[[17,30],[[37,[[36,[35]]]]]],[[12,30],[[37,[[36,[38]]]]]],[[12,30],[[37,[[36,[39]]]]]],[[1,30],[[37,[[36,[40]]]]]],[32,32],[[[42,[41]]],[[42,[41]]]],[[[43,[41]]],[[43,[41]]]],[13,13],[15,15],[16,16],[17,17],[44,44],[45,45],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[46,46],[25,25],[47,47],[26,26],[48,48],[27,27],[49,49],[28,28],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[2,2],[56,56],[57,57],[58,58],[29,29],[59,59],[11,11],[60,60],[12,12],[61,61],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,15],62],[[16,16],62],[[17,17],62],[[23,23],62],[[24,24],62],[[25,25],62],[[26,26],62],[[27,27],62],[[28,28],62],[[2,2],62],[[56,56],62],0,0,0,0,0,[32,[[7,[28]]]],[[32,30],[[7,[32]]]],0,0,[[32,30],[[64,[63]]]],0,[[32,32],65],[[[42,[41]],[42,[41]]],65],[[[43,[41]],[43,[41]]],65],[[13,13],65],[[15,15],65],[[16,16],65],[[17,17],65],[[44,44],65],[[45,45],65],[[18,18],65],[[19,19],65],[[20,20],65],[[21,21],65],[[22,22],65],[[23,23],65],[[24,24],65],[[46,46],65],[[25,25],65],[[47,47],65],[[26,26],65],[[48,48],65],[[27,27],65],[[49,49],65],[[28,28],65],[[50,50],65],[[51,51],65],[[52,52],65],[[53,53],65],[[54,54],65],[[55,55],65],[[2,2],65],[[56,56],65],[[57,57],65],[[58,58],65],[[29,29],65],[[59,59],65],[[11,11],65],[[60,60],65],[[12,12],65],[[61,61],65],[[1,1],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],0,0,0,0,[[1,30],34],0,[[32,66],67],[[[42,[[0,[68,41]]]],66],67],[[[43,[[0,[68,41]]]],66],67],[[13,66],67],[[15,66],67],[[16,66],67],[[17,66],67],[[44,66],67],[[45,66],67],[[18,66],67],[[19,66],67],[[20,66],67],[[21,66],67],[[22,66],67],[[23,66],67],[[24,66],67],[[46,66],67],[[25,66],67],[[47,66],67],[[26,66],67],[[48,66],67],[[27,66],67],[[49,66],67],[[28,66],67],[[50,66],67],[[51,66],67],[[52,66],67],[[53,66],67],[[54,66],67],[[55,66],67],[[2,66],67],[[56,66],67],[[57,66],67],[[58,66],67],[[29,66],67],[[59,66],67],[[11,66],67],[[60,66],67],[[12,66],67],[[61,66],67],[[1,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,51],[52,51],[[]],[[]],[[]],[[]],[[]],[32,55],[17,2],[16,2],[[]],[15,2],[25,56],[26,56],[27,56],[[]],[52,57],[[]],[54,57],[53,57],[19,58],[26,58],[16,58],[32,58],[21,58],[69,58],[17,58],[20,58],[22,58],[27,58],[2,58],[56,58],[18,58],[13,58],[15,58],[[]],[25,58],[44,58],[[]],[18,59],[[]],[29,59],[[]],[19,11],[13,11],[18,11],[44,11],[18,60],[22,60],[[]],[13,60],[2,12],[[]],[20,12],[21,12],[23,12],[60,12],[22,12],[13,12],[18,12],[44,12],[15,12],[17,12],[16,12],[26,61],[44,61],[56,61],[15,61],[57,61],[19,61],[2,61],[17,61],[13,61],[20,61],[27,61],[23,61],[[]],[45,61],[55,61],[18,61],[25,61],[22,61],[32,61],[16,61],[15,1],[44,1],[16,1],[[]],[14,13],[14,15],[14,16],[14,17],[14,18],[14,19],[14,20],[14,21],[14,22],[14,23],[14,24],[14,25],[14,26],[14,27],[14,28],[14,29],[51,52],[51,53],[[59,30],[[7,[12]]]],0,[[32,70]],[[[42,[41]],70]],[[[43,[41]],70]],[[13,70]],[[15,70]],[[16,70]],[[17,70]],[[44,70]],[[45,70]],[[18,70]],[[19,70]],[[20,70]],[[21,70]],[[22,70]],[[23,70]],[[24,70]],[[46,70]],[[25,70]],[[47,70]],[[26,70]],[[48,70]],[[27,70]],[[49,70]],[[28,70]],[[50,70]],[[51,70]],[[52,70]],[[53,70]],[[54,70]],[[55,70]],[[2,70]],[[56,70]],[[57,70]],[[58,70]],[[29,70]],[[59,70]],[[11,70]],[[60,70]],[[12,70]],[[61,70]],[[1,70]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,30],65],0,0,0,[32,4],[[61,30],4],0,0,[52,39],[53,39],0,0,0,0,0,0,[30],[[13,30],[[43,[71]]]],[[15,30],[[42,[72]]]],[[16,30],73],[[17,30],74],[[18,30],[[43,[75]]]],[[19,30],76],[[20,30],77],[[21,30],78],[[22,30],[[43,[79]]]],[[23,30],[[42,[80]]]],[[24,30],[[42,[81]]]],[[25,30],47],[[26,30],48],[[27,30],49],[[28,30],50],0,[[30,56],82],[30,32],[[[43,[41]],30],32],[[20,30],32],[[22,30],32],[[55,30],32],[[2,30],32],[[56,30],32],[[58,30],[[7,[32]]]],[[11,30],32],[[12,30],32],[[1,30],32],[[59,30],83],0,[52,12],[53,12],0,0,0,0,[[15,15],[[7,[62]]]],[[16,16],[[7,[62]]]],[[17,17],[[7,[62]]]],[[23,23],[[7,[62]]]],[[24,24],[[7,[62]]]],[[25,25],[[7,[62]]]],[[26,26],[[7,[62]]]],[[27,27],[[7,[62]]]],[[28,28],[[7,[62]]]],[[2,2],[[7,[62]]]],[[56,56],[[7,[62]]]],0,0,0,[[32,30],84],[[13,30],84],[30,84],[30,84],[30,84],[[44,30],84],[[18,30],84],[[19,30],84],[[20,30],84],[[21,30],84],[[22,30],84],[[23,30],84],[[24,30],84],[[25,30],84],[[26,30],84],[[27,30],84],[[55,30],84],[30,84],[[56,30],84],[[11,30],84],[[12,30],84],[[1,30],84],[[[42,[41]],30],37],[[[43,[41]],30],37],[[47,30],37],[[48,30],37],[[49,30],37],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,[[1,30],[[64,[86]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[87],[88,89],[90,[[0,[91,92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[93,89],90],[93,[[7,[94]]]],[88,88],[93,93],[95,95],[96,96],[87,87],[90,90],[[]],[[]],[[]],[[]],[[]],[[]],[[96,96],62],[[],93],[93],[95,93],[93,91],[93,91],[93,[[7,[88]]]],[[95,30],7],[[88,88],65],[[93,93],65],[[95,95],65],[[96,96],65],[[87,87],65],[[],65],[[],65],[[],65],[[],65],[[],65],[90,65],[[90,89],[[7,[97]]]],[[88,66],67],[[93,66],67],[[95,66],67],[[96,66],67],[[87,66],67],[[98,66],67],[[99,66],67],[[90,66],67],[[]],[[]],[[]],[[]],[96,87],[[]],[[]],[[]],[[]],[[93,100],[[7,[101]]]],[93,65],[[88,70]],[[96,70]],[[87,70]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,65],[93,65],[93,65],[93,65],[93,[[7,[97]]]],[93,[[7,[102]]]],[[99,103],[[7,[[37,[103]]]]]],[83,88],[[93,104],[[7,[105]]]],[[96,96],[[7,[62]]]],[[95,30],98],[[98,101],[[37,[[108,[106,107]]]]]],[90,[[7,[97]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[90,91],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[109,109],[[]],[89,[[7,[110]]]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[111,30],91],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[[]],[[],111],[[],113],[[],112],[113],[[111,111],65],[[113,113],65],[[112,112],65],[[114,114],65],[[],65],[[],65],[[],65],[[],65],[[113,115],[[10,[116,112]]]],0,[[113,115],117],[[111,66],67],[[113,66],67],[[112,66],67],[[114,66],67],[[]],[[]],[[]],[[]],[[111,115],118],[[111,119],120],[[111,121],122],[[111,123],124],[[]],[[]],[[]],[[]],[[113,123],125],0,[[113,[37,[126]]],[[7,[115]]]],[[113,[37,[127]]],[[7,[115]]]],[[113,[37,[128]]],[[7,[115]]]],[[113,[37,[129]]],[[7,[123]]]],[[113,[37,[130]]],[[7,[34]]]],[[113,[37,[131]]],[[7,[119]]]],[[113,[37,[132]]],[[7,[119]]]],0,[[113,119],[[10,[133,112]]]],0,[[111,30,11],83],[[111,30,11,115],83],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[111,119,134]],[[111,119,134]],[[111,119,134]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[135,121],[[136,137],[[7,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[136,137]],[[136,136],65],[[135,135],65],[[138,138],65],[[],65],[[],65],[[],65],[[136,66],67],[[135,66],67],[[138,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[[136,137],7],[135,104],[[136,137,104],[[7,[135]]]],[136,[[139,[115,137]]]],[[136,[7,[137]]],91],[[136,115],[[7,[137]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[69,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,[[7,[69]]]],[140,140],[141,141],[142,142],[69,69],[[]],[[]],[[]],[[]],[[140,140],62],[[141,141],62],[[142,142],62],[[140,140],65],[[141,141],65],[[142,142],65],[[69,69],65],[[],65],[[],65],[[],65],[[],65],[[140,66],67],[[140,66],67],[[141,66],67],[[141,66],67],[[142,66],67],[[142,66],67],[[69,66],67],[[69,66],67],[[]],[[]],[[]],[[]],[89,[[7,[140]]]],[89,[[7,[141]]]],[89,[[7,[142]]]],[[140,70]],[[141,70]],[[142,70]],[[69,70]],[[]],[[]],[[]],[[]],[[140,140],[[7,[62]]]],[[141,141],[[7,[62]]]],[[142,142],[[7,[62]]]],[[]],[[]],[[]],[[]],[[],83],[[],83],[[],83],[[],83],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],0,[[30,34],33],[[30,33,34]],0,0,0,0,0,0,0,0,0,0,0,0,[[143,104],[[7,[22]]]],[143,91],[143,91],[144,91],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[145,145],[146,146],[143,143],[147,147],[144,144],[148,148],[149,149],[150,150],[151,151],[152,152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[145,145],65],[[146,146],65],[[143,143],65],[[147,147],65],[[144,144],65],[[148,148],65],[[149,149],65],[[150,150],65],[[151,151],65],[[152,152],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[145,66],67],[[146,66],67],[[143,66],67],[[147,66],67],[[144,66],67],[[148,66],67],[[149,66],67],[[150,66],67],[[151,66],67],[[152,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[145,65],[145,65],[145,65],[145,65],[145,65],[145,65],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[145,65],0,0,0,0,[[143,104],[[7,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],153],[[],153],[[153,153],153],[[153,153]],[[153,153],153],[[153,153]],[153,154],[153,154],[[153,153],153],[[153,153]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[155,155],[153,153],[156,156],[157,157],[86,86],[158,158],[159,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,153],[[153,153],65],[[153,153],65],[[153,153],153],[[],153],[[],153],[[155,155],65],[[153,153],65],[[156,156],65],[[157,157],65],[[86,86],65],[[158,158],65],[[159,159],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[153,160]],[[86,104],[[7,[40]]]],[86,[[161,[158]]]],0,[[155,66],67],[[153,66],67],[[153,66],67],[[153,66],67],[[153,66],67],[[153,66],67],[[156,66],67],[[157,66],67],[[86,66],67],[[158,66],67],[[159,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,[[7,[153]]]],[154,[[7,[153]]]],[154,153],[154,153],[154,153],[154,153],[160,153],[89,[[7,[153]]]],[89,[[7,[153]]]],[[153,153]],[[153,153]],[[153,153],153],[[153,153],65],[[153,153],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153],[153,65],[153,65],[153,65],[153,65],0,[153],[153],0,[86,159],0,0,0,0,[153,153],[[153,153]],[[153,153]],0,0,0,[[153,153,65]],[[153,153,65]],[[153,153],153],[[153,153]],[[153,153],153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[153,153]],[[153,153]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,[[153,153],153],[[156,104],[[7,[35]]]],[156,162],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,93],0,[61,95],[28,[[64,[63]]]],0,[11,[[64,[111]]]],0,[11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,[[64,[151]]]],0,[18,163],0,[4,[[64,[63]]]],[4,[[64,[63]]]],0,[4,[[64,[164]]]],0,[4,165],[4,65],0,[[],166],[[],167],[[],168],[[],169],[[],170],[[],171],[[],172],[[],173],[[],174],[[],175],[[],176],[[],177],[[],178],[[],179],[[],180],[[],181],[[],182],[[],183],[[],184],[[],185],[[],186],[[],187],[[],188],[[],189],[[],190],[[],191],[[],192],[[],193],[[],194],[[],195],[[],196],[[],197],[[],198],[[],199],[[],200],[[],201],[[],202],[[],203],[[],204],[[],205],[[],206],[[],207],[[],208],[[],209],[[],210],[[],211],[[],212],[[],213],[[],214],[[],215],[[],216],[[],217],[[],218],[[],219],[[],220],[[],221],[[],222],[[],223],[[],224],[[],225],[[],226],[[],227],[[],228],[[],229],[[],230],[[],231],[[],232],[[],233],[[],234],[[],235],[17,[[64,[156]]]],0,[17],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],65],0,[11,[[64,[136]]]],0,[1,[[64,[[36,[40,163]]]]]],0,[1,[[64,[[36,[40,93]]]]]],0,[1,[[64,[[36,[40,[108,[[237,[236]],[237,[238]]]]]]]]]],0,[34,[[64,[239]]]],0,[[166,66],67],[[167,66],67],[[168,66],67],[[169,66],67],[[170,66],67],[[171,66],67],[[172,66],67],[[173,66],67],[[174,66],67],[[175,66],67],[[176,66],67],[[177,66],67],[[178,66],67],[[179,66],67],[[180,66],67],[[181,66],67],[[182,66],67],[[183,66],67],[[184,66],67],[[185,66],67],[[186,66],67],[[187,66],67],[[188,66],67],[[189,66],67],[[190,66],67],[[191,66],67],[[192,66],67],[[193,66],67],[[194,66],67],[[195,66],67],[[196,66],67],[[197,66],67],[[198,66],67],[[199,66],67],[[200,66],67],[[201,66],67],[[202,66],67],[[203,66],67],[[204,66],67],[[205,66],67],[[206,66],67],[[207,66],67],[[208,66],67],[[209,66],67],[[210,66],67],[[211,66],67],[[212,66],67],[[213,66],67],[[214,66],67],[[215,66],67],[[216,66],67],[[217,66],67],[[218,66],67],[[219,66],67],[[220,66],67],[[221,66],67],[[222,66],67],[[223,66],67],[[224,66],67],[[225,66],67],[[226,66],67],[[227,66],67],[[228,66],67],[[229,66],67],[[230,66],67],[[231,66],67],[[232,66],67],[[233,66],67],[[234,66],67],[[235,66],67],[[240,241,242,66],67],[[243,30,242,66],67],[[240,244,134]],[[243,244,134]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[64,[145]]]],0,[13,163],0,[12,[[246,[245]]]],0,[23,[[64,[144]]]],0,[23],0,[4,[[64,[247]]]],0,[[166,241],[[248,[166]]]],[[167,241],[[248,[167]]]],[[168,241],[[248,[168]]]],[[169,241],[[248,[169]]]],[[170,241],[[248,[170]]]],[[171,241],[[248,[171]]]],[[172,241],[[248,[172]]]],[[173,241],[[248,[173]]]],[[174,241],[[248,[174]]]],[[175,241],[[248,[175]]]],[[176,241],[[248,[176]]]],[[177,241],[[248,[177]]]],[[178,241],[[248,[178]]]],[[179,241],[[248,[179]]]],[[180,241],[[248,[180]]]],[[181,241],[[248,[181]]]],[[182,241],[[248,[182]]]],[[183,241],[[248,[183]]]],[[184,241],[[248,[184]]]],[[185,241],[[248,[185]]]],[[186,241],[[248,[186]]]],[[187,241],[[248,[187]]]],[[188,241],[[248,[188]]]],[[189,241],[[248,[189]]]],[[190,241],[[248,[190]]]],[[191,241],[[248,[191]]]],[[192,241],[[248,[192]]]],[[193,241],[[248,[193]]]],[[194,241],[[248,[194]]]],[[195,241],[[248,[195]]]],[[196,241],[[248,[196]]]],[[197,241],[[248,[197]]]],[[198,30],[[248,[198]]]],[[199,30],[[248,[199]]]],[[200,30],[[248,[200]]]],[[201,30],[[248,[201]]]],[[202,30],[[248,[202]]]],[[203,30],[[248,[203]]]],[[204,30],[[248,[204]]]],[[205,30],[[248,[205]]]],[[206,30],[[248,[206]]]],[[207,30],[[248,[207]]]],[[208,30],[[248,[208]]]],[[209,30],[[248,[209]]]],[[210,30],[[248,[210]]]],[[211,30],[[248,[211]]]],[[212,30],[[248,[212]]]],[[213,30],[[248,[213]]]],[[214,30],[[248,[214]]]],[[215,30],[[248,[215]]]],[[216,30],[[248,[216]]]],[[217,30],[[248,[217]]]],[[218,30],[[248,[218]]]],[[219,30],[[248,[219]]]],[[220,30],[[248,[220]]]],[[221,30],[[248,[221]]]],[[222,30],[[248,[222]]]],[[223,30],[[248,[223]]]],[[224,30],[[248,[224]]]],[[225,30],[[248,[225]]]],[[226,30],[[248,[226]]]],[[227,30],[[248,[227]]]],[[228,30],[[248,[228]]]],[[229,30],[[248,[229]]]],[[230,30],[[248,[230]]]],[[231,30],[[248,[231]]]],[[232,30],[[248,[232]]]],[[233,30],[[248,[233]]]],[[234,30],[[248,[234]]]],[[235,30],[[248,[235]]]],[[166,241],[[249,[166]]]],[[167,241],[[249,[167]]]],[[168,241],[[249,[168]]]],[[169,241],[[249,[169]]]],[[170,241],[[249,[170]]]],[[171,241],[[249,[171]]]],[[172,241],[[249,[172]]]],[[173,241],[[249,[173]]]],[[174,241],[[249,[174]]]],[[175,241],[[249,[175]]]],[[176,241],[[249,[176]]]],[[177,241],[[249,[177]]]],[[178,241],[[249,[178]]]],[[179,241],[[249,[179]]]],[[180,241],[[249,[180]]]],[[181,241],[[249,[181]]]],[[182,241],[[249,[182]]]],[[183,241],[[249,[183]]]],[[184,241],[[249,[184]]]],[[185,241],[[249,[185]]]],[[186,241],[[249,[186]]]],[[187,241],[[249,[187]]]],[[188,241],[[249,[188]]]],[[189,241],[[249,[189]]]],[[190,241],[[249,[190]]]],[[191,241],[[249,[191]]]],[[192,241],[[249,[192]]]],[[193,241],[[249,[193]]]],[[194,241],[[249,[194]]]],[[195,241],[[249,[195]]]],[[196,241],[[249,[196]]]],[[197,241],[[249,[197]]]],[[198,30],[[249,[198]]]],[[199,30],[[249,[199]]]],[[200,30],[[249,[200]]]],[[201,30],[[249,[201]]]],[[202,30],[[249,[202]]]],[[203,30],[[249,[203]]]],[[204,30],[[249,[204]]]],[[205,30],[[249,[205]]]],[[206,30],[[249,[206]]]],[[207,30],[[249,[207]]]],[[208,30],[[249,[208]]]],[[209,30],[[249,[209]]]],[[210,30],[[249,[210]]]],[[211,30],[[249,[211]]]],[[212,30],[[249,[212]]]],[[213,30],[[249,[213]]]],[[214,30],[[249,[214]]]],[[215,30],[[249,[215]]]],[[216,30],[[249,[216]]]],[[217,30],[[249,[217]]]],[[218,30],[[249,[218]]]],[[219,30],[[249,[219]]]],[[220,30],[[249,[220]]]],[[221,30],[[249,[221]]]],[[222,30],[[249,[222]]]],[[223,30],[[249,[223]]]],[[224,30],[[249,[224]]]],[[225,30],[[249,[225]]]],[[226,30],[[249,[226]]]],[[227,30],[[249,[227]]]],[[228,30],[[249,[228]]]],[[229,30],[[249,[229]]]],[[230,30],[[249,[230]]]],[[231,30],[[249,[231]]]],[[232,30],[[249,[232]]]],[[233,30],[[249,[233]]]],[[234,30],[[249,[234]]]],[[235,30],[[249,[235]]]],[[],29],0,[50,28],0,[[[43,[75]]],18],0,[74,17],0,[[[42,[81]]],24],0,[[[43,[71]]],13],0,[[[42,[80]]],23],0,[47,25],0,[48,26],0,[49,27],0,[76,19],0,[[[42,[72]]],15],0,[77,20],0,[78,21],0,[[[43,[79]]],22],0,[73,16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,102],[[7,[250]]]],0,[29],0,[28,50],0,[18,[[43,[75]]]],0,[17,74],0,[24,[[42,[81]]]],0,[13,[[43,[71]]]],0,[23,[[42,[80]]]],0,[25,47],0,[26,48],0,[27,49],0,[19,76],0,[15,[[42,[72]]]],0,[20,77],0,[21,78],0,[22,[[43,[79]]]],0,[16,73],0,[25,[[64,[148]]]],0,[26,[[64,[149]]]],0,[[240,241,242,251],65],[[243,30,242,251],65],[252,240],[252,243],[27,[[64,[150]]]],0,[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[[],253],[4,254],0,[65],[[65,255]],[19,[[64,[152]]]],0,[15,[[64,[155]]]],0,[15],0,[21,[[64,[147]]]],0,[20,[[64,[143]]]],0,[20],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[22,[[64,[146]]]],0,[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[16,[[64,[155]]]],0,[16],0,[17,[[64,[[36,[35,93]]]]]],0,[17,[[64,[[36,[35,[237,[256]]]]]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[257,257],[[]],[[],33],[[]],[[]],[[]],[33,7],[[[259,[[257,[258]]]]],7],[[33,[257,[258]]]],[[33,[257,[258]]]],[33],[[[259,[[257,[258]]]]]],[[]],[[]],[[]],[33,65],[[[259,[[257,[258]]]]],65],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[33,260],7],[[33,260]],[[]],[33,65],[[],10],[[],10],[[],85],0,0,[[]],[[]],[[]],[[]],[[261,30],262],[261,34],[[261,30,130,5],[[10,[[8,[7]],9]]]],[[261,30,6],[[8,[7]]]],[[261,30,263]],[[261,66],67],[[263,66],67],[[]],[[]],[[]],[[]],[[30,34,32],261],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],0,0,0,0,[[]],[[]],[264,264],[[]],[[264,264],65],[[],65],[[30,265,32,65],[[7,[266]]]],[[30,265,32,264,65],[[7,[266]]]],[[264,66],67],[[]],[[]],[[]],[[],10],[[],10],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[267,267],[268,268],[269,269],[270,270],[271,271],[245,245],[272,272],[273,273],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[271,[[7,[269]]]],[[],245],0,[[267,267],65],[[268,268],65],[[269,269],65],[[270,270],65],[[271,271],65],[[245,245],65],[[272,272],65],[[273,273],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[245,104,12],[[7,[53]]]],[245,[[7,[39]]]],[[245,104,12],[[7,[52]]]],[[267,66],67],[[268,66],67],[[269,66],67],[[270,66],67],[[271,66],67],[[245,66],67],[[272,66],67],[[273,66],67],[[]],[[]],[[]],[[]],[267,271],[269,271],[[]],[[]],[[]],[[]],[271,65],0,[[267,70]],[[268,70]],[[269,70]],[[270,70]],[[271,70]],[[245,70]],[[272,70]],[[273,70]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[271,65],[245,274],0,[271,[[7,[104]]]],0,0,0,0,[[],[[275,[245]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,[271,[[7,[267]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[124,124],[284,284],[285,285],[286,286],[118,118],[287,287],[288,288],[289,289],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[122,122],[296,296],[120,120],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],284],0,[[276,276],65],[[277,277],65],[[278,278],65],[[279,279],65],[[280,280],65],[[281,281],65],[[282,282],65],[[283,283],65],[[124,124],65],[[284,284],65],[[285,285],65],[[286,286],65],[[118,118],65],[[287,287],65],[[288,288],65],[[289,289],65],[[290,290],65],[[291,291],65],[[292,292],65],[[293,293],65],[[294,294],65],[[295,295],65],[[122,122],65],[[296,296],65],[[120,120],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],0,0,[[276,66],[[10,[297]]]],[[277,66],[[10,[297]]]],[[278,66],[[10,[297]]]],[[278,66],[[10,[297]]]],[[279,66],[[10,[297]]]],[[279,66],[[10,[297]]]],[[280,66],[[10,[297]]]],[[280,66],[[10,[297]]]],[[281,66],[[10,[297]]]],[[282,66],[[10,[297]]]],[[282,66],[[10,[297]]]],[[283,66],67],[[124,66],67],[[284,66],67],[[284,66],67],[[285,66],67],[[286,66],67],[[118,66],67],[[287,66],67],[[288,66],67],[[289,66],67],[[290,66],67],[[291,66],67],[[292,66],67],[[293,66],67],[[294,66],67],[[295,66],67],[[122,66],67],[[296,66],67],[[120,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,283],[[]],[119,283],[[]],[[]],[[]],[298,285],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[276,70]],[[277,70]],[[278,70]],[[279,70]],[[280,70]],[[281,70]],[[282,70]],[[283,70]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[284,299],[284,300],[[122,115],65],0,0,0,0,0,[285,[[7,[285]]]],[300,284],[[65,65],294],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],83],[[],83],[[],83],[[],83],[[],83],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,[[118,134]],[[120,134]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[301,89],[301,89],[302,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[303,69],[301,301],[304,304],[305,305],[306,306],[307,307],[302,302],[308,308],[309,309],[303,303],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[309,3],310],[[301,301],65],[[304,304],65],[[305,305],65],[[306,306],65],[[307,307],65],[[302,302],65],[[308,308],65],[[309,309],65],[[303,303],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[301,66],67],[[304,66],67],[[305,66],67],[[306,66],67],[[307,66],67],[[302,66],67],[[308,66],67],[[309,66],67],[[303,66],[[10,[297]]]],[[303,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[285,303],[[]],[[262,311],306],[65,301],[65,304],[[301,70]],[[304,70]],[[305,70]],[[306,70]],[[307,70]],[[302,70]],[[308,70]],[[309,70]],[[303,70]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[301,65],[304,65],[301,65],[[],307],0,0,[[],[[275,[305]]]],[[],[[275,[306]]]],[[],[[275,[302]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],83],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[306,134]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[312,312],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[312,312],[313,313],[314,314],[[]],[[]],0,[[],247],[[314,30],310],[[313,313],65],[[314,314],65],[[247,247],65],[[315,315],65],[[],65],[[],65],[[],65],[[],65],[[312,315],312],[[313,66],67],[[314,66],67],[[247,66],67],[[315,66],67],[[316,66],67],[[312,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[[315,70]],[[247,265],[[7,[313]]]],[[30,4],[[64,[247]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[312,110],312],[312,312],[83,312],0,[[247,265],[[7,[314]]]],[[30,4,312],[[317,[265]]]],[[312,316],312],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,0,0,0,0,0,[265,[[7,[58]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[318,30,33,34]],[265,265],[[]],[318,91],[[],319],[[],318],[318,91],[[318,318],65],[[265,265],65],[[],65],[[],65],[[319,66],67],[[318,66],67],[[265,66],67],[[]],[[]],[[]],[[265,70]],[318,[[0,[91,320]]]],[[]],[[]],[[]],[[265,30],[[7,[4]]]],[318,91],[[265,30],[[7,[32]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[318,[[0,[91,320]]]],[318,91],[318,[[0,[91,320]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,[[7,[321]]]],[[],322],[[31,239],[[322,[323]]]],[324,322],[325,322],[81,322],[71,322],[72,322],[326,322],[327,322],[75,322],[328,322],[329,322],[330,322],[80,322],[79,322],[331,322],[332,322],[333,322],[334,322],[[321,239],[[322,[335]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[336,[41]]],[[336,[41]]]],[337,337],[338,338],[[[339,[41]]],[[339,[41]]]],[31,31],[324,324],[340,340],[341,341],[325,325],[81,81],[71,71],[342,342],[72,72],[326,326],[327,327],[75,75],[328,328],[329,329],[330,330],[80,80],[79,79],[331,331],[343,343],[332,332],[333,333],[334,334],[344,344],[321,321],[345,345],[346,346],[347,347],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],239],[31,[[7,[[336,[41]]]]]],[[[336,[41]],[336,[41]]],65],[[337,337],65],[[239,239],65],[[348,348],65],[[338,338],65],[[[339,[41]],[339,[41]]],65],[[31,31],65],[[324,324],65],[[340,340],65],[[341,341],65],[[325,325],65],[[81,81],65],[[71,71],65],[[342,342],65],[[72,72],65],[[326,326],65],[[327,327],65],[[75,75],65],[[328,328],65],[[329,329],65],[[330,330],65],[[80,80],65],[[79,79],65],[[331,331],65],[[343,343],65],[[332,332],65],[[333,333],65],[[334,334],65],[[344,344],65],[[321,321],65],[[349,349],65],[[345,345],65],[[346,346],65],[[347,347],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[340,134]],0,0,0,0,0,[[[339,[41]]],34],[[[336,[41]],66],67],[[337,66],67],[[239,66],67],[[348,66],67],[[338,66],67],[[[339,[[0,[68,41]]]],66],67],[[31,66],67],[[324,66],67],[[340,66],67],[[341,66],67],[[325,66],67],[[81,66],67],[[71,66],67],[[342,66],67],[[72,66],67],[[326,66],67],[[327,66],67],[[75,66],67],[[328,66],67],[[329,66],67],[[330,66],67],[[80,66],67],[[79,66],67],[[331,66],67],[[343,66],67],[[332,66],67],[[333,66],67],[[334,66],67],[[344,66],67],[[321,66],67],[[349,66],67],[[345,66],67],[[346,66],67],[[347,66],67],[[]],[[]],[[]],[[[350,[347]]],348],[[[350,[349]]],348],[31,348],[[]],[[[350,[342]]],348],[[]],[[]],[[[336,[79]]],31],[[[336,[71]]],31],[[[336,[333]]],31],[[[336,[72]]],31],[[[336,[329]]],31],[321,31],[[[336,[326]]],31],[[[336,[324]]],31],[[[336,[80]]],31],[[[336,[330]]],31],[[[336,[327]]],31],[[[336,[334]]],31],[[[336,[331]]],31],[[[336,[75]]],31],[[[336,[332]]],31],[[]],[[[336,[328]]],31],[[[336,[81]]],31],[[[336,[325]]],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[336,[71]]],321],[[[336,[332]]],321],[[]],[[[336,[79]]],321],[[[336,[75]]],321],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[336,[41]],70]],[[348,70]],[[338,70]],[[[339,[41]],70]],[[31,70]],[31,[[7,[336]]]],[31,[[7,[[336,[324]]]]]],[31,[[7,[[336,[325]]]]]],[31,[[7,[[336,[81]]]]]],[31,[[7,[[336,[71]]]]]],[31,[[7,[[336,[72]]]]]],[31,[[7,[[336,[326]]]]]],[31,[[7,[[336,[327]]]]]],[31,[[7,[[336,[75]]]]]],[31,[[7,[[336,[328]]]]]],[31,[[7,[[336,[329]]]]]],[31,[[7,[[336,[330]]]]]],[31,[[7,[[336,[80]]]]]],[31,[[7,[[336,[79]]]]]],[31,[[7,[[336,[331]]]]]],[31,[[7,[[336,[332]]]]]],[31,[[7,[[336,[333]]]]]],[31,[[7,[[336,[334]]]]]],[336,31],[[[336,[324]]],31],[[[336,[325]]],31],[[[336,[81]]],31],[[[336,[71]]],31],[[[336,[72]]],31],[[[336,[326]]],31],[[[336,[327]]],31],[[[336,[75]]],31],[[[336,[328]]],31],[[[336,[329]]],31],[[[336,[330]]],31],[[[336,[80]]],31],[[[336,[79]]],31],[[[336,[331]]],31],[[[336,[332]]],31],[[[336,[333]]],31],[[[336,[334]]],31],[[239,337]],[[239,[350,[330]]]],[[239,[350,[326]]]],[[239,[336,[41]]],41],[[239,[350,[80]]]],[[239,[350,[334]]]],[[239,[350,[349]]]],[[239,[350,[328]]]],[[239,[350,[81]]]],[[239,[350,[75]]]],[[239,[350,[342]]]],[[239,[350,[331]]]],[[239,[350,[332]]]],[[239,[350,[72]]]],[[239,[350,[347]]]],[[239,[350,[324]]]],[[239,[350,[325]]]],[[239,[350,[327]]]],[[239,[350,[79]]]],[[239,[350,[329]]]],[[239,[350,[71]]]],[[239,[350,[333]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[339,[41]],30],[[64,[239]]]],0,0,0,[[239,350]],[[239,[350,[324]]],324],[[239,[350,[325]]],325],[[239,[350,[81]]],81],[[239,[350,[71]]],71],[[239,[350,[72]]],72],[[239,[350,[326]]],326],[[239,[350,[327]]],327],[[239,[350,[75]]],75],[[239,[350,[328]]],328],[[239,[350,[329]]],329],[[239,[350,[330]]],330],[[239,[350,[80]]],80],[[239,[350,[79]]],79],[[239,[350,[331]]],331],[[239,[350,[332]]],332],[[239,[350,[333]]],333],[[239,[350,[334]]],334],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[338,[336,[41]]],[[339,[41]]]],0,0,[[239,30],83],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[239,30,4],93],[239],[[[339,[41]]],338],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,0,0,0,0,[[324,30,34,[350,[351]]],351],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[250,[[7,[17]]]],[250,[[7,[44]]]],[250,[[7,[13]]]],[250,[[7,[23]]]],[250,[[7,[19]]]],[250,[[7,[15]]]],[250,[[7,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[250,250],[164,164],[102,102],[[]],[[]],[[]],[[],164],[[250,250],65],[[164,164],65],[[102,102],65],[[],65],[[],65],[[],65],[[250,66],67],[[164,66],67],[[102,66],67],[[]],[[]],[[]],[[]],[104,[[7,[102]]]],[89,[[7,[102]]]],[[250,70]],[[102,70]],[[]],[[]],[[]],[[]],[[30,[0,[[352,[61]],353]]],[[7,[102]]]],[102,97],[[102,30,4],[[7,[354]]]],[[164,102],[[7,[250]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],0,[[]],[[]],0,[[]],[[]],[[30,355,34],262],[[],10],[[],10],[[],85],[[30,34],262],[[30,355],262],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[356,356],[357,357],[358,358],[[]],[[]],[[]],[[63,359],[[7,[32]]]],[356,[[7,[[361,[360]]]]]],[[362,30],[[7,[[37,[360]]]]]],[[362,30],[[37,[357]]]],[[63,[361,[363]]],7],0,[63],[[63,30],83],[[63,30],83],[[63,63],65],[[356,356],65],[[362,362],65],[[357,357],65],[[358,358],65],[[],65],[[],65],[[],65],[[],65],[[],65],[356,[[7,[364]]]],[[63,66],67],[[356,66],67],[[362,66],67],[[357,66],67],[[63,13],[[7,[27]]]],[[]],[[]],[[]],[[]],[[]],[[356,70]],[[63,359],362],[[]],[[]],[[]],[[]],[[]],[356,65],[63,65],[63,65],[[63,89],65],[63,4],[[63,359],32],[63,91],[[63,364],91],0,[63,[[7,[32]]]],0,0,[63,[[7,[89]]]],[63,[[7,[254]]]],[63],[63],0,[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],0,[[63,30,359,134],7],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[365,365],65],[[366,366],65],[[],65],[[],65],[[365,66],67],[[366,66],67],[[]],[[]],0,[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[359,[361,[367]],94,368],366],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[105,105],65],[[369,369],65],[[],65],[[],65],[[105,66],67],[[369,66],67],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[266,[[7,[104]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[266,266],[370,370],[371,371],[354,354],[372,372],[373,373],[374,374],[375,375],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[266,266],62],[[370,370],62],0,[[266,3],310],[[266,266],65],[[370,370],65],[[371,371],65],[[354,354],65],[[372,372],65],[[373,373],65],[[374,374],65],[[375,375],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[376,[[7,[375]]]],[[266,66],[[10,[297]]]],[[370,66],[[10,[297]]]],[[371,66],67],[[371,66],67],[[354,66],67],[[372,66],67],[[373,66],67],[[374,66],67],[[375,66],67],[[]],[104,266],[[]],[[]],[[]],[104,354],[[]],[[]],[[]],[[]],[[]],[370,266],[[266,[352,[377]]],354],[266,354],[[370,160],266],[[3,378,355],[[7,[266]]]],[[378,262],[[7,[354]]]],[[376,110],[[7,[375]]]],0,[[266,70]],[[370,70]],[[354,70]],[[372,70]],[[373,70]],[[374,70]],[[375,70]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[266,65],[376,65],[266,65],[266,65],[354,65],[376,91],[354,370],0,[376,[[7,[375]]]],[376,110],[266,110],[354,[[7,[266]]]],0,0,[[266,266],[[7,[62]]]],[[370,370],[[7,[62]]]],0,[266,[[7,[104]]]],[[266,104]],[354,[[7,[354]]]],[266],[354,376],[[376,110],376],[[],[[275,[266]]]],[[],[[275,[372]]]],[[376,110],376],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],83],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[354,[[7,[306]]]],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,[266,379],0,0,0,0,[[]],[[]],[[58,58,163],380],[380,380],[[]],[[],380],[[380,380],65],[[],65],[[380,134],380],[[380,66],67],[[]],[[380,70]],[[]],[380,65],[380,65],[380,91],[[56,163],380],0,[[],380],[[380,380],380],[[380,381],380],[380,[[7,[56]]]],[380,[[7,[58]]]],[380,7],[380,[[7,[58]]]],[[]],[[],10],[[],10],[[],85],[[58,163],380],0,[[58,163],380],0,[[380,163],380],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[84,[[7,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[382,382],[383,383],[384,384],[385,385],[[]],[[]],[[]],[[]],[[]],[84,63],[[382,382],65],[[383,383],65],[[384,384],65],[[385,385],65],[[],65],[[],65],[[],65],[[],65],[[84,66],67],[[382,66],67],[[383,66],67],[[384,66],67],[[385,66],67],[[]],[[]],[[]],[[]],[[]],[[]],[84,[[7,[12]]]],[84,[[7,[[246,[245]]]]]],[[382,70]],[[383,70]],[[384,70]],[[]],[[]],[[]],[[]],[[]],[[]],[84,4],[84,32],[[84,30],[[389,[104,386,[388,[387]]]]]],[[84,390]],[[84,30,266],[[7,[17]]]],[[84,30,266],[[7,[15]]]],[[84,30,266],[[7,[20]]]],[[84,30,266],380],[[84,30,266],[[7,[380]]]],[[84,30,266,[7,[358]]],[[7,[56]]]],[[84,30,354],7],[[84,30,354],[[7,[382]]]],[[84,30,354],[[7,[383]]]],[[84,30,354],[[7,[384]]]],[[84,30,391],[[7,[163]]]],[30,84],[[30,11,115],84],[[30,11,[7,[137]]],84],[[]],[[]],[[]],[[]],[[]],[[84,30],[[317,[20]]]],[84,91],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[84,30,11,115],390],[84,91],0,0,0,0,[30,[[37,[36]]]],[30,37],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[391,391],[163,163],[[]],[[]],[[391,391],65],[[163,163],65],[[],65],[[],65],[[391,66],67],[[163,66],67],[[]],[[]],[[163,70]],[[]],[[]],[[163,30,32],65],[[391,30,84],163],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],85],[[],85]],"c":[],"p":[[4,"VariantId"],[4,"AdtId"],[8,"ExpandDatabase"],[6,"CrateId"],[8,"Fn"],[3,"MacroCallId"],[4,"Option"],[6,"ExpandResult"],[3,"UnresolvedMacro"],[4,"Result"],[4,"DefWithBodyId"],[4,"GenericDefId"],[3,"FunctionId"],[3,"InternId"],[3,"StructId"],[3,"UnionId"],[3,"EnumId"],[3,"ConstId"],[3,"StaticId"],[3,"TraitId"],[3,"TraitAliasId"],[3,"TypeAliasId"],[3,"ImplId"],[3,"ExternBlockId"],[3,"Macro2Id"],[3,"MacroRulesId"],[3,"ProcMacroId"],[3,"BlockId"],[3,"AnonymousConstId"],[8,"DefDatabase"],[4,"ModItem"],[3,"ModuleId"],[3,"DynMap"],[3,"HirFileId"],[6,"LocalEnumVariantId"],[3,"ArenaMap"],[3,"InFile"],[6,"LocalLifetimeParamId"],[6,"LocalTypeOrConstParamId"],[6,"LocalFieldId"],[8,"ItemTreeNode"],[3,"ItemLoc"],[3,"AssocItemLoc"],[3,"EnumVariantId"],[3,"FieldId"],[4,"MacroExpander"],[3,"Macro2Loc"],[3,"MacroRulesLoc"],[3,"ProcMacroLoc"],[3,"BlockLoc"],[3,"TypeOrConstParamId"],[3,"TypeParamId"],[3,"ConstParamId"],[3,"LifetimeParamId"],[4,"ItemContainerId"],[4,"MacroId"],[4,"GenericParamId"],[4,"ModuleDefId"],[4,"GeneralConstId"],[4,"AssocItemId"],[4,"AttrDefId"],[4,"Ordering"],[3,"DefMap"],[3,"Arc"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"BuiltinType"],[8,"Hasher"],[3,"Function"],[3,"Struct"],[6,"UnionLoc"],[6,"EnumLoc"],[3,"Const"],[6,"StaticLoc"],[6,"TraitLoc"],[6,"TraitAliasLoc"],[3,"TypeAlias"],[3,"Impl"],[3,"ExternBlock"],[3,"MacroDefId"],[3,"String"],[3,"Resolver"],[3,"TypeId"],[4,"VariantData"],[4,"DocExpr"],[3,"Documentation"],[15,"str"],[3,"AttrQuery"],[8,"Iterator"],[8,"Clone"],[3,"Attrs"],[4,"CfgExpr"],[3,"AttrsWithOwner"],[4,"DocAtom"],[3,"SmolStr"],[3,"AttrSourceMap"],[3,"DocsRangeMap"],[3,"AttrId"],[3,"Attr"],[4,"LangItem"],[3,"TextRange"],[3,"Name"],[3,"ProcMacroDef"],[3,"Attr"],[3,"Comment"],[4,"Either"],[3,"AttributeTemplate"],[15,"usize"],[3,"Body"],[3,"SyntheticSyntax"],[3,"BodySourceMap"],[4,"BodyDiagnostic"],[6,"ExprId"],[6,"ExprSource"],[6,"FieldSource"],[4,"Expr"],[6,"PatId"],[4,"Pat"],[6,"BindingId"],[3,"Binding"],[6,"LabelId"],[3,"Label"],[6,"LabelSource"],[3,"MacroExpr"],[4,"Expr"],[3,"RecordExprField"],[3,"Label"],[3,"MacroCall"],[4,"Pat"],[3,"SelfParam"],[6,"PatSource"],[8,"FnMut"],[3,"ScopeEntry"],[3,"ExprScopes"],[6,"ScopeId"],[3,"ScopeData"],[6,"FxHashMap"],[4,"BuiltinInt"],[4,"BuiltinUint"],[4,"BuiltinFloat"],[3,"TraitData"],[3,"ImplData"],[3,"FunctionData"],[3,"TypeAliasData"],[3,"TraitAliasData"],[3,"Macro2Data"],[3,"MacroRulesData"],[3,"ProcMacroData"],[3,"ConstData"],[3,"StaticData"],[3,"StructFlags"],[15,"u8"],[3,"StructData"],[3,"EnumData"],[3,"EnumVariantData"],[3,"FieldData"],[4,"StructKind"],[8,"IntoIterator"],[3,"Arena"],[4,"IntegerType"],[4,"Visibility"],[3,"LangItems"],[3,"CrateLimits"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTraitAliasQuery"],[3,"InternTraitAliasLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternExternBlockQuery"],[3,"InternExternBlockLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"InternMacro2Query"],[3,"InternMacro2LookupQuery"],[3,"InternProcMacroQuery"],[3,"InternProcMacroLookupQuery"],[3,"InternMacroRulesQuery"],[3,"InternMacroRulesLookupQuery"],[3,"InternAnonymousConstQuery"],[3,"InternAnonymousConstLookupQuery"],[3,"ExpandProcAttrMacrosQuery"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"StructDataWithDiagnosticsQuery"],[3,"UnionDataQuery"],[3,"UnionDataWithDiagnosticsQuery"],[3,"EnumDataQuery"],[3,"EnumDataWithDiagnosticsQuery"],[3,"ImplDataQuery"],[3,"ImplDataWithDiagnosticsQuery"],[3,"TraitDataQuery"],[3,"TraitDataWithDiagnosticsQuery"],[3,"TraitAliasDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"Macro2DataQuery"],[3,"MacroRulesDataQuery"],[3,"ProcMacroDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[3,"ConstVisibilityQuery"],[3,"CrateLangItemsQuery"],[3,"CrateSupportsNoStdQuery"],[3,"TupleField"],[3,"AstPtr"],[3,"RecordField"],[3,"ItemTree"],[3,"InternDatabaseGroupStorage__"],[8,"InternDatabase"],[3,"DatabaseKeyIndex"],[3,"DefDatabaseGroupStorage__"],[3,"Runtime"],[3,"GenericParams"],[3,"Interned"],[3,"ImportMap"],[3,"QueryTable"],[3,"QueryTableMut"],[4,"LangItemTarget"],[3,"Revision"],[15,"u16"],[3,"Arc"],[15,"u32"],[3,"Durability"],[3,"Variant"],[3,"Key"],[8,"Policy"],[3,"KeyMap"],[8,"AstNode"],[3,"Expander"],[3,"LowerCtx"],[3,"Mark"],[4,"PrefixKind"],[4,"ItemInNs"],[3,"ModPath"],[3,"TypeParamData"],[3,"LifetimeParamData"],[3,"ConstParamData"],[4,"TypeParamProvenance"],[4,"TypeOrConstParamData"],[4,"WherePredicate"],[4,"WherePredicateTypeTarget"],[8,"DoubleEndedIterator"],[3,"InternStorage"],[4,"RangeOp"],[4,"UnaryOp"],[4,"BinaryOp"],[4,"LogicOp"],[4,"CmpOp"],[4,"Ordering"],[4,"ArithOp"],[4,"ExprOrPatId"],[3,"FloatTypeWrapper"],[4,"Literal"],[4,"LiteralOrConst"],[4,"ClosureKind"],[4,"CaptureBy"],[4,"Movability"],[4,"Array"],[3,"MatchArm"],[3,"RecordLitField"],[4,"Statement"],[4,"BindingAnnotation"],[4,"BindingProblems"],[3,"RecordFieldPat"],[3,"Error"],[4,"LiteralKind"],[15,"f32"],[15,"f64"],[4,"Mutability"],[4,"TypeBound"],[4,"ConstRef"],[4,"Rawness"],[3,"TraitRef"],[4,"TypeRef"],[3,"LifetimeRef"],[4,"TraitBoundModifier"],[4,"ConstRefOrPath"],[8,"Display"],[4,"Type"],[3,"Query"],[3,"ImportInfo"],[3,"ImportPath"],[4,"ImportKind"],[4,"SearchMode"],[6,"FxHashSet"],[3,"ItemScope"],[3,"PerNsGlobImports"],[8,"ExactSizeIterator"],[4,"AssocItem"],[3,"FileAstId"],[4,"Item"],[3,"Import"],[3,"ExternCrate"],[3,"Union"],[3,"Enum"],[3,"Static"],[3,"Trait"],[3,"TraitAlias"],[3,"Mod"],[3,"MacroCall"],[3,"MacroRules"],[3,"MacroDef"],[4,"AssocItem"],[3,"FileItemTreeId"],[3,"RawVisibilityId"],[3,"TreeId"],[3,"ItemTreeId"],[3,"UseTree"],[4,"UseTreeKind"],[4,"Param"],[4,"ModKind"],[4,"ImportKind"],[4,"Fields"],[4,"FieldAstId"],[3,"Field"],[4,"AttrOwner"],[3,"Variant"],[3,"Idx"],[3,"UseTree"],[8,"Into"],[8,"Copy"],[4,"Path"],[3,"Hygiene"],[4,"ModuleOrigin"],[4,"ModuleSource"],[4,"MacroSubNs"],[6,"LocalModuleId"],[3,"Module"],[6,"AstId"],[3,"ModuleData"],[4,"Adt"],[3,"FileId"],[4,"DefDiagnosticKind"],[3,"DefDiagnostic"],[3,"AnyHasAttrs"],[3,"CfgOptions"],[4,"ProcMacroKind"],[4,"PathKind"],[4,"ImportAlias"],[3,"GenericArgs"],[3,"AssociatedTypeBinding"],[4,"GenericArg"],[3,"PathSegment"],[3,"PathSegments"],[3,"Box"],[3,"Path"],[3,"UnescapedModPath"],[3,"PerNs"],[8,"FnOnce"],[4,"TypeNs"],[4,"ResolveValueResult"],[4,"ValueNs"],[4,"ScopeDef"],[3,"SmallVec"],[3,"FxHasher"],[3,"BuildHasherDefault"],[3,"IndexMap"],[3,"UpdateGuard"],[4,"RawVisibility"],[8,"Lookup"],[8,"AsMacroCall"],[8,"HasModule"],[13,"KeyValue"],[3,"BuiltinAttribute"],[13,"InactiveCode"],[13,"UnresolvedProcMacro"],[13,"MacroError"],[13,"UnreachableLabel"],[13,"UndeclaredLabel"],[13,"UnresolvedMacroCall"],[8,"ChildBySource"],[3,"InternDatabaseStorage"],[3,"DefDatabaseStorage"],[3,"AstPtrPolicy"],[13,"TypeBound"],[13,"Lifetime"],[13,"ForLifetime"],[13,"ElementList"],[13,"Repeat"],[13,"Assignment"],[13,"Eq"],[13,"Ord"],[13,"Closure"],[13,"Call"],[13,"MethodCall"],[13,"Match"],[13,"Index"],[13,"Loop"],[13,"While"],[13,"If"],[13,"RecordLit"],[13,"Let"],[13,"Break"],[13,"Return"],[13,"Yield"],[13,"Yeet"],[13,"Field"],[13,"Await"],[13,"Cast"],[13,"Ref"],[13,"Box"],[13,"UnaryOp"],[13,"Tuple"],[13,"Block"],[13,"Async"],[13,"Unsafe"],[13,"Continue"],[13,"BinaryOp"],[13,"Range"],[13,"Tuple"],[13,"Record"],[13,"TupleStruct"],[13,"Range"],[13,"Bind"],[13,"Box"],[13,"Ref"],[13,"Slice"],[13,"Let"],[13,"Expr"],[13,"Inline"],[13,"Single"],[13,"Prefixed"],[13,"Glob"],[4,"GenericRequirement"],[13,"BlockExpr"],[13,"File"],[13,"CrateRoot"],[13,"Inline"],[4,"ResolvedAttr"],[13,"UnresolvedModule"],[13,"UnresolvedExternCrate"],[13,"UnconfiguredCode"],[13,"UnresolvedProcMacro"],[13,"UnresolvedMacroCall"],[13,"MacroError"],[13,"MacroExpansionParseError"],[13,"UnimplementedBuiltinMacro"],[13,"InvalidDeriveTarget"],[13,"MalformedDerive"],[13,"MacroDefError"],[13,"UnresolvedImport"],[13,"CustomDerive"],[13,"Normal"],[8,"HasResolver"],[8,"HasSource"],[8,"HasChildSource"]]},\
"hir_expand":{"doc":"<code>hir_expand</code> deals with macro expansion.","t":"GNNNNNNNNNEGEDNNDDNDEDDEDNENNNNNNDNDOOMLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLAAALLLLLLLLLLLLLLLLLLLLLLLLLLLAMLALLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLAAOLLLLLLLLLLLLLLLMAAOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDESNDNLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLFLLMLLLLLLLLLLLLLLLLLLLLLLNENNNNNNLLLLLLLFLLLLLLLFLLLLENNNNNNNNNLLLLLLLFLLLLLLLLNNENNNNNNNNENDNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLDNNNNNIDDDDDDDDDDDNEKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMFLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLKMKKMKMKMLLKMKMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDENNDCCOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLOLLLLLLLLLLLLLLLLLIDDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALCCOLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDLLLLLLLLLLLLLLLLLL","n":["AstId","Attr","BuiltIn","BuiltInAttr","BuiltInDerive","BuiltInEager","Call","Declarative","Def","Derive","ExpandError","ExpandResult","ExpandTo","ExpansionInfo","Expr","FnLike","HirFileId","InFile","Items","MacroCallId","MacroCallKind","MacroCallLoc","MacroDefId","MacroDefKind","MacroFile","Mbe","Origin","Other","Pattern","ProcMacro","RecursionOverflowPoisoned","Statements","Type","UnresolvedMacro","UnresolvedProcMacro","ValueResult","__known_path","__path","allow_internal_unsafe","ancestors_with_macros","ancestors_with_macros","ancestors_with_macros_skip_attr_item","as_file","as_intern_id","as_lazy_macro","as_ref","ast_id","ast_id_map","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_attr_macro","builtin_derive_macro","builtin_fn_macro","call_node","call_node","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","db","def","descendants","eager","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","expanded","expansion_info","expansion_level","file_id","file_id","file_syntax","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_call_site","from_intern_id","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hygiene","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_attr_macro","is_attribute","is_attribute_derive","is_builtin_derive","is_custom_derive","is_derive_attr_pseudo_expansion","is_include_macro","is_macro","is_proc_macro","kind","kind","krate","local_inner","macro_call_id","macro_file","map","map","map_err","map_token_down","map_token_up","mod_path","name","name","new","new","ok","only_err","original_ast_node","original_call_node","original_call_range","original_call_range_with_body","original_file","original_file_range","original_file_range","original_file_range_full","original_file_range_opt","original_file_range_opt","original_syntax_node","path","proc_macro","quote","quote","result","syntax","to_node","to_node","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transpose","transpose","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upmap","value","value","with_value","ast_id","ast_id","ast_id","attr_args","derive_attr_index","derive_index","expand_to","invoc_attr_index","AstIdMap","FileAstId","ast_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get","hash","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","Attr","AttrId","AttrInput","EMPTY","Literal","RawAttrs","TokenTree","ast_index","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","cfg_attr_index","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_attrs","default","deref","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","filter","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_attrs_owner","hash","hash","id","input","into","into","into","into","merge","new","parse_cfg_attr_input","parse_path_comma_token_tree","path","path","single_ident_value","storage","string_value","to_owned","to_owned","to_owned","to_owned","to_string","token_tree_value","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_cfg_attr","Bench","BuiltinAttrExpander","CfgAccessible","CfgEval","Derive","GlobalAllocator","Test","TestCase","borrow","borrow_mut","clone","clone_into","eq","equivalent","expand","find_builtin_attr","fmt","from","hash","into","is_bench","is_derive","is_test","pseudo_derive_attr_expansion","to_owned","try_from","try_into","type_id","BuiltinDeriveExpander","Clone","Copy","Debug","Default","Eq","Hash","Ord","PartialEq","PartialOrd","borrow","borrow_mut","clone","clone_into","eq","equivalent","expand","find_builtin_derive","fmt","from","hash","into","to_owned","try_from","try_into","type_id","Asm","Assert","BuiltinFnLikeExpander","Cfg","Column","CompileError","Concat","ConcatBytes","ConcatIdents","ConstFormatArgs","CorePanic","EagerExpander","Env","ExpandedEager","File","FormatArgs","FormatArgsNl","GlobalAsm","Include","IncludeBytes","IncludeStr","Line","LlvmAsm","LogSyntax","ModulePath","OptionEnv","StdPanic","Stringify","TraceMacros","Unreachable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","expand","expand","find_builtin_macro","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AstIdMapQuery","Builtin","BuiltinAttr","BuiltinDerive","BuiltinEager","DeclarativeMacro","ExpandDatabase","ExpandDatabaseGroupStorage__","ExpandDatabaseStorage","ExpandProcMacroQuery","HygieneFrameQuery","InternMacroCallLookupQuery","InternMacroCallQuery","MacroArgTextQuery","MacroDefQuery","MacroExpandQuery","ParseMacroExpansionErrorQuery","ParseMacroExpansionQuery","ProcMacro","TokenExpander","ast_id_map","ast_id_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","default","default","default","default","default","default","default","default","eq","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","expand_proc_macro","expand_proc_macro","expand_speculative","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","hygiene_frame","hygiene_frame","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","intern_macro_call","intern_macro_call","into","into","into","into","into","into","into","into","into","into","into","into","into","lookup_intern_macro_call","lookup_intern_macro_call","macro_arg","macro_arg_text","macro_arg_text","macro_def","macro_def","macro_expand","macro_expand","maybe_changed_since","new","parse_macro_expansion","parse_macro_expansion","parse_macro_expansion_error","parse_macro_expansion_error","parse_or_expand","parse_or_expand_with_err","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","def_site_token_map","mac","expand_eager_macro","Hygiene","HygieneFrame","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","from","from","into","into","local_inner_macros","name_ref_to_name","new","new_unhygienic","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Abs","Crate","DollarCrate","ModPath","PathKind","Plain","Super","UnescapedModPath","__name","__name","__name","as_ident","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","display","display","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_kind","from_segments","from_src","hash","hash","hash","into","into","into","is_Self","is_ident","is_self","kind","len","partial_cmp","partial_cmp","partial_cmp","path","pop_segment","push_segment","segments","storage","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unescaped","AsName","Name","UnescapedName","as_name","as_str","as_text","as_tuple_index","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","display","display","eq","eq","equivalent","equivalent","fmt","fmt","from","from","generate_new_name","hash","hash","into","into","is_escaped","known","missing","name","name","name","new_lifetime","new_tuple_field","partial_cmp","partial_cmp","to_owned","to_owned","to_smol_str","to_smol_str","try_from","try_from","try_into","try_into","type_id","type_id","unescaped","Box","Clone","Copy","Debug","Default","Eq","Future","Hash","Index","IntoFuture","IntoIter","IntoIterator","Item","Iterator","Neg","None","Not","Ok","Option","Ord","Output","PartialEq","PartialOrd","Range","RangeFrom","RangeFull","RangeInclusive","RangeTo","RangeToInclusive","Result","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Target","Try","add","add_assign","alloc","asm","assert","bench","bitand","bitand_assign","bitor","bitor_assign","bitxor","bitxor_assign","bool","boxed","branch","call","call_mut","call_once","cfg","cfg_accessible","cfg_attr","cfg_eval","char","column","compile_error","concat","concat_bytes","concat_idents","const_format_args","core","core_panic","crate_type","deref","deref_mut","derive","div","div_assign","doc","drop","env","eq","f32","f64","feature","file","filter_map","fn","fn_mut","fn_once","format_args","format_args_nl","future","future_trait","ge","global_allocator","global_asm","gt","i128","i16","i32","i64","i8","include","include_bytes","include_str","index","index_mut","into_future","is_empty","isize","iter","iter_mut","le","len","line","llvm_asm","log_syntax","lt","macro_rules","module_path","mul","mul_assign","ne","neg","new","next","no_core","no_std","not","ops","option","option_env","owned_box","partial_ord","pieces","poll","prelude","recursion_limit","register_attr","register_tool","rem","rem_assign","result","rust_2015","rust_2018","rust_2021","shl","shl_assign","shr","shr_assign","std","std_panic","str","stringify","sub","sub_assign","test","test_case","trace_macros","u128","u16","u32","u64","u8","unreachable","unsafe_cell","usize","v1","va_list","ProcMacroExpander","borrow","borrow_mut","clone","clone_into","dummy","eq","equivalent","expand","fmt","from","hash","into","is_dummy","new","to_owned","try_from","try_into","type_id"],"q":[[0,"hir_expand"],[312,"hir_expand::MacroCallKind"],[320,"hir_expand::ast_id_map"],[350,"hir_expand::attrs"],[434,"hir_expand::builtin_attr_macro"],[462,"hir_expand::builtin_derive_macro"],[488,"hir_expand::builtin_fn_macro"],[557,"hir_expand::db"],[760,"hir_expand::db::TokenExpander"],[762,"hir_expand::eager"],[763,"hir_expand::hygiene"],[793,"hir_expand::mod_path"],[870,"hir_expand::name"],[923,"hir_expand::name::known"],[1087,"hir_expand::proc_macro"]],"d":["<code>AstId</code> points to an AST node in any file.","","","","","","","","","","","","In Rust, macros expand token trees to token trees. When we …","ExpansionInfo mainly describes how to map text range …","","","Input to the analyzer is a set of files, where each file …","<code>InFile&lt;T&gt;</code> stores a value of <code>T</code> inside a particular …","","<code>MacroCallId</code> identifies a particular macro invocation, like …","","","","","","","","","","","","","","","","","","","","","","Skips the attributed item that caused the macro invocation …","","","","","","<code>AstIdMap</code> allows to create stable IDs for “large” …","A higher level attributes based on TokenTree, with also …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builtin attributes.","Builtin derives.","Builtin macro","If this is a macro call, returns the syntax node of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines database &amp; queries for macro expansion.","","","Eager expansion related utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return expansion information if it is a macro-expansion …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","This modules handles hygiene information.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether this file is an attr macro","","","Indicate it is macro file generated for builtin derive","","Return whether this file is the pseudo expansion of the …","Return whether this file is an include macro","","","","","","","","","","","","Map a token down from macro input into the macro expansion.","Map a token up out of the expansion it resides in into the …","A lowering for <code>use</code>-paths (more generally, paths without …","See <code>Name</code>.","","","","","","","If this is a macro call, returns the syntax node of the …","Returns the original file range that best describes the …","Returns the original file range that best describes the …","For macro-expansion files, returns the file original …","Falls back to the macro call range if the node cannot be …","Falls back to the macro call range if the node cannot be …","Falls back to the macro call range if the node cannot be …","Attempts to map the syntax node back up its macro calls.","Attempts to map the syntax node back up its macro calls.","","","Proc Macro Expander stub","A simplified version of quote-crate like quasi quote macro","FIXME: It probably should implement in proc-macro","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntactical index of the invoking <code>#[derive]</code> attribute.","Index of the derive macro in the derive attribute","","Syntactical index of the invoking <code>#[attribute]</code>.","Maps items’ <code>SyntaxNode</code>s to <code>ErasedFileAstId</code>s and back.","<code>AstId</code> points to an AST node in a specific file.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","<code>#[attr = &quot;string&quot;]</code>","Syntactical attributes, without filtering of <code>cfg_attr</code>s.","<code>#[attr(subtree)]</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Processes <code>cfg_attr</code>s, returning the resulting semantic <code>Attrs</code>…","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Parses this attribute as a token tree consisting of comma …","","","#[path(ident)]","","#[path = “string”]","","","","","","#[path TokenTree]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Stuff like <code>line!</code> and <code>file!</code>.","<code>global_allocator</code> and such.","<code>derive(Copy)</code> and such.","Built-in eagerly expanded fn-like macros (<code>include!</code>, <code>concat!</code>…","Old-style <code>macro_rules</code> or the new macros 2.0","","","Representative struct for the query group.","","","","","","","","","","The thing we love the most here in rust-analyzer – …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Special case of the previous query for procedural macros. …","","This expands the given macro call, but with different …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Macro ids. That’s probably the tricksiest bit in …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Lowers syntactic macro call to a token tree representation.","Extracts syntax node, corresponding to a macro call. That…","","Gets the expander for this macro. This compiles …","","Expand macro call to a token tree.","","","","Implementation for the macro case.","","Firewall query that returns the errors from the …","","Main public API – parses a hir file, not caring whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Absolute path (::foo)","","<code>$crate</code> from macro expansion","","","","<code>self::</code> is <code>Super(0)</code>","","","","","If this path is a single identifier, like <code>foo</code>, return its …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the number of segments in the path (counting …","","","","","","","","","","","","","","","","","","","","","","","<code>Name</code> is a wrapper around string, which is used in hir for …","Wrapper of <code>Name</code> to print the name without “r#” even …","","Returns the text this name represents if it isn’t a …","Returns the text this name represents if it isn’t a …","Returns the tuple index this name represents if it is a …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generates a new name which is only equal to itself, by …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","A fake name for things missing in the source code.","","","","","","","","","","Returns the textual representation of this name as a …","Returns the textual representation of this name as a …eturns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,12,23,23,23,23,26,23,26,12,0,0,0,0,24,12,0,0,24,0,0,0,0,0,0,20,0,20,24,23,20,24,24,0,20,0,0,0,10,2,2,2,7,7,10,2,10,0,0,26,19,20,8,21,7,22,10,23,12,18,2,24,36,26,19,20,8,21,7,22,10,23,12,18,2,24,36,0,0,0,8,18,19,20,8,21,7,22,10,23,12,18,2,24,19,20,8,21,7,22,10,23,12,18,2,24,2,0,22,2,0,26,19,20,8,21,7,22,10,23,12,18,2,24,26,19,20,8,21,7,22,10,23,12,18,2,24,19,18,8,8,8,2,2,26,19,20,20,8,21,7,22,10,23,12,18,2,24,36,26,19,19,20,20,8,8,8,21,7,22,10,23,12,18,2,24,36,24,7,20,8,21,7,22,10,23,12,2,24,0,26,19,20,8,21,7,22,10,23,12,18,2,24,36,8,10,10,8,8,8,8,8,10,22,10,10,10,21,8,19,2,19,18,18,0,0,0,19,2,19,19,2,8,12,12,8,2,2,2,2,2,2,36,0,0,0,19,2,14,22,2,19,20,8,21,7,22,10,23,12,18,2,24,20,2,2,26,19,20,8,21,7,22,10,23,12,18,2,24,36,26,19,20,8,21,7,22,10,23,12,18,2,24,36,26,19,20,8,21,7,22,10,23,12,18,2,24,36,2,19,2,2,111,112,113,113,112,112,111,113,0,0,49,46,49,46,49,46,46,49,46,49,46,49,46,49,46,49,49,46,46,49,46,46,49,46,49,46,49,46,0,0,0,56,57,0,57,52,56,52,54,57,56,52,54,57,54,52,56,52,54,57,56,52,54,57,0,56,56,56,52,54,57,56,52,54,57,56,56,52,54,57,57,56,52,54,57,56,52,57,54,54,56,52,54,57,56,56,0,54,54,54,54,57,54,56,52,54,57,57,54,56,52,54,57,56,52,54,57,56,52,54,57,52,65,0,65,65,65,65,65,65,65,65,65,65,65,65,65,0,65,65,65,65,65,65,65,0,65,65,65,65,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,68,68,68,68,68,68,68,68,69,69,0,69,69,70,70,70,70,70,69,0,70,0,69,70,70,69,70,70,70,69,69,69,69,70,69,69,69,69,71,69,70,71,69,70,69,70,69,70,69,70,69,70,69,70,0,71,69,70,71,69,70,69,70,71,69,70,69,70,71,69,70,71,69,70,71,69,70,0,73,73,73,73,73,0,0,0,0,0,0,0,0,0,0,0,0,73,0,3,84,73,114,84,74,75,76,77,78,79,80,81,82,83,73,114,84,74,75,76,77,78,79,80,81,82,83,73,73,74,75,76,77,78,79,80,81,82,83,73,73,74,75,78,79,80,81,82,83,3,84,0,73,74,75,76,77,78,79,80,81,82,83,84,84,73,114,84,74,75,76,77,78,79,80,81,82,83,3,84,74,75,76,77,78,79,80,81,82,83,74,75,76,77,78,79,80,81,82,83,3,84,73,114,84,74,75,76,77,78,79,80,81,82,83,3,84,3,3,84,3,84,3,84,84,84,3,84,3,84,3,3,74,75,76,77,78,79,80,81,82,83,73,73,114,84,74,75,76,77,78,79,80,81,82,83,73,114,84,74,75,76,77,78,79,80,81,82,83,73,114,84,74,75,76,77,78,79,80,81,82,83,115,115,0,0,0,59,88,59,88,59,88,59,88,88,88,59,88,59,88,59,88,59,59,59,59,59,88,59,88,59,88,59,88,102,102,102,0,0,102,102,0,0,0,0,61,61,101,102,61,101,102,61,101,102,61,101,102,61,101,102,61,101,61,101,102,61,101,102,61,101,102,61,61,101,102,61,61,61,61,101,102,61,101,102,61,61,61,61,61,61,101,102,0,61,61,61,61,61,101,102,61,101,102,61,101,102,61,101,102,61,0,0,0,116,67,67,67,67,107,67,107,67,107,67,107,67,107,67,107,67,107,67,107,67,107,67,107,67,67,107,67,107,67,0,67,0,0,0,67,67,67,107,67,107,67,107,67,107,67,107,67,107,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3],4],[[[2,[5]],3],[[0,[4,6]]]],[[[2,[5]],3],4],[7,8],[7,9],[[10,3,11,12],7],[2,2],[10,[[16,[[14,[13]],[14,[15]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[8,3],[[17,[[2,[5]]]]]],[18,[[17,[[2,[5]]]]]],[[[19,[6,6]]],[[19,[6,6]]]],[20,20],[8,8],[21,21],[7,7],[22,22],[10,10],[23,23],[12,12],[18,18],[[[2,[6]]],[[2,[6]]]],[24,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[6]]]],0,0,[[[2,[25]]],4],0,[[26,26],27],[[[19,[[28,[[28,[[28,[28]]]]]],[28,[[28,[[28,[28]]]]]]]],[19,[[28,[[28,[[28,[28]]]]]],[28,[[28,[[28,[28]]]]]]]]],27],[[20,20],27],[[8,8],27],[[21,21],27],[[7,7],27],[[22,22],27],[[10,10],27],[[23,23],27],[[12,12],27],[[18,18],27],[[[2,[28]],[2,[28]]],27],[[24,24],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,[18,[[2,[5]]]],[[8,3],[[17,[18]]]],[[8,3],29],[8,[[17,[30]]]],0,[[2,3],5],[[26,31],[[33,[32]]]],[[[19,[34,34]],31],[[33,[32]]]],[[20,31],35],[[20,31],35],[[8,31],35],[[21,31],35],[[7,31],35],[[22,31],35],[[10,31],35],[[23,31],35],[[12,31],35],[[18,31],35],[[[2,[34]],31],35],[[24,31],35],[[36,31],35],[[]],[[]],[[[33,[37]]],[[19,[37]]]],[38,20],[[]],[30,8],[[]],[21,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,24],[9,7],[[20,40]],[[8,40]],[[21,40]],[[7,40]],[[22,40]],[[10,40]],[[23,40]],[[12,40]],[[[2,[41]],40]],[[24,40]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,3],27],[10,27],[10,27],[[8,3],[[17,[[2,[42]]]]]],[[8,3],27],[[8,3],27],[[8,3],27],[8,27],[10,27],0,0,0,0,0,[8,[[17,[21]]]],[[19,43],19],[[2,43],2],[[19,43],19],[[18,3,[17,[44]],[2,[1]]],[[17,[4]]]],[[18,3,[2,[1]]],17],0,0,0,[[],19],[8,2],[[],19],[[],[[19,[37]]]],[[[2,[25]],3],[[17,[[2,[25]]]]]],[[8,3],17],[[12,3],45],[[12,3],45],[[8,3],30],[[[2,[1]],3],45],[[[2,[5]],3],45],[[[2,[5]],3],45],[[[2,[5]],3],[[17,[45]]]],[[[2,[1]],3],[[17,[45]]]],[[[2,[5]],3],[[17,[[2,[5]]]]]],0,0,0,0,[19,33],[[[2,[25]]],[[2,[5]]]],[[[14,[25]],3],25],[[22,3],[[2,[5]]]],[[[2,[[46,[25]]]],3],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[[2,[16]]],[[16,[2,2]]]],[[[2,[17]]],[[17,[2]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[[2,[1]],3],[[17,[[2,[1]]]]]],0,0,[2,2],0,0,0,0,0,0,0,0,0,0,[[49,25],[[46,[25]]]],[[]],[[]],[[]],[[]],[[[46,[25]]],[[46,[25]]]],[[]],[[],49],[[[46,[25]],[46,[25]]],27],[[49,49],27],[[],27],[[],27],[[[46,[25]],31],35],[[49,31],35],[[]],[[]],[[49,[46,[25]]],[[50,[25]]]],[[[46,[25]],40]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],[[[46,[[51,[25]],25]]],[[46,[25]]]],0,0,0,0,0,0,0,[52,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,[[17,[55]]]],[52,[[17,[53]]]],[56,56],[52,52],[54,54],[57,57],[[]],[[]],[[]],[[]],[58,4],[[],56],[56],[[56,56],27],[[52,52],27],[[54,54],27],[[57,57],27],[[],27],[[],27],[[],27],[[],27],[[56,3,11],56],[[56,31],35],[[52,31],35],[[54,31],35],[[57,31],35],[[57,31],35],[[]],[[]],[[]],[[]],[[3,[2,[58]]],56],[[52,40]],[[57,40]],0,0,[[]],[[]],[[]],[[]],[[56,56],56],[[3,58,59],56],[60,17],[[54,3,59],[[17,[4]]]],[54,61],0,[54,[[17,[62]]]],[[],[[63,[57]]]],[54,[[17,[64]]]],[[]],[[]],[[]],[[]],[[],47],[54,[[17,[60]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],[[],48],[[],48],[[52,53],52],0,0,0,0,0,0,0,0,[[]],[[]],[65,65],[[]],[[65,65],27],[[],27],[[65,3,7,60],[[66,[60]]]],[67,[[17,[65]]]],[[65,31],35],[[]],[[65,40]],[[]],[65,27],[65,27],[65,27],[[60,60],[[66,[60]]]],[[]],[[],33],[[],33],[[],48],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[68,68],[[]],[[68,68],27],[[],27],[[68,3,7,60],[[66,[60]]]],[67,[[17,[68]]]],[[68,31],35],[[]],[[68,40]],[[]],[[]],[[],33],[[],33],[[],48],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[70,70],[[]],[[]],[[69,69],27],[[70,70],27],[[],27],[[],27],[[69,3,7,60],[[66,[60]]]],[[70,3,7,60],[[66,[71]]]],[67,[[17,[[16,[69,70]]]]]],[[71,31],35],[[69,31],35],[[70,31],35],[[]],[[]],[[]],[[69,40]],[[70,40]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],[[],48],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8,[[72,[49]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[[]],[[],74],[[],75],[[],76],[[],77],[[],78],[[],79],[[],80],[[],81],[[],82],[[],83],[[73,73],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[66,[60]]]],0,[[3,7,5,1],17],[[73,31],35],[[74,31],35],[[75,31],35],[[76,31],35],[[77,31],35],[[78,31],35],[[79,31],35],[[80,31],35],[[81,31],35],[[82,31],35],[[83,31],35],[[84,3,85,31],35],[[84,86,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[72,[88]]]],0,[[74,3],[[89,[74]]]],[[75,3],[[89,[75]]]],[[76,3],[[89,[76]]]],[[77,3],[[89,[77]]]],[[78,3],[[89,[78]]]],[[79,3],[[89,[79]]]],[[80,3],[[89,[80]]]],[[81,3],[[89,[81]]]],[[82,3],[[89,[82]]]],[[83,3],[[89,[83]]]],[[74,3],[[90,[74]]]],[[75,3],[[90,[75]]]],[[76,3],[[90,[76]]]],[[77,3],[[90,[77]]]],[[78,3],[[90,[78]]]],[[79,3],[[90,[79]]]],[[80,3],[[90,[80]]]],[[81,3],[[90,[81]]]],[[82,3],[[90,[82]]]],[[83,3],[[90,[83]]]],[22,7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,22],0,[7,[[17,[72]]]],[7,[[17,[91]]]],0,[10,[[33,[[72,[73]],92]]]],0,[7,[[66,[[72,[60]]]]]],0,[[84,3,85,93],27],[94,84],[21,66],0,[7,[[66,[95]]]],0,[8,5],[8,[[66,[[96,[5]]]]]],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],0,0,[[3,11,[2,[39]],10,98],[[33,[[66,[[17,[7]]]],36]]]],0,0,[[]],[[]],[[]],[[]],[59,59],[88,88],[[]],[[]],[[88,88],27],[[],27],[[59,31],35],[[88,31],35],[[]],[[]],[[]],[[]],[[59,3,99],[[17,[11]]]],[[59,3,100],[[16,[67,11]]]],[[3,8],59],[[],59],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],0,0,0,0,0,0,0,0,0,0,0,[61,[[17,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[101,101],[102,102],[[]],[[]],[[]],[[61,61],103],[[101,101],103],[[102,102],103],[[61,3],104],[[101,3],104],[[61,61],27],[[101,101],27],[[102,102],27],[[],27],[[],27],[[],27],[[61,31],35],[[101,31],35],[[102,31],35],[[]],[67,61],[[]],[[]],[102,61],[[102,105],61],[[3,99,59],[[17,[61]]]],[[61,40]],[[101,40]],[[102,40]],[[]],[[]],[[]],[61,27],[61,27],[61,27],0,[61,53],[[61,61],[[17,[103]]]],[[101,101],[[17,[103]]]],[[102,102],[[17,[103]]]],0,[61,[[17,[67]]]],[[61,67]],[61],[[],[[63,[61]]]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],[[],48],[61,101],0,0,0,[[],67],[67,[[17,[106]]]],[67,[[17,[64]]]],[67,[[17,[53]]]],[[]],[[]],[[]],[[]],[67,67],[107,107],[[]],[[]],[[67,67],103],[[107,107],103],[[67,3],104],[[107,3],104],[[67,67],27],[[107,107],27],[[],27],[[],27],[[67,31],35],[[107,31],35],[[]],[[]],[[],67],[[67,40]],[[107,40]],[[]],[[]],[67,27],0,[[],67],0,0,0,[108,67],[53,67],[[67,67],[[17,[103]]]],[[107,107],[[17,[103]]]],[[]],[[]],[67,64],[107,64],[[],33],[[],33],[[],33],[[],33],[[],48],[[],48],[67,107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[109,109],[[]],[[],109],[[109,109],27],[[],27],[[109,3,11,11,60,[17,[60]]],[[66,[60]]]],[[109,31],35],[[]],[[109,40]],[[]],[109,27],[110,109],[[]],[[],33],[[],33],[[],48]],"c":[],"p":[[6,"SyntaxToken"],[3,"InFile"],[8,"ExpandDatabase"],[8,"Iterator"],[6,"SyntaxNode"],[8,"Clone"],[3,"MacroCallId"],[3,"HirFileId"],[3,"InternId"],[3,"MacroDefId"],[6,"CrateId"],[4,"MacroCallKind"],[4,"Macro"],[6,"AstId"],[3,"Fn"],[4,"Either"],[4,"Option"],[3,"ExpansionInfo"],[3,"ValueResult"],[4,"ExpandError"],[3,"MacroFile"],[3,"MacroCallLoc"],[4,"MacroDefKind"],[4,"ExpandTo"],[8,"AstNode"],[4,"Origin"],[15,"bool"],[8,"PartialEq"],[15,"u32"],[3,"FileId"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Debug"],[6,"Result"],[3,"UnresolvedMacro"],[8,"Default"],[4,"ExpandError"],[3,"MacroCall"],[8,"Hasher"],[8,"Hash"],[3,"Attr"],[8,"FnOnce"],[4,"Item"],[3,"FileRange"],[3,"FileAstId"],[3,"String"],[3,"TypeId"],[3,"AstIdMap"],[3,"AstPtr"],[8,"Into"],[3,"AttrId"],[15,"usize"],[3,"Attr"],[4,"CfgExpr"],[3,"RawAttrs"],[4,"AttrInput"],[8,"HasAttrs"],[3,"Hygiene"],[6,"Subtree"],[3,"ModPath"],[6,"Ident"],[3,"InternStorage"],[3,"SmolStr"],[4,"BuiltinAttrExpander"],[6,"ExpandResult"],[3,"Name"],[4,"BuiltinDeriveExpander"],[4,"BuiltinFnLikeExpander"],[4,"EagerExpander"],[3,"ExpandedEager"],[3,"Arc"],[4,"TokenExpander"],[3,"AstIdMapQuery"],[3,"ParseMacroExpansionQuery"],[3,"InternMacroCallQuery"],[3,"InternMacroCallLookupQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"ExpandProcMacroQuery"],[3,"ParseMacroExpansionErrorQuery"],[3,"HygieneFrameQuery"],[3,"ExpandDatabaseGroupStorage__"],[3,"DatabaseKeyIndex"],[3,"Runtime"],[8,"FnMut"],[3,"HygieneFrame"],[3,"QueryTable"],[3,"QueryTableMut"],[3,"GreenNode"],[4,"ParseError"],[3,"Revision"],[15,"u16"],[3,"Box"],[3,"Parse"],[3,"Arc"],[8,"Fn"],[3,"Path"],[3,"NameRef"],[3,"UnescapedModPath"],[4,"PathKind"],[4,"Ordering"],[8,"Display"],[8,"IntoIterator"],[15,"str"],[3,"UnescapedName"],[3,"Lifetime"],[3,"ProcMacroExpander"],[3,"ProcMacroId"],[13,"FnLike"],[13,"Derive"],[13,"Attr"],[3,"ExpandDatabaseStorage"],[13,"DeclarativeMacro"],[8,"AsName"]]},\
"hir_ty":{"doc":"The type system. We currently use this to infer types for …","t":"EDDNGGNGNEGENNDNNNNNEDGGEDIGNNGGGNGNEGGDNNGGINNGNNNGGGDGNNNGGGGSEEGEDGNNDGGGDNNNNENNNSNGGDNEGNEGNNGIGGNNNNDNDGNEEGNNNGCGIGDEIGDENNGNNNNNNNNNNENGGGLFKLKLKLKLKLKLKLKLKLLLLKLFACMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLALKLFLFAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLFLFLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLFKLKLKLKLKLKLLLMLAALLLLFMALAMLLLFLLLLLLLLLMLAKLLLLLLFLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLKLLLLLMFFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLKLKLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLMLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMFEINNLLLLLLLLLLFFLKLFLLLFFFDDDDDDDDDDDDDDDIDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDKLMLLLLLLLKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMLLLLLLLLLLLLLLLKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMLLLLLLLKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKKMKMKMKMKMKMKMKMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMKMKMKMKMKMLKMKMKMKMLKLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMKMLLLLLLLKMKMKKMKMKMKKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMEDDNNNDLLLLLLLLLLLMMMMLLLLLLMMMMFMLLLLFFFMLLLLLLLLLLLLFMMMMMMENNNENENNDNIEDDINNNNNNENNNLLLLLLLLLLLLLLLLLLLLLLMLLLLKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLFMMMFFFNNGENDNGNNNGLLLLLLLLLLLLLLLLLLLLFFFFLFLLLLLLLLNNNNNNNDENNNNNDNNNDENNELLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLNNNNENNNDGENNNEDNNNENNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNDGNNDEENNENNNNNENNNNNNNNNNENNDNNNENNNNNNENNNNNNNDENNNNNNDNDENNNNNNNENNNNNNNNNNNNNNDNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMLMMMFMFFFFFFFMMLLLMFMLLLLLLMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMEEENNNNENNNNNNNNNNENNNNNNNNNNNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLNNNEDMLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLL","n":["Adjust","Adjustment","AdtId","AdtId","AliasEq","AliasTy","ArrayToPointer","AssocTypeId","AsyncBlockTypeImplTrait","AutoBorrow","Binders","BindingMode","Bool","Borrow","BoundVar","BreakOutsideOfLoop","BuiltinType","ByRef","ByValue","Bytes","CallableDefId","CallableSig","Canonical","CanonicalVarKinds","CaptureKind","CapturedItem","Cast","ChalkTraitId","Char","ClosureFnPointer","ClosureId","ConcreteConst","Const","Const","ConstData","ConstId","ConstScalar","ConstValue","ConstrainedSubst","DebruijnIndex","Deref","Disallowed","DomainGoal","DynTy","DynTyExt","EnumVariantId","EnumVariantId","Environment","ExpectedFunction","Float","Float","FnDefId","FnPointer","FnSig","FnSubst","ForeignDefId","FunctionId","FunctionId","General","GenericArg","GenericArgData","Goal","Guidance","INNERMOST","ImplTraitId","ImplTraitLoweringMode","InEnvironment","InferenceDiagnostic","InferenceResult","InferenceVar","Int","Integer","Interner","Lifetime","LifetimeData","LifetimeOutlives","MemoryMap","MismatchedArgCount","Move","Mut","MutToConstPointer","Mutability","NeverToAny","NoSuchField","Not","ONE","Opaque","OpaqueTy","OpaqueTyId","OverloadedDeref","Param","ParamKind","PlaceholderIndex","Pointer","PointerCast","PolyFnSig","PrivateAssocItem","PrivateField","ProjectionTy","ProjectionTyExt","QuantifiedWhereClause","QuantifiedWhereClauses","RawPtr","Ref","Ref","ReifyFnPointer","ReturnTypeImplTrait","ReturnTypeImplTrait","ReturnTypeImplTraits","RpitId","Safe","Safety","Scalar","Solution","StaticId","StructId","StructId","Substitution","TraitEnvironment","TraitRef","TraitRefExt","Ty","TyBuilder","TyDefId","TyExt","TyKind","TyLoweringContext","TyVariableKind","Type","TypeAliasId","TypeFlags","TypedHole","Uint","UnevaluatedConst","UnionId","Unknown","UnresolvedField","UnresolvedMethodCall","Unsafe","UnsafeFnPointer","Unsize","ValueTyDefId","Variable","VariableKind","VariableKinds","WhereClause","adt","all_super_traits","as_adt","as_adt","as_builtin","as_builtin","as_closure","as_closure","as_fn_def","as_fn_def","as_generic_def","as_generic_def","as_raw_ptr","as_raw_ptr","as_reference","as_reference","as_reference_or_ptr","as_reference_or_ptr","as_tuple","as_tuple","assoc_resolutions_for_expr","assoc_resolutions_for_pat","assoc_type_projection","associated_type_parent_trait","associated_type_parent_trait","associated_type_shorthand_candidates","autoderef","autoderef","binding_modes","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_within","build","build","build","build","build","build","builtin","callable_def","callable_def","callable_sig","callable_sig","callable_sig_from_fnonce","canonical_var_kinds_data","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closure_info","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collect_placeholders","const_data","const_eq","consteval","constraints_data","contains_unknown","contains_unknown","could_coerce","could_match","could_unify","db","db","debruijn","debug_adt_id","debug_alias","debug_assoc_type_id","debug_canonical_var_kinds","debug_closure_id","debug_const","debug_constraints","debug_fn_def_id","debug_generic_arg","debug_goal","debug_goals","debug_lifetime","debug_opaque_ty","debug_opaque_ty_id","debug_program_clause","debug_program_clause_implication","debug_program_clauses","debug_projection_ty","debug_quantified_where_clauses","debug_separator_trait_ref","debug_substitution","debug_trait_id","debug_ty","debug_variable_kinds","debug_variable_kinds_with_angles","def_ty","default","default","default","depth","diagnostics","diagnostics","discr_ty","display","display_place","dyn_trait","dyn_trait","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals_ctor","equals_ctor","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr_adjustments","expr_type_mismatches","field_resolution","fill","fill_with_bound_vars","fill_with_defaults","fill_with_unknown","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_ptr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_assoc_type_id","from_chalk_trait_id","from_fn_ptr","from_foreign_def_id","from_params_and_return","from_placeholder_idx","generic_arg_data","goal_data","goals_data","has_interner","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_trait_id","hir_trait_id","impl_self_ty","impl_trait_bounds","impl_trait_bounds","index","index","index","index","index_if_bound_at","index_if_innermost","intern_canonical_var_kinds","intern_const","intern_constraints","intern_generic_arg","intern_generic_arg_kinds","intern_goal","intern_goals","intern_lifetime","intern_program_clause","intern_program_clauses","intern_quantified_where_clauses","intern_substitution","intern_ty","intern_variances","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_copy","is_copy","is_floating_point","is_floating_point","is_fn_unsafe_to_call","is_integral","is_integral","is_never","is_never","is_scalar","is_scalar","is_ty_var","is_ty_var","is_unit","is_unit","is_unknown","is_unknown","is_unknown","kind","kind","krate","lang_items","layout","lifetime_data","local","lower_ty","lower_ty_ext","lt_from_placeholder_idx","memory","method_resolution","method_resolution","mir","mutated_bindings_in_closure","new","new","new","param_idx","params","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pat_adjustments","placeholder_subst","primitive","principal","principal","program_clause_data","program_clauses_data","push","quantified_where_clauses_data","remaining","replace_errors_with_variables","ret","self_type_parameter","self_type_parameter","shift_in","shift_out","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","slice","static_lifetime","strip_reference","strip_reference","strip_references","strip_references","subst_for_closure","subst_for_def","subst_for_generator","substitution_data","target","to_assoc_type_id","to_chalk_trait_id","to_const","to_fn_ptr","to_foreign_def_id","to_lifetime","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_placeholder_idx","to_ty","trait_","trait_","trait_ref","trait_ref","trait_ref","traits","try_fold_with","try_fold_with","try_fold_with","try_fold_with","try_fold_with","try_fold_with","try_fold_with","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple","tuple_with","ty","ty_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mismatch_for_expr","type_mismatch_for_pat","type_mismatches","type_of_binding","type_of_expr","type_of_for_iterator","type_of_pat","type_of_rpit","type_param_mode","unit","unknown_subst","usize","variable_kinds_data","variances_data","variant_resolution_for_expr","variant_resolution_for_pat","visit_with","visit_with","visit_with","visit_with","visit_with","visit_with","vtable","with_debruijn","with_impl_trait_mode","with_shifted_in","with_type_param_mode","within","zip_with","zip_with","zip_with","zip_with","bad_value_break","call_expr","call_expr","expected","expected","expr","expr","expr","expr","expr","expr","field","field_with_same_name","found","found","id","is_break","item","method_with_same_name_exists","name","name","receiver","receiver","autoderef","ConstEvalError","ConstExt","MirEvalError","MirLowerError","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from","from","intern_const_ref","intern_const_scalar","into","is_unknown","to_owned","try_const_usize","try_from","try_into","type_id","unknown_const","unknown_const_as_generic","usize_const","AdtVarianceQuery","AssociatedTyDataQuery","AssociatedTyValueQuery","BorrowckQuery","CallableItemSignatureQuery","ConstEvalDiscriminantQuery","ConstEvalQuery","ConstEvalStaticQuery","ConstParamTyQuery","FieldTypesQuery","FnDefDatumQuery","FnDefVarianceQuery","GenericDefaultsQuery","GenericPredicatesForParamQuery","GenericPredicatesQuery","HirDatabase","HirDatabaseGroupStorage__","HirDatabaseStorage","ImplDatumQuery","ImplSelfTyQuery","ImplTraitQuery","IncoherentInherentImplCratesQuery","InferQueryQuery","InherentImplsInBlockQuery","InherentImplsInCrateQuery","InternCallableDefLookupQuery","InternCallableDefQuery","InternClosureLookupQuery","InternClosureQuery","InternGeneratorLookupQuery","InternGeneratorQuery","InternImplTraitIdLookupQuery","InternImplTraitIdQuery","InternLifetimeParamIdLookupQuery","InternLifetimeParamIdQuery","InternTypeOrConstParamIdLookupQuery","InternTypeOrConstParamIdQuery","InternedCallableDefId","InternedClosureId","InternedConstParamId","InternedGeneratorId","InternedLifetimeParamId","InternedOpaqueTyId","InternedTypeOrConstParamId","LayoutOfAdtQuery","LayoutOfTyQuery","MirBodyForClosureQuery","MirBodyQuery","MonomorphizedMirBodyForClosureQuery","MonomorphizedMirBodyQuery","ProgramClausesForChalkEnvQuery","ReturnTypeImplTraitsQuery","StructDatumQuery","TargetDataLayoutQuery","TraitDatumQuery","TraitEnvironmentQuery","TraitImplsInBlockQuery","TraitImplsInCrateQuery","TraitImplsInDepsQuery","TraitSolveQueryQuery","TyQuery","ValueTyQuery","adt_variance","adt_variance","adt_variance","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","associated_ty_data","associated_ty_data","associated_ty_value","associated_ty_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowck","borrowck","callable_item_signature","callable_item_signature","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","const_eval","const_eval","const_eval_discriminant","const_eval_discriminant","const_eval_static","const_eval_static","const_param_ty","const_param_ty","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","field_types","field_types","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fn_def_datum","fn_def_datum","fn_def_variance","fn_def_variance","fn_def_variance","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","generic_defaults","generic_defaults","generic_predicates","generic_predicates","generic_predicates_for_param","generic_predicates_for_param","hash","hash","hash","hash","hash","hash","hash","impl_datum","impl_datum","impl_self_ty","impl_self_ty","impl_trait","impl_trait","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","incoherent_inherent_impl_crates","incoherent_inherent_impl_crates","infer","infer_query","infer_query","inherent_impls_in_block","inherent_impls_in_block","inherent_impls_in_crate","inherent_impls_in_crate","intern_callable_def","intern_callable_def","intern_closure","intern_closure","intern_generator","intern_generator","intern_impl_trait_id","intern_impl_trait_id","intern_lifetime_param_id","intern_lifetime_param_id","intern_type_or_const_param_id","intern_type_or_const_param_id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","layout_of_adt","layout_of_adt","layout_of_ty","layout_of_ty","lookup_intern_callable_def","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_closure","lookup_intern_generator","lookup_intern_generator","lookup_intern_impl_trait_id","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_lifetime_param_id","lookup_intern_type_or_const_param_id","lookup_intern_type_or_const_param_id","maybe_changed_since","mir_body","mir_body","mir_body_for_closure","mir_body_for_closure","monomorphized_mir_body","monomorphized_mir_body","monomorphized_mir_body_for_closure","monomorphized_mir_body_for_closure","new","normalize_projection","partial_cmp","program_clauses_for_chalk_env","program_clauses_for_chalk_env","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","recover","recover","recover","recover","recover","recover","recover","recover","recover","recover","recover","return_type_impl_traits","return_type_impl_traits","struct_datum","struct_datum","target_data_layout","target_data_layout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trait_datum","trait_datum","trait_environment","trait_environment","trait_environment_for_body","trait_impls_in_block","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","trait_impls_in_deps","trait_solve","trait_solve_query","trait_solve_query","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_ty","value_ty","BodyValidationDiagnostic","IncoherentImpl","IncorrectCase","MissingMatchArms","RecordMissingFields","ReplaceFilterMapNextWithFindMap","UnsafeExpr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","collect","eq","equivalent","expected_case","expr","file","file_id","fmt","fmt","from","from","from","from","ident","ident_text","ident_type","impl_","incorrect_case","inside_unsafe_block","into","into","into","into","missing_unsafe","record_literal_missing_fields","record_pattern_missing_fields","suggested_text","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unsafe_expressions","match_expr","method_call_expr","missed_fields","record","uncovered_patterns","variant","ClosureStyle","ClosureWithId","ClosureWithSubst","Diagnostics","DisplaySourceCodeError","DisplaySourceCodeError","DisplayTarget","FmtError","Generator","HexifiedConst","Hide","HirDisplay","HirDisplayError","HirDisplayWrapper","HirFormatter","HirWrite","ImplFn","NotSized","OpaqueType","PathNotFound","RANotation","Sized","SizedByDefault","SourceCode","Test","UnknownType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","db","display","display_source_code","display_test","display_truncated","end_location_link","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hir_fmt","hir_fmt","into","into","into","into","into","into","into","into","into_displayable","omit_verbose_types","should_truncate","start_location_link","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_closure_style","write_bounds_like_dyn_trait_with_prefix","write_char","write_fmt","write_joined","write_str","write_to","write_visibility","allow_opaque","module_id","anchor","is_box","is_unsafe_cell","lang_items_for_bin_op","HasErrorType","HasPlaceholder","Layout","LayoutError","NotImplemented","RustcEnumVariantIdx","SizeOverflow","TagEncoding","TargetLayoutNotAvailable","Unknown","UserError","Variants","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","index","into","into","layout_of_adt_query","layout_of_adt_recover","layout_of_ty_query","layout_of_ty_recover","new","target_data_layout_query","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Adt","Array","Dyn","Filter","ForeignType","Function","IncludeBlock","InherentImpls","LookupMode","MethodCall","Never","None","Path","RawPtr","ReceiverAdjustments","Scalar","Slice","Str","TraitImpls","TyFingerprint","Unit","Unnameable","VisibleFromModule","all_impls","all_impls","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","def_crates","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","for_inherent_impl","for_self_ty","for_self_ty_without_blanket_impls","for_trait","for_trait_and_self_ty","for_trait_impl","from","from","from","from","from","from","from","from","hash","implements_trait","implements_trait_unique","into","into","into","into","into","into","invalid_impls","is_dyn_method","iterate_method_candidates_dyn","iterate_path_candidates","lookup_impl_const","lookup_impl_method","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Abort","Add","Adt","Aggregate","AggregateKind","Array","Assert","Assign","BasicBlock","BasicBlockId","BinOp","BitAnd","BitOr","BitXor","BorrowKind","BorrowckResult","BreakWithoutLoop","Call","Cast","CastKind","CheckedBinaryOp","Closure","CoerceUnsizedError","ConstEvalError","ConstEvalError","Constant","ConstantIndex","ContinueWithoutLoop","Copy","CopyForDeref","Deinit","Deref","Discriminant","Div","Drop","DropAndReplace","DynStar","Eq","Evaluator","ExecutionLimitExceeded","ExprId","FalseEdge","FalseUnwind","Field","FloatToFloat","FloatToInt","FnPtrToPtr","Ge","GeneratorDrop","GenericArgNotProvided","Goto","Gt","ImplementationError","InFunction","IncompleteExpr","IncompletePattern","Index","IntToFloat","IntToInt","InvalidConst","InvalidVTableId","LangItemNotFound","LangItemNotFound","LayoutError","LayoutError","Le","Len","Local","LocalId","Loop","Lt","MirBody","MirEvalError","MirLowerError","MirLowerError","MirLowerErrorForClosure","MirSpan","MissingFunctionDefinition","Move","Mul","Mut","Mut","MutabilityReason","MutatingRvalue","Ne","Neg","Nop","Not","Not","NotSupported","NotSupported","Offset","OpaqueCast","Operand","Panic","PatId","Place","Pointer","PointerExposeAddress","PointerFromExposedAddress","ProjectionElem","RecordLiteralWithoutPath","Ref","Rem","Repeat","Resume","Return","Rvalue","Shallow","ShallowInitBox","ShallowInitBoxWithAlloc","Shared","Shl","Shr","StackOverflow","Statement","StatementKind","Static","StorageDead","StorageLive","Sub","Subslice","SwitchInt","SwitchTargets","TargetDataLayoutNotAvailable","Terminator","TerminatorKind","TraitFunctionDefinition","Tuple","TupleOrClosureField","TypeError","TypeError","TypeIsUnsized","TypeMismatch","UnOp","UnaccessableLocal","UnaryOp","UndefinedBehavior","Union","Unique","Unknown","Unreachable","UnresolvedField","UnresolvedLabel","UnresolvedMethod","UnresolvedName","UnresolvedUpvar","UnsizedTemporary","Use","VTableMap","Yield","all_targets","basic_blocks","binding_locals","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowck_query","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closures","cmp","cmp","dbg","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","interpret_mir","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_cleanup","iter","kind","local","locals","lower_to_mir","mir_body","mir_body_for_closure_query","mir_body_query","mir_body_recover","monomorphize_mir_body_bad","monomorphized_mir_body_for_closure_query","monomorphized_mir_body_query","monomorphized_mir_body_recover","moved_out_of_ref","mutability_of_locals","new","new","otherwise","owner","pad16","param_locals","partial_cmp","partial_cmp","pretty_print","pretty_print","pretty_print","projected_ty","projection","span","start_block","statements","static_if","target_for_value","terminator","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","allow_two_phase_borrow","spans","from","from_end","offset","to","args","cleanup","cleanup","cond","destination","discr","drop","expected","from_hir_call","func","imaginary_target","place","place","real_target","real_target","resume","resume_arg","target","target","target","target","target","targets","unwind","unwind","unwind","value","value","BuiltinFloat","BuiltinInt","BuiltinUint","F32","F32","F64","F64","FloatTy","I128","I128","I16","I16","I32","I32","I64","I64","I8","I8","IntTy","Isize","Isize","U128","U128","U16","U16","U32","U32","U64","U64","U8","U8","UintTy","Usize","Usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","float_ty_to_string","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_suffix","from_suffix","from_suffix","hash","hash","hash","hash","hash","hash","int_ty_to_string","into","into","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","shifted_in","shifted_in","shifted_in","shifted_in_from","shifted_in_from","shifted_in_from","shifted_out","shifted_out","shifted_out","shifted_out_to","shifted_out_to","shifted_out_to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_fold_with","try_fold_with","try_fold_with","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uint_ty_to_string","visit_with","visit_with","visit_with","Fn","FnMut","FnOnce","FnTrait","TraitEnvironment","block","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","empty","env","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get_id","hash","hash","into","into","krate","method_name","partial_cmp","to_chalk_ir","to_owned","to_owned","traits_in_scope_from_clauses","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"hir_ty"],[918,"hir_ty::InferenceDiagnostic"],[941,"hir_ty::autoderef"],[942,"hir_ty::consteval"],[968,"hir_ty::db"],[1951,"hir_ty::diagnostics"],[2006,"hir_ty::diagnostics::BodyValidationDiagnostic"],[2012,"hir_ty::display"],[2132,"hir_ty::display::DisplayTarget"],[2134,"hir_ty::display::SizedByDefault"],[2135,"hir_ty::lang_items"],[2138,"hir_ty::layout"],[2184,"hir_ty::method_resolution"],[2295,"hir_ty::mir"],[2812,"hir_ty::mir::BorrowKind"],[2813,"hir_ty::mir::MutabilityReason"],[2814,"hir_ty::mir::ProjectionElem"],[2818,"hir_ty::mir::TerminatorKind"],[2846,"hir_ty::primitive"],[3006,"hir_ty::traits"]],"d":["","Represents coercing a value to a different type of value.","The id for an Abstract Data Type (i.e. structs, unions and …","","","","Go from <code>*const [T; N]</code> to <code>*const T</code>","","","","Represents generic parameters and an item bound by them. …","Binding modes inferred for patterns. …","","Take the address and produce either a <code>&amp;</code> or <code>*</code> pointer.","Identifies a particular bound variable within a binder. …","","","","","","","A function signature as seen by type inference: Several …","","","","","The <code>Cast</code> trait is used to make annoying upcasts between …","","","Go from a non-capturing closure to an fn pointer or an …","","","","","","","A concrete constant value","","","References the binder at the given depth. The index is a de","Dereference once, producing a place.","<code>impl Trait</code> is disallowed and will be an error.","","","","","","","","","","","","","A wrapper for the substs on a Fn.","","","","","","","","","Innermost index.","","","","","The result of type inference: A mapping from expressions …","","","","","","","","A constant can have reference to other things. Memory map …","","","Mutable","Go from a mut raw pointer to a const raw pointer.","Whether a type is mutable or not.","Go from ! to any type.","","Immutable","One level higher than the innermost index.","<code>impl Trait</code> gets lowered into an opaque type that doesn’t …","","","An overloaded autoderef step, representing a …","<code>impl Trait</code> gets lowered into a type variable. Used for …","","","","","A polymorphic function signature.","","","","","","","Converts from T to *T.","","Converts from T to &amp;T.","Go from a fn-item type to a fn-pointer type.","","","","","Safe","Whether a function is safe or not.","Types of scalar values.","","","","","Interned list of generic arguments for an item. When an …","","","","","This is a builder for <code>Ty</code> or anything that needs a …","","","","","Represents some extra knowledge we may have about the type …","","","","","","","","Case of an unknown value that rustc might know but we don…","","","Unsafe","Go from a safe fn pointer to an unsafe fn pointer.","Unsize a pointer/reference value, e.g., <code>&amp;[T; n]</code> to <code>&amp;[T]</code>. …","","<code>impl Trait</code> gets lowered into a variable that can unify …","","","","","Returns an iterator over the whole super trait hierarchy …","","","","","","","","","","","","","","","","","","","","","","","","","In certain situations, rust automatically inserts derefs …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if this variable is bound within the <code>amount</code> innermost …","","","","","","","","","","","","","","Cast a value to type <code>U</code> using <code>CastTo</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns unique placeholders for types and consts contained …","","","Constant evaluation details","","","","","","","The home of <code>HirDatabase</code>, which is the Salsa database …","","Debruijn index, which identifies the binder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Depth of the De Bruijn index, counting from 0 starting with","Type inference-based diagnostics.","","","The <code>HirDisplay</code> trait, which serves two purposes: Turning …","","If this is a <code>dyn Trait</code>, returns that trait.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","FIXME: Get rid of this, it’s not a good abstraction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index within the binder.","Return the index of the bound variable, but only if it is …","Return the index of the bound variable, but only if it is …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Functions to detect special lang items","Compute the binary representation of a type","","","","","","","This module is concerned with finding methods that a given …","","MIR definitions and implementation","","Creates a new bound variable.","Creates a new de Bruijn index with a given depth.","","Return an index of a parameter in the generic type …","","","","","","","","","","Stores the types which were implicitly dereferenced in …","","A few helper functions for dealing with primitives.","","","","","","","","‘Canonicalizes’ the <code>t</code> by replacing any errors with new …","","","","Update this index in place by shifting it “in” through …","Update in place by shifting out from <code>amount</code> binders.","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","Returns the resulting index when this value is moved into …","","","","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","Adds <code>outer_binder</code> levels to the <code>self</code> index. Intuitively, …","","","","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","Returns the resulting index when this value is moved out …","","","","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","Subtracts <code>outer_binder</code> levels from the <code>self</code> index. …","","","","","","","","","","","","Creates a <code>TyBuilder</code> to build <code>Substitution</code> for a generator …","","","","","Wraps the bound variable in a constant.","","","Wrap the bound variable in a lifetime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts the bound variable to a type.","","","","","","Trait solving using Chalk.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of the result of <code>.into_iter()</code> on the for. <code>ExprId</code> is …","For each pattern record the type it resolves to.","","Note: Conceptually, it’s thinkable that we could be in a …","","","","","","","","","","","","","","","","","","","True if the binder identified by this index is within the …","","","","","","","","","","","","","","","","","Contains the type the field resolves to","","","","","","","","","","","","","Extension trait for <code>Const</code>","","","","","","","","","","","","Returns the argument unchanged.","Interns a constant scalar with the given type","Interns a constant scalar with the given type","Calls <code>U::from(self)</code>.","Is a <code>Const</code> unknown?","","","","","","","","Interns a possibly-unknown target usize","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Collects all crates in the dependency graph that have …","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","<code>{closure#14825}</code>, useful for some diagnostics (like type …","<code>{closure#14825}&lt;i32, ()&gt;</code>, useful for internal usage.","Display types for inlays, doc popups, autocompletion, etc…","","Errors that can occur when generating source code","","<code>FmtError</code> is required to be compatible with …","","","<code>…</code>, which is the <code>TYPE_HINT_TRUNCATION</code>","","","","","","<code>impl FnX(i32, i32) -&gt; i32</code>, where <code>FnX</code> is the most special …","","","","<code>|i32, i32| -&gt; i32</code>","","","Display types for inserting them in source files. The …","Only for test purpose to keep real types","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Display</code>able type that is human-readable. Use …","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","Returns a <code>Display</code>able type that is human-readable and …","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a <code>Display</code>able type that is human-readable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This allows using the <code>write!</code> macro directly with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Filter for results that are visible from the given module","","","Include impls from the given block.","Inherent impls defined in some crate.","Whether we’re looking up a dotted method call (like …","Looking up a method call like <code>v.len()</code>: We only consider …","","Do nothing special in regards visibility","Looking up a path like <code>Vec::new</code> or <code>Vec::default</code>: We …","","","","","","Trait impls defined or available in some crate.","This is used as a key for indexing impls.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a TyFingerprint for looking up an inherent impl. …","","Queries all trait impls for the given type.","Queries all impls of the given trait.","Queries all impls of <code>trait_</code> that may apply to <code>self_ty</code>.","Creates a TyFingerprint for looking up a trait impl.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the self parameter of <code>Trait</code> method is the …","","","","Looks up the impl method that actually runs for the trait …","","","","","","","","","","","","","","","","","","","","","","","Indicates that the landing pad is finished and that the …","The <code>+</code> operator (addition)","","Creates an aggregate value, like a tuple or struct.","","The type is of the element","Evaluates the operand, which must have type <code>bool</code>. If it is …","","","","","The <code>&amp;</code> operator (bitwise and)","The <code>|</code> operator (bitwise or)","The <code>^</code> operator (bitwise xor)","","","","Roughly speaking, evaluates the <code>func</code> operand and the …","Performs essentially all of the casts that can be …","","<code>Offset</code> has the same semantics as <code>pointer::offset</code>, except …","","","","","Constants are already semantically values, and remain …","","","Creates a value by loading the given place.","A CopyForDeref is equivalent to a read from a place at the …","","","Computes the discriminant of the place, returning it as an …","The <code>/</code> operator (division)","The behavior of this statement differs significantly …","Drops the place and assigns a new value to it.","Cast into a dyn* object.","The <code>==</code> operator (equality)","","","","A block where control flow only ever takes one real path, …","A terminator for blocks that only take one path in …","","","","","The <code>&gt;=</code> operator (greater than or equal to)","Indicates the end of dropping a generator.","","Block has one successor; we continue execution there.","The <code>&gt;</code> operator (greater than)","Something that should never happen and is definitely a …","","","","","","","","","","","","","The <code>&lt;=</code> operator (less than or equal to)","Creates a pointer/reference to the given thread local.","","","","The <code>&lt;</code> operator (less than)","","","","","","","","Creates a value by performing loading the place, just like …","The <code>*</code> operator (multiplication)","","Data is mutable and not aliasable.","Stores spans which implies that the local should be …","","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","","","The <code>!</code> operator for logical inversion","","","The <code>ptr.offset</code> operator","","An operand in MIR represents a “value” in Rust, the …","","","","All sorts of pointer-to-pointer casts. Note that …","An exposing pointer to address cast. A cast between a …","An address-to-pointer cast that picks up an exposed …","","","Creates a reference of the indicated kind to the place.","The <code>%</code> operator (modulus)","Creates an array where each element is the value of the …","Indicates that the landing pad is finished and that the …","Returns from the function.","","The immediately borrowed place must be immutable, but …","Transmutes a <code>*mut u8</code> into shallow-initialized <code>Box&lt;T&gt;</code>.","NON STANDARD: allocates memory with the type’s layout, …","Data must be immutable and is aliasable.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&gt;&gt;</code> operator (shift right)","","","","NON STANDARD: This kind of operand returns an immutable …","","","The <code>-</code> operator (subtraction)","","Switches based on the computed value.","","","","","Trying to lower a trait function, instead of an …","The type is of the tuple","","Means that code had type errors (or mismatched args) and …","This should be never happen. Type mismatch should catch …","","","","","Computes a value as described by the operation. Exactly …","Means that code had undefined behavior. We don’t try to …","","Data must be immutable but not aliasable. This kind of …","","Indicates a terminator that can never be reached.","","","","","","","Yields the operand unchanged","","Marks a suspend point.","Returns a slice with all possible jump targets (including …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This field stores the closures directly owned by this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If true, this block lies on an unwind path. This is used …","Returns an iterator over the switch targets.","","","","","","","","","","","","","","","","Creates switch targets from an iterator of values and …","Returns the fallback target that is jumped to when none of …","","","","","","","","","","","","","List of statements in this block.","Builds a switch targets definition that jumps to <code>then</code> if …","Finds the <code>BasicBlock</code> to which this <code>SwitchInt</code> will branch …","Terminator for this block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>true</code> if this borrow arose from method-call auto-ref (i.e., …","","","","","","Arguments the function is called with. These are owned by …","Cleanups to be done if the call unwinds.","","","Where the returned value will be written","The discriminant value being tested.","Cleanup to be done if the generator is dropped at this …","","<code>true</code> if this is from a call in HIR rather than from an …","The function that’s being called.","A block control flow could conceptually jump to, but won’…","","","The target normal control flow will take.","The target normal control flow will take.","Where to resume to.","The place to store the resume argument in.","","","","Where to go after this call returns. If none, the call …","","","","","The imaginary cleanup block link. This particular path …","","The value to return.","","Different signed int types.","Different unsigned int types.","","","","","Different kinds of float types.","","","","","","","","","","","Different signed int types.","","","","","","","","","","","","","Different unsigned int types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of clauses that we assume to be true. E.g. if we are …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,53,0,0,51,0,57,0,0,0,36,48,0,47,53,44,44,56,0,0,0,0,0,0,0,0,36,51,0,0,0,43,0,54,0,0,0,0,48,52,0,0,0,31,54,0,47,36,42,0,0,0,0,0,31,54,42,0,0,0,0,23,0,0,0,0,0,0,36,42,0,0,0,0,0,47,46,20,51,0,48,47,20,23,52,0,0,0,52,0,0,48,0,0,47,47,0,0,0,0,50,46,50,51,0,57,0,0,37,0,0,0,54,31,54,0,0,0,0,0,0,0,0,0,0,0,43,53,0,47,36,56,54,56,47,47,37,51,51,0,52,0,0,0,3,0,317,8,317,8,317,8,317,8,317,8,317,8,317,8,317,8,317,8,14,14,3,317,8,0,0,0,14,3,3,36,37,20,40,22,23,41,42,43,44,45,46,47,21,21,48,49,50,51,14,26,103,52,31,53,54,55,56,32,57,58,59,3,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,103,52,31,53,54,55,56,32,57,58,59,22,3,3,3,3,3,3,3,317,8,317,8,0,26,318,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,52,31,53,54,55,56,32,57,58,59,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,52,31,53,54,55,56,32,57,58,59,14,36,37,20,40,22,23,44,26,0,26,26,0,26,317,8,0,41,0,0,103,22,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,3,46,14,55,23,0,14,3,0,45,317,8,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,52,31,53,54,55,56,32,57,58,59,317,8,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,52,31,53,54,55,56,32,57,58,59,14,14,14,3,3,3,3,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,103,52,31,53,54,55,56,32,57,58,59,3,3,36,37,20,40,22,23,41,42,105,107,43,44,45,46,47,21,48,49,50,51,14,26,103,52,31,31,31,31,53,53,53,53,53,53,53,54,54,54,54,54,54,54,55,56,32,57,58,59,0,0,32,0,32,0,26,26,26,0,36,37,20,40,22,23,41,42,21,48,49,50,51,26,31,53,54,56,57,58,59,22,78,8,30,125,126,127,128,129,29,130,131,32,319,29,3,317,8,14,14,14,22,22,22,26,26,26,26,26,26,26,26,26,26,26,26,26,26,3,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,103,52,31,53,54,55,56,32,57,58,59,317,8,317,8,0,317,8,317,8,317,8,317,8,317,8,317,8,129,45,21,31,0,0,26,45,103,103,0,55,0,14,0,14,22,23,103,0,32,36,37,20,40,22,23,44,26,14,3,0,320,145,26,26,3,26,3,0,32,321,30,23,23,36,37,20,40,22,23,23,41,32,36,37,20,40,22,23,23,41,32,36,37,20,40,22,23,23,41,32,36,37,20,40,22,23,23,41,32,3,0,317,8,317,8,3,3,3,26,21,0,0,22,32,0,22,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,52,31,53,54,55,56,32,57,58,59,0,22,321,30,321,3,30,0,36,37,20,40,23,41,32,3,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,103,52,31,53,54,55,56,32,57,58,59,3,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,103,52,31,53,54,55,56,32,57,58,59,3,3,45,26,3,36,37,20,40,22,23,41,42,43,44,45,46,47,21,48,49,50,51,14,26,103,52,31,53,54,55,56,32,57,58,59,14,14,14,14,14,14,14,14,103,3,3,3,26,26,14,14,36,37,20,40,23,41,55,103,103,103,103,23,36,20,40,41,322,323,324,323,325,326,327,328,329,322,325,327,329,323,324,330,322,330,328,328,329,328,329,0,0,0,156,156,156,156,156,156,156,156,156,156,156,156,0,0,156,331,156,0,156,156,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,230,162,164,165,106,166,167,104,1,230,1,230,332,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,332,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,1,230,1,230,162,164,165,106,166,167,104,162,164,165,106,166,167,104,104,1,230,1,230,1,230,1,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,162,164,165,106,166,167,104,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,218,219,220,221,222,223,224,225,226,227,1,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,230,1,230,1,1,230,230,332,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,106,166,166,167,167,104,104,162,164,165,106,166,167,104,1,230,1,230,1,230,162,164,165,106,166,167,104,1,230,1,230,1,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,1,230,1,1,230,1,230,1,230,1,230,1,230,1,230,1,230,1,230,1,230,332,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,1,230,1,230,1,230,1,230,1,230,1,230,1,230,1,230,230,1,230,1,230,1,230,1,230,230,1,104,1,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,177,179,182,184,186,187,188,191,192,196,199,1,230,1,230,1,230,162,164,165,106,166,167,104,1,230,1,230,1,1,230,1,230,1,230,1,1,230,332,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,332,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,1,230,332,230,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,162,164,165,106,166,167,104,1,230,0,0,0,256,256,256,0,256,333,258,257,256,333,258,257,256,257,257,258,333,258,257,258,257,256,333,258,257,258,258,258,257,0,333,256,333,258,257,0,0,0,258,256,333,258,257,256,333,258,257,256,333,258,257,0,334,335,336,336,334,336,0,264,264,263,0,124,0,124,268,0,264,0,0,0,0,0,264,265,268,268,264,265,0,263,263,268,123,124,266,270,263,268,264,265,123,124,266,270,263,268,264,265,263,264,265,263,264,265,123,269,269,269,269,274,264,265,264,265,266,268,264,123,124,124,266,270,263,268,264,265,269,270,123,124,266,270,263,268,264,265,269,123,123,274,263,264,265,266,123,124,266,270,263,268,264,265,123,124,266,270,263,268,264,265,123,124,266,270,263,268,264,265,266,0,123,123,123,123,266,0,337,337,338,0,0,0,244,244,0,0,244,0,244,0,244,244,244,0,277,244,277,244,277,244,277,244,277,244,277,244,277,244,277,244,277,277,277,244,0,0,0,0,277,0,277,244,277,244,277,244,277,244,240,240,240,279,240,240,279,0,0,278,240,279,278,240,0,240,240,240,0,0,240,240,0,252,242,240,252,242,278,279,280,240,252,242,278,279,280,240,278,279,280,240,278,279,280,0,280,240,252,242,278,240,252,242,278,240,252,242,278,280,240,242,252,252,252,240,240,252,242,278,279,279,279,280,240,0,0,240,252,242,278,279,280,242,0,0,0,0,0,240,278,279,280,240,252,242,278,279,280,240,252,242,278,279,280,240,252,242,278,279,280,292,295,290,297,0,290,292,298,0,0,0,295,295,295,0,0,158,292,297,0,297,290,157,157,158,287,288,158,287,297,298,288,297,295,292,292,296,295,0,157,301,292,292,288,296,296,296,295,292,158,292,295,158,157,158,158,288,296,296,157,157,157,158,157,158,295,297,0,0,158,295,0,0,0,157,157,0,158,287,295,284,293,0,158,295,294,298,284,294,157,158,295,288,0,157,301,0,296,296,296,0,158,297,295,297,292,292,0,293,297,297,293,295,295,157,0,0,287,298,298,295,288,292,0,157,0,0,158,290,288,157,158,157,158,0,158,297,157,290,293,301,292,158,158,158,158,158,158,297,0,292,282,246,246,306,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,306,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,0,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,246,293,294,246,283,300,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,295,296,297,298,299,300,246,301,306,283,157,158,158,284,285,286,287,288,289,289,290,282,291,292,293,294,295,295,295,296,297,297,298,299,300,246,301,301,301,288,289,282,294,0,306,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,300,282,299,289,246,0,285,0,0,0,0,0,0,0,285,285,306,282,282,246,0,246,293,294,157,158,246,288,289,299,246,300,282,282,300,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,295,306,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,306,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,286,306,283,157,158,284,285,286,287,288,289,290,282,291,292,293,294,295,296,297,298,299,300,246,301,339,340,341,342,342,341,343,343,344,344,343,345,346,344,343,343,347,348,349,347,350,346,346,351,348,349,343,344,345,348,349,350,349,346,0,0,0,311,314,311,314,0,309,312,309,312,309,312,309,312,309,312,0,309,312,310,313,310,313,310,313,310,313,310,313,0,310,313,309,310,311,312,313,314,309,310,311,312,313,314,309,310,311,312,313,314,309,310,311,312,313,314,309,310,311,312,313,314,309,310,311,312,313,314,309,310,311,312,313,314,0,309,310,311,312,312,313,313,314,314,309,310,311,312,313,314,312,313,314,309,310,311,312,313,314,0,309,310,311,312,313,314,309,310,311,312,313,314,309,310,311,309,310,311,309,310,311,309,310,311,309,310,311,312,313,314,312,313,314,309,310,311,309,310,311,312,313,314,309,310,311,312,313,314,309,310,311,312,313,314,0,309,310,311,315,315,315,0,0,33,33,315,33,315,33,315,33,315,315,33,33,33,315,33,315,33,315,33,315,315,33,315,33,315,33,315,315,315,33,315,33,33,315,33,315,33,315],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[3,[2]]]],[[4,5],6],[[],7],[8,7],[[],[[7,[9]]]],[8,[[7,[9]]]],[[],[[7,[10]]]],[8,[[7,[10]]]],[1,[[7,[11]]]],[[8,1],[[7,[11]]]],[1,[[7,[12]]]],[[8,1],[[7,[12]]]],[[],7],[8,7],[[],7],[8,7],[[],7],[8,7],[[],[[7,[13]]]],[8,[[7,[13]]]],[[14,15],7],[[14,16],7],[[1,17,[7,[13]]],[[3,[17]]]],[1,[[7,[5]]]],[[8,1],[[7,[5]]]],[[1,12,18,19],7],0,0,0,[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[20,8],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,23],24],[3,13],[[[3,[[28,[[0,[25,[27,[26]]]]]]]]],[[0,[25,[27,[26]]]]]],[[[3,[2]]],8],[[[3,[0]]],8],[[[3,[5]]],29],[[[3,[17]]],30],[9,8],[1,[[7,[31]]]],[[8,1],[[7,[31]]]],[1,[[7,[32]]]],[[8,1],[[7,[32]]]],[[8,[34,[33]],1],[[7,[32]]]],[26],[[[35,[25]]],25],[36,36],[37,37],[20,20],[[[40,[[0,[38,39]]]]],[[40,[[0,[38,39]]]]]],[22,22],[23,23],[[[41,[[0,[38,39]]]]],[[41,[[0,[38,39]]]]]],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[21,21],[48,48],[49,49],[50,50],[51,51],[14,14],[26,26],[52,52],[31,31],[53,53],[54,54],[55,55],[56,56],[32,32],[57,57],[58,58],[59,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,10]],[[36,36],60],[[37,37],60],[[20,20],60],[[[40,[[0,[61,39]]]],[40,[[0,[61,39]]]]],60],[[22,22],60],[[23,23],60],[[44,44],60],[[26,26],60],[[[0,[62,[63,[26]]]],1],[[65,[64]]]],[26,[[66,[26]]]],[26,24],0,[26],[[],24],[8,24],[[1,[34,[33]],67],24],[68,24],[[1,[34,[33]],67],24],0,0,0,[[[40,[26]],69],[[7,[70]]]],[[[71,[26]],69],[[7,[70]]]],[[[72,[26]],69],[[7,[70]]]],[[[73,[26]],69],[[7,[70]]]],[[[74,[26]],69],[[7,[70]]]],[[[75,[26]],69],[[7,[70]]]],[[[76,[26]],69],[[7,[70]]]],[[[77,[26]],69],[[7,[70]]]],[[78,69],[[7,[70]]]],[[[79,[26]],69],[[7,[70]]]],[[[80,[26]],69],[[7,[70]]]],[[[81,[26]],69],[[7,[70]]]],[[[82,[26]],69],[[7,[70]]]],[[[83,[26]],69],[[7,[70]]]],[[[84,[26]],69],[[7,[70]]]],[[[85,[26]],69],[[7,[70]]]],[[[86,[26]],69],[[7,[70]]]],[[[87,[26]],69],[[7,[70]]]],[[[88,[26]],69],[[7,[70]]]],[[[89,[26]],69],[[7,[70]]]],[[[90,[26]],69],[[7,[70]]]],[[[91,[26]],69],[[7,[70]]]],[[[92,[26]],69],[[7,[70]]]],[[[93,[26]],69],[[7,[70]]]],[[[93,[26]],69],[[7,[70]]]],[[1,53,[7,[13]]],[[3,[[28,[8]]]]]],[[],46],[[],14],[[],55],[23,94],0,0,[[],8],0,[[45,95,1],96],[[],[[7,[5]]]],[8,[[7,[5]]]],[[36,36],24],[[37,37],24],[[20,20],24],[[[40,[[0,[[97,[[0,[[97,[[0,[[97,[[0,[97,39]]]],39]]]],39]]]],39]]]],[40,[[0,[[97,[[0,[[97,[[0,[[97,[[0,[97,39]]]],39]]]],39]]]],39]]]]],24],[[22,22],24],[[23,23],24],[[[41,[[0,[[97,[[0,[[97,[[0,[[97,[[0,[97,39]]]],39]]]],39]]]],39]]]],[41,[[0,[[97,[[0,[[97,[[0,[[97,[[0,[97,39]]]],39]]]],39]]]],39]]]]],24],[[42,42],24],[[43,43],24],[[44,44],24],[[45,45],24],[[46,46],24],[[47,47],24],[[21,21],24],[[48,48],24],[[49,49],24],[[50,50],24],[[51,51],24],[[14,14],24],[[26,26],24],[[52,52],24],[[31,31],24],[[53,53],24],[[54,54],24],[[55,55],24],[[56,56],24],[[32,32],24],[[57,57],24],[[58,58],24],[[59,59],24],[8,24],[[8,8],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,[14,98],[[14,15],[[7,[99]]]],[[3,19],3],[[3,23,100],3],[[[3,[2]],1,19],[[3,[2]]]],[3,3],[[36,69],[[102,[101]]]],[[37,69],[[102,[101]]]],[[20,69],[[102,[101]]]],[[[40,[39]],69],[[102,[101]]]],[[22,69],[[102,[101]]]],[[23,69],[[102,[101]]]],[[[41,[39]],69],[[102,[101]]]],[[42,69],[[102,[101]]]],[[43,69],70],[[44,69],70],[[45,69],70],[[46,69],70],[[47,69],70],[[21,69],70],[[48,69],70],[[49,69],70],[[50,69],70],[[51,69],70],[[14,69],70],[[26,69],70],[[103,69],70],[[52,69],70],[[31,69],70],[[53,69],70],[[54,69],70],[[55,69],70],[[56,69],70],[[32,69],70],[[57,69],70],[[58,69],70],[[59,69],70],[32,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,105],[106,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[108,31],[109,31],[[]],[11,31],[[]],[110,53],[2,53],[108,53],[111,53],[17,53],[9,53],[110,54],[[]],[112,54],[11,54],[109,54],[108,54],[113,54],[[]],[[]],[[]],[[]],[[]],[[]],[114,17],[115,5],[116,32],[117,17],[[[65,[8]],8,24,37],32],[[1,118],64],[26,[[119,[26]]]],[26,[[120,[26]]]],[26],0,[[36,121]],[[37,121]],[[20,121]],[[[40,[[0,[122,39]]]],121]],[[22,121]],[[23,121]],[[[41,[[0,[122,39]]]],121]],[[42,121]],[[21,121]],[[48,121]],[[49,121]],[[50,121]],[[51,121]],[[26,121]],[[31,121]],[[53,121]],[[54,121]],[[56,121]],[[57,121]],[[58,121]],[[59,121]],[[22,123],[[102,[124]]]],[[78,123],[[102,[124]]]],[[8,123],[[102,[124]]]],[[30,123],[[102,[124]]]],[[125,123],[[102,[124]]]],[[126,123],[[102,[124]]]],[[127,123],[[102,[124]]]],[[128,123],[[102,[124]]]],[[129,123],[[102,[124]]]],[[29,123],[[102,[124]]]],[[130,123],[[102,[124]]]],[[131,123],[[102,[124]]]],[[32,123],[[102,[124]]]],[[],5],[29,5],[[1,132],[[3,[[28,[8]]]]]],[1,[[7,[[65,[133]]]]]],[[8,1],[[7,[[65,[133]]]]]],[[14,16],8],[[14,134],8],[[14,15],8],0,[[22,23],[[7,[100]]]],[22,[[7,[100]]]],[[26,135],102],[[26,[66,[26]]]],[[26,135],102],[[26,[119,[26]]]],[[26,135],102],[[26,[120,[26]]]],[[26,135],102],[[26,[136,[26]]]],[[26,[137,[26]]]],[[26,135],102],[[26,135],102],[[26,135],102],[[26,[138,[26]]]],[[26,135],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,95],24],[[8,1,95],24],[[],24],[8,24],[[1,11],24],[[],24],[8,24],[[],24],[8,24],[[],24],[8,24],[[],24],[8,24],[[],24],[8,24],[[],24],[8,24],[129,24],[45,44],0,[[31,1],139],0,0,[26,[[136,[26]]]],[45,134],[[103,140],8],[[103,140]],[[1,118],141],0,0,[[14,15],7],0,0,[[23,100],22],[94,23],[[1,142],103],[[1,64],[[7,[100]]]],[32],[[36,36],[[7,[60]]]],[[37,37],[[7,[60]]]],[[20,20],[[7,[60]]]],[[[40,[[0,[[143,[[0,[[143,[[0,[[143,[[0,[143,39]]]],39]]]],39]]]],39]]]],[40,[[0,[[143,[[0,[[143,[[0,[[143,[[0,[143,39]]]],39]]]],39]]]],39]]]]],[[7,[60]]]],[[22,22],[[7,[60]]]],[[23,23],[[7,[60]]]],[[44,44],[[7,[60]]]],[[26,26],[[7,[60]]]],0,[[1,[144,[12]]],13],0,[[],[[7,[29]]]],[145,[[7,[29]]]],[26,[[137,[26]]]],[26],[[3,[35,[78]]],3],[26],[3,100],[[[0,[25,[27,[26]],38]]],[[67,[[0,[25,[27,[26]],38]]]]]],[32,8],[1,8],[[30,1],8],[23],[23],[[]],[[]],[[]],[[]],[22,22],[23,23],[[]],[[]],[[]],[23],[23],[23],[23],[[22,23],22],[[23,23],23],[23],[23],[23],[[],[[102,[146]]]],[[],[[102,[146]]]],[[],[[102,[146]]]],[[],[[102,[146]]]],[22,[[7,[22]]]],[23,[[7,[23]]]],[[],[[102,[146]]]],[[],[[102,[146]]]],[[],[[102,[146]]]],[23,[[102,[146]]]],[23,[[102,[146]]]],[23,[[102,[146]]]],[23,[[102,[146]]]],[[22,23],[[7,[22]]]],[[23,23],[[7,[23]]]],[23,[[102,[146]]]],[23,[[102,[146]]]],[23,[[102,[146]]]],[8,8],[[],126],[[],8],[8,8],[[],8],[8,8],[[1,95,8],13],[[1,[144,[12]],[7,[13]]],3],[[1,95],3],[26],0,[17,114],[5,115],[[22,39,[92,[39]]],[[75,[39]]]],[32,116],[17,117],[[22,39],[[81,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,64],118],[[22,39],[[92,[39]]]],[1,5],[[30,1],5],[1,29],[[1,5],[[3,[5]]]],[[30,1],29],0,[[36,147,23],[[102,[36]]]],[[37,147,23],[[102,[37]]]],[[20,147,23],[[102,[20]]]],[[[40,[39]],147,23],[[102,[[40,[39]]]]]],[[23,147,23],[[102,[23]]]],[[[41,[39]],147,23],[[102,[[41,[39]]]]]],[[32,147,23],[[102,[32]]]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[100,[[3,[0]]]],[135,8],[[45,13],8],[26,[[148,[26]]]],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[14,15],[[7,[0]]]],[[14,16],[[7,[0]]]],[14,98],0,0,0,0,0,0,[[],8],[[1,[144,[12]]],13],[[],8],[26],[26],[[14,15],[[7,[150]]]],[[14,16],[[7,[150]]]],[[36,151,23],152],[[37,151,23],152],[[20,151,23],152],[[[40,[39]],151,23],152],[[23,151,23],152],[[[41,[39]],151,23],152],0,[[103,23,153]],[[103,52],103],[[103,23,153]],0,[[23,23],24],[[[154,[39]],155,36,36],[[102,[146]]]],[[[154,[39]],155,20,20],[[102,[146]]]],[[[154,[39]],155,[40,[39]],[40,[39]]],[[102,[146]]]],[[[154,[39]],155,[41,[39]],[41,[39]]],[[102,[146]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[34,[33]],[67,[8]]],98],0,0,0,0,[[]],[[]],[156,156],[[]],[[156,156],24],[[],24],[[156,69],70],[157,156],[158,156],[[]],[[1,159,8,139],129],[[56,8],129],[[]],[[],24],[[]],[[1,129],[[7,[160]]]],[[],102],[[],102],[[],149],[8,129],[8,78],[[1,[7,[160]],139],129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[40,[26]]],[[161,[26]]]],[[1,[40,[26]]],[[161,[26]]]],0,[162,163],[164,163],[165,163],[106,163],[166,163],[167,163],[104,163],[[[72,[26]]],[[169,[[168,[26]]]]]],0,[[139,[170,[26]]],[[169,[[171,[26]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,[[102,[34,158]]]],0,[31,172],0,[162,162],[164,164],[165,165],[106,106],[166,166],[167,167],[104,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[104,104],60],[[173,13],[[102,[129,156]]]],0,[109,[[102,[174,156]]]],0,[113,[[102,[129,156]]]],0,[175,8],0,[[],176],[[],177],[[],178],[[],179],[[],180],[[],181],[[],182],[[],183],[[],184],[[],185],[[],186],[[],187],[[],188],[[],189],[[],190],[[],191],[[],192],[[],193],[[],194],[[],195],[[],196],[[],197],[[],198],[[],199],[[],200],[[],201],[[],202],[[],203],[[],204],[[],205],[[],206],[[],207],[[],208],[[],209],[[],210],[[],211],[[],212],[[],213],[[],214],[[],215],[[],216],[[],217],[[],218],[[],219],[[],220],[[],221],[[],222],[[],223],[[],224],[[],225],[[],226],[[],227],[[162,162],24],[[164,164],24],[[165,165],24],[[106,106],24],[[166,166],24],[[167,167],24],[[104,104],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,[[34,[[229,[228,[28,[8]]]]]]]],0,[[176,69],70],[[177,69],70],[[178,69],70],[[179,69],70],[[180,69],70],[[181,69],70],[[182,69],70],[[183,69],70],[[184,69],70],[[185,69],70],[[186,69],70],[[187,69],70],[[188,69],70],[[189,69],70],[[190,69],70],[[191,69],70],[[192,69],70],[[193,69],70],[[194,69],70],[[195,69],70],[[196,69],70],[[197,69],70],[[198,69],70],[[199,69],70],[[200,69],70],[[201,69],70],[[202,69],70],[[203,69],70],[[204,69],70],[[205,69],70],[[206,69],70],[[207,69],70],[[208,69],70],[[209,69],70],[[210,69],70],[[211,69],70],[[212,69],70],[[213,69],70],[[214,69],70],[[215,69],70],[[216,69],70],[[217,69],70],[[218,69],70],[[219,69],70],[[220,69],70],[[221,69],70],[[222,69],70],[[223,69],70],[[224,69],70],[[225,69],70],[[226,69],70],[[227,69],70],[[162,69],70],[[164,69],70],[[165,69],70],[[106,69],70],[[166,69],70],[[167,69],70],[[104,69],70],[[230,1,231,69],70],[[139,105],[[169,[[232,[26]]]]]],0,[105,[[161,[26]]]],[[1,[77,[26]]],[[161,[26]]]],0,[[230,233,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107,106],[[[74,[26]]],166],[[]],[[]],[[[234,[26]]],167],[[]],[105,104],[163,162],[163,164],[163,165],[163,106],[163,166],[163,167],[163,104],[12,34],0,[12,34],0,[[12,64,[7,[235]]],34],0,[[162,121]],[[164,121]],[[165,121]],[[106,121]],[[166,121]],[[167,121]],[[104,121]],[[139,[236,[26]]],[[169,[[237,[26]]]]]],0,[132,[[28,[8]]]],0,[132,[[7,[[28,[29]]]]]],0,[[176,1],[[238,[176]]]],[[177,1],[[238,[177]]]],[[178,1],[[238,[178]]]],[[179,1],[[238,[179]]]],[[180,1],[[238,[180]]]],[[181,1],[[238,[181]]]],[[182,1],[[238,[182]]]],[[183,1],[[238,[183]]]],[[184,1],[[238,[184]]]],[[185,1],[[238,[185]]]],[[186,1],[[238,[186]]]],[[187,1],[[238,[187]]]],[[188,1],[[238,[188]]]],[[189,1],[[238,[189]]]],[[190,1],[[238,[190]]]],[[191,1],[[238,[191]]]],[[192,1],[[238,[192]]]],[[193,1],[[238,[193]]]],[[194,1],[[238,[194]]]],[[195,1],[[238,[195]]]],[[196,1],[[238,[196]]]],[[197,1],[[238,[197]]]],[[198,1],[[238,[198]]]],[[199,1],[[238,[199]]]],[[200,1],[[238,[200]]]],[[201,1],[[238,[201]]]],[[202,1],[[238,[202]]]],[[203,1],[[238,[203]]]],[[204,1],[[238,[204]]]],[[205,1],[[238,[205]]]],[[206,1],[[238,[206]]]],[[207,1],[[238,[207]]]],[[208,1],[[238,[208]]]],[[209,1],[[238,[209]]]],[[210,1],[[238,[210]]]],[[211,1],[[238,[211]]]],[[212,1],[[238,[212]]]],[[213,1],[[238,[213]]]],[[214,1],[[238,[214]]]],[[215,1],[[238,[215]]]],[[216,1],[[238,[216]]]],[[217,1],[[238,[217]]]],[[218,1],[[238,[218]]]],[[219,1],[[238,[219]]]],[[220,1],[[238,[220]]]],[[221,1],[[238,[221]]]],[[222,1],[[238,[222]]]],[[223,1],[[238,[223]]]],[[224,1],[[238,[224]]]],[[225,1],[[238,[225]]]],[[226,1],[[238,[226]]]],[[227,1],[[238,[227]]]],[[176,1],[[239,[176]]]],[[177,1],[[239,[177]]]],[[178,1],[[239,[178]]]],[[179,1],[[239,[179]]]],[[180,1],[[239,[180]]]],[[181,1],[[239,[181]]]],[[182,1],[[239,[182]]]],[[183,1],[[239,[183]]]],[[184,1],[[239,[184]]]],[[185,1],[[239,[185]]]],[[186,1],[[239,[186]]]],[[187,1],[[239,[187]]]],[[188,1],[[239,[188]]]],[[189,1],[[239,[189]]]],[[190,1],[[239,[190]]]],[[191,1],[[239,[191]]]],[[192,1],[[239,[192]]]],[[193,1],[[239,[193]]]],[[194,1],[[239,[194]]]],[[195,1],[[239,[195]]]],[[196,1],[[239,[196]]]],[[197,1],[[239,[197]]]],[[198,1],[[239,[198]]]],[[199,1],[[239,[199]]]],[[200,1],[[239,[200]]]],[[201,1],[[239,[201]]]],[[202,1],[[239,[202]]]],[[203,1],[[239,[203]]]],[[204,1],[[239,[204]]]],[[205,1],[[239,[205]]]],[[206,1],[[239,[206]]]],[[207,1],[[239,[207]]]],[[208,1],[[239,[208]]]],[[209,1],[[239,[209]]]],[[210,1],[[239,[210]]]],[[211,1],[[239,[211]]]],[[212,1],[[239,[212]]]],[[213,1],[[239,[213]]]],[[214,1],[[239,[214]]]],[[215,1],[[239,[215]]]],[[216,1],[[239,[216]]]],[[217,1],[[239,[217]]]],[[218,1],[[239,[218]]]],[[219,1],[[239,[219]]]],[[220,1],[[239,[220]]]],[[221,1],[[239,[221]]]],[[222,1],[[239,[222]]]],[[223,1],[[239,[223]]]],[[224,1],[[239,[224]]]],[[225,1],[[239,[225]]]],[[226,1],[[239,[226]]]],[[227,1],[[239,[227]]]],[[139,240],6],0,[95,[[34,[14]]]],[95,[[34,[14]]]],0,[241,[[34,[242]]]],0,[139,[[34,[242]]]],0,[31,104],0,[[],166],0,[[],167],0,[57,106],0,[141,164],0,[64,162],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,13,139],[[102,[[34,[243]],244]]]],0,[[8,139],[[102,[[34,[243]],244]]]],0,[104,31],0,[166],0,[167],0,[106,57],0,[164,141],0,[162,64],0,[[230,1,231,245],24],[95,[[102,[[34,[246]],158]]]],0,[10,[[102,[[34,[246]],158]]]],0,[[95,13,[34,[33]]],[[102,[[34,[246]],158]]]],0,[[10,13,[34,[33]]],[[102,[[34,[246]],158]]]],0,[247,230],[[30,[34,[33]]],8],[[104,104],[[7,[60]]]],[[139,[7,[241]],[248,[26]]],[[86,[26]]]],0,[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],169],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[11,[[7,[[34,[[28,[58]]]]]]]],0,[[139,[40,[26]]],[[169,[[249,[26]]]]]],0,[139,[[7,[[34,[250]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[139,[91,[26]]],[[169,[[251,[26]]]]]],0,[12,[[34,[33]]]],0,[95,[[34,[33]]]],[241,[[34,[252]]]],0,[139,[[34,[252]]]],0,[139,34],0,[[139,[7,[241]],[67,[[254,[253]]]]],[[7,[255]]]],[[139,[7,[241]],[67,[[254,[253]]]]],[[7,[255]]]],0,[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[53,[[28,[8]]]],0,[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[54,[[28,[8]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,95],[[65,[256]]]],[[257,257],24],[[],24],0,0,0,0,[[258,69],70],[[257,69],70],[[]],[[]],[[]],[[]],0,0,0,0,[[1,139,259],[[65,[258]]]],0,[[]],[[]],[[]],[[]],[[1,95],[[65,[15]]]],[[1,14,15,260],7],[[1,14,16,261],7],0,[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],149],[[],149],[[],149],[[],149],[[1,14,95,262,15,19]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[263,263],[264,264],[265,265],[[]],[[]],[[]],0,[[62,1],[[266,[62]]]],[[1,267,24],[[102,[96,268]]]],[[62,1],[[266,[62]]]],[[62,1,[7,[100]]],[[266,[62]]]],[[]],[[264,264],24],[[265,265],24],[[],24],[[],24],[[[266,[269]],69],70],[[268,69],70],[[264,69],70],[[]],[101,124],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,[[102,[124]]]],[[270,123],[[102,[124]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[62,1,[7,[100]],24,263,264],[[266,[62]]]],[123,24],[123,24],[259],[[]],[[]],[[]],[[],96],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[[266,[269]],264],[[266,[269]]]],[[123,271,265],[[102,[124]]]],[[123,272],[[102,[124]]]],[[123,273],[[102,[124]]]],[[123,135,271],[[102,[124]]]],[[123,271],[[102,[124]]]],[[[266,[269]],274],[[102,[124]]]],[[267,275,123],[[102,[124]]]],0,0,0,[[1,2],24],[[1,2],24],[276,7],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[277,277],[244,244],[[]],[[]],[[277,277],24],[[244,244],24],[[],24],[[],24],[[277,69],70],[[244,69],70],[[]],[[]],[[277,121]],[277,100],[[]],[[]],[[1,2,13,139],[[102,[[34,[243]],244]]]],[[1,2,13,139],[[102,[[34,[243]],244]]]],[[1,8,139],[[102,[[34,[243]],244]]]],[[1,8,139],[[102,[[34,[243]],244]]]],[100,277],[[1,139],[[7,[[34,[250]]]]]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],149],[[],149],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[252,98],[242,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[240,240],[278,278],[279,279],[280,280],[[]],[[]],[[]],[[]],[[1,8,139],[[7,[6]]]],[[],280],[[240,240],24],[[252,252],24],[[242,242],24],[[278,278],24],[[],24],[[],24],[[],24],[[],24],[[240,69],70],[[252,69],70],[[242,69],70],[[278,69],70],[[280,69],70],[8,[[7,[240]]]],[[242,8]],[[252,240],98],[[252,5],98],[[252,5,240],98],[8,[[7,[240]]]],[[]],[[]],[[]],[[]],[[]],[[[7,[267]]],279],[[[7,[241]]],279],[[]],[[240,121]],[[[67,[8]],1,[34,[33]],5],24],[[[67,[8]],1,[34,[33]],5],24],[[]],[[]],[[]],[[]],[[]],[[]],[242],[[1,[34,[33]],11,13],[[7,[100]]]],[[[67,[8]],1,[34,[33]],[281,[5]],279,[7,[235]],278,19],152],[[[67,[8]],1,[34,[33]],[281,[5]],279,[7,[235]],19],152],[[1,[34,[33]],112,13]],[[1,[34,[33]],11,13]],[[]],[[]],[[]],[[]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[282],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,95],[[102,[34,158]]]],[283,283],[157,157],[158,158],[284,284],[285,285],[286,286],[287,287],[[[288,[38,38]]],[[288,[38,38]]]],[289,289],[290,290],[282,282],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[246,246],[301,301],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[293,293],60],[[294,294],60],[[246,1],302],[[],283],[[],300],[[283,283],24],[[157,157],24],[[158,158],24],[[284,284],24],[[285,285],24],[[286,286],24],[[287,287],24],[[[288,[97,97]],[288,[97,97]]],24],[[289,289],24],[[290,290],24],[[282,282],24],[[291,291],24],[[292,292],24],[[293,293],24],[[294,294],24],[[295,295],24],[[296,296],24],[[297,297],24],[[298,298],24],[[299,299],24],[[300,300],24],[[246,246],24],[[301,301],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[283,69],70],[[157,69],70],[[158,69],70],[[284,69],70],[[285,69],70],[[286,69],70],[[287,69],70],[[[288,[302,302]],69],70],[[289,69],70],[[290,69],70],[[282,69],70],[[291,69],70],[[292,69],70],[[293,69],70],[[294,69],70],[[295,69],70],[[295,69],70],[[296,69],70],[[297,69],70],[[298,69],70],[[299,69],70],[[300,69],70],[[246,69],70],[[301,69],70],[[]],[[]],[[]],[244,158],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[303,289],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[304,295],[305,295],[[]],[[]],[287,297],[[]],[[]],[[]],[[]],[[]],[15,301],[16,301],[[[288,[122,122]],121]],[[289,121]],[[282,121]],[[294,121]],[[1,246,24]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[282,98],0,0,0,[[1,95,262,14,15],[[102,[246,158]]]],0,[[1,10],[[102,[[34,[246]],158]]]],[[1,95],[[102,[[34,[246]],158]]]],[[1,95],[[102,[[34,[246]],158]]]],[[1,246,13,[34,[33]]],[[102,[246,158]]]],[[1,10,13,[34,[33]]],[[102,[[34,[246]],158]]]],[[1,95,13,[34,[33]]],[[102,[[34,[246]],158]]]],[[1,95,13,[34,[33]]],[[102,[[34,[246]],158]]]],0,0,[[1,246,24],306],[[98,307],282],[282,307],0,[24],0,[[293,293],[[7,[60]]]],[[294,294],[[7,[60]]]],[[157,96,1,308],[[102,[101]]]],[[158,96,1,308],[[102,[101]]]],[[246,1],96],[[288,8,1,153,139],8],0,0,0,0,[[160,307,307],282],[[282,160],307],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],96],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],0,[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[309,309],[310,310],[311,311],[312,312],[313,313],[314,314],[[]],[[]],[[]],[[]],[[]],[[]],[[309,309],60],[[310,310],60],[[311,311],60],[[312,312],60],[[313,313],60],[[314,314],60],[[309,309],24],[[310,310],24],[[311,311],24],[[312,312],24],[[313,313],24],[[314,314],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[311,271],[[309,69],[[102,[101]]]],[[310,69],[[102,[101]]]],[[311,69],[[102,[101]]]],[[312,69],[[102,[101]]]],[[312,69],[[102,[101]]]],[[313,69],[[102,[101]]]],[[313,69],[[102,[101]]]],[[314,69],[[102,[101]]]],[[314,69],[[102,[101]]]],[[]],[[]],[[]],[[]],[[]],[[]],[271,[[7,[312]]]],[271,[[7,[313]]]],[271,[[7,[314]]]],[[309,121]],[[310,121]],[[311,121]],[[312,121]],[[313,121]],[[314,121]],[309,271],[[]],[[]],[[]],[[]],[[]],[[]],[[309,309],[[7,[60]]]],[[310,310],[[7,[60]]]],[[311,311],[[7,[60]]]],[[312,312],[[7,[60]]]],[[313,313],[[7,[60]]]],[[314,314],[[7,[60]]]],[[]],[[]],[[]],[23],[23],[23],[[],[[102,[146]]]],[[],[[102,[146]]]],[[],[[102,[146]]]],[23,[[102,[146]]]],[23,[[102,[146]]]],[23,[[102,[146]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],96],[[],96],[[],96],[[309,147,23],[[102,[309]]]],[[310,147,23],[[102,[310]]]],[[311,147,23],[[102,[311]]]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[310,271],[[309,151,23],152],[[310,151,23],152],[[311,151,23],152],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[33,33],[315,315],[[]],[[]],[[315,315],60],[139,33],0,[[33,33],24],[[315,315],24],[[],24],[[],24],[[33,69],70],[[315,69],70],[[]],[[]],[[315,1,139],[[7,[5]]]],[[33,121]],[[315,121]],[[]],[[]],0,[315,235],[[315,315],[[7,[60]]]],[315,316],[[]],[[]],[[33,8],98],[[],102],[[],102],[[],102],[[],102],[[],149],[[],149]],"c":[],"p":[[8,"HirDatabase"],[4,"AdtId"],[3,"TyBuilder"],[8,"DefDatabase"],[3,"TraitId"],[3,"SmallVec"],[4,"Option"],[6,"Ty"],[4,"BuiltinType"],[6,"ClosureId"],[3,"FunctionId"],[4,"GenericDefId"],[6,"Substitution"],[3,"InferenceResult"],[6,"ExprId"],[6,"PatId"],[3,"TypeAliasId"],[4,"TypeNs"],[8,"FnMut"],[4,"Mutability"],[3,"Adjustment"],[3,"BoundVar"],[3,"DebruijnIndex"],[15,"bool"],[8,"HasInterner"],[3,"Interner"],[8,"TypeFoldable"],[6,"Binders"],[6,"TraitRef"],[6,"ProjectionTy"],[4,"CallableDefId"],[3,"CallableSig"],[3,"TraitEnvironment"],[3,"Arc"],[8,"CastTo"],[4,"Scalar"],[4,"Safety"],[8,"Clone"],[8,"Interner"],[3,"AdtId"],[3,"FnSubst"],[4,"TyVariableKind"],[4,"ParamKind"],[4,"CaptureKind"],[3,"CapturedItem"],[4,"BindingMode"],[4,"InferenceDiagnostic"],[4,"Adjust"],[3,"OverloadedDeref"],[4,"AutoBorrow"],[4,"PointerCast"],[4,"ImplTraitLoweringMode"],[4,"TyDefId"],[4,"ValueTyDefId"],[3,"MemoryMap"],[4,"ConstScalar"],[4,"ImplTraitId"],[3,"ReturnTypeImplTraits"],[3,"ReturnTypeImplTrait"],[4,"Ordering"],[8,"Ord"],[8,"Sized"],[8,"TypeVisitable"],[3,"TypeOrConstParamId"],[3,"Vec"],[3,"ConstData"],[6,"Canonical"],[8,"UnificationDatabase"],[3,"Formatter"],[6,"Result"],[4,"AliasTy"],[3,"AssocTypeId"],[3,"CanonicalVarKinds"],[3,"ClosureId"],[3,"Const"],[3,"Constraints"],[3,"FnDefId"],[6,"GenericArg"],[3,"Goal"],[3,"Goals"],[3,"Lifetime"],[3,"OpaqueTy"],[3,"OpaqueTyId"],[3,"ProgramClause"],[3,"ProgramClauseImplication"],[3,"ProgramClauses"],[3,"ProjectionTy"],[3,"QuantifiedWhereClauses"],[3,"SeparatorTraitRef"],[3,"Substitution"],[3,"TraitId"],[3,"Ty"],[3,"VariableKinds"],[15,"u32"],[4,"DefWithBodyId"],[3,"String"],[8,"PartialEq"],[8,"Iterator"],[3,"FieldId"],[15,"usize"],[3,"Error"],[4,"Result"],[3,"TyLoweringContext"],[3,"InternedCallableDefId"],[6,"FnDefId"],[3,"InternedOpaqueTyId"],[6,"OpaqueTyId"],[3,"StructId"],[3,"EnumVariantId"],[3,"UnionId"],[3,"EnumId"],[3,"ConstId"],[3,"StaticId"],[6,"AssocTypeId"],[6,"ChalkTraitId"],[6,"FnPointer"],[6,"ForeignDefId"],[6,"PlaceholderIndex"],[4,"GenericArgData"],[4,"GoalData"],[8,"Hasher"],[8,"Hash"],[3,"HirFormatter"],[4,"HirDisplayError"],[6,"OpaqueTy"],[6,"Lifetime"],[6,"LifetimeData"],[6,"LifetimeOutlives"],[6,"Const"],[6,"DomainGoal"],[6,"WhereClause"],[3,"ImplId"],[6,"QuantifiedWhereClause"],[6,"BindingId"],[8,"IntoIterator"],[4,"LifetimeData"],[3,"ProgramClauseData"],[4,"TyKind"],[6,"CrateId"],[4,"TypeRef"],[3,"LifetimeParamId"],[3,"Resolver"],[8,"PartialOrd"],[8,"Into"],[6,"DynTy"],[3,"NoSolution"],[8,"FallibleTypeFolder"],[3,"TyData"],[3,"TypeId"],[4,"VariantId"],[8,"TypeVisitor"],[4,"ControlFlow"],[8,"FnOnce"],[8,"Zipper"],[4,"Variance"],[4,"ConstEvalError"],[4,"MirEvalError"],[4,"MirLowerError"],[4,"ConstRef"],[15,"u128"],[3,"Variances"],[3,"InternedTypeOrConstParamId"],[3,"InternId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedClosureId"],[3,"InternedGeneratorId"],[3,"AssociatedTyDatum"],[3,"Arc"],[3,"AssociatedTyValueId"],[3,"AssociatedTyValue"],[6,"PolyFnSig"],[4,"GeneralConstId"],[15,"i128"],[3,"ConstParamId"],[3,"InferQueryQuery"],[3,"MirBodyQuery"],[3,"MirBodyForClosureQuery"],[3,"MonomorphizedMirBodyQuery"],[3,"MonomorphizedMirBodyForClosureQuery"],[3,"BorrowckQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ConstEvalQuery"],[3,"ConstEvalStaticQuery"],[3,"ConstEvalDiscriminantQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"LayoutOfAdtQuery"],[3,"LayoutOfTyQuery"],[3,"TargetDataLayoutQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"InherentImplsInBlockQuery"],[3,"IncoherentInherentImplCratesQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInBlockQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeOrConstParamIdQuery"],[3,"InternTypeOrConstParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"InternGeneratorQuery"],[3,"InternGeneratorLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[6,"LocalFieldId"],[3,"ArenaMap"],[3,"HirDatabaseGroupStorage__"],[3,"DatabaseKeyIndex"],[3,"FnDefDatum"],[3,"Runtime"],[3,"GeneratorId"],[3,"Name"],[3,"ImplId"],[3,"ImplDatum"],[3,"QueryTable"],[3,"QueryTableMut"],[4,"TyFingerprint"],[3,"BlockId"],[3,"InherentImpls"],[6,"Layout"],[4,"LayoutError"],[3,"Revision"],[3,"MirBody"],[15,"u16"],[3,"Environment"],[3,"AdtDatum"],[3,"TargetDataLayout"],[3,"TraitDatum"],[3,"TraitImpls"],[6,"Goal"],[6,"InEnvironment"],[6,"Solution"],[4,"BodyValidationDiagnostic"],[3,"IncoherentImpl"],[3,"IncorrectCase"],[4,"ModuleDefId"],[4,"Expr"],[4,"Pat"],[3,"Body"],[4,"DisplayTarget"],[4,"ClosureStyle"],[4,"SizedByDefault"],[3,"HirDisplayWrapper"],[3,"ModuleId"],[4,"DisplaySourceCodeError"],[8,"HirDisplay"],[3,"HexifiedConst"],[15,"str"],[15,"char"],[3,"Arguments"],[8,"HirWrite"],[4,"Visibility"],[4,"BinaryOp"],[3,"RustcEnumVariantIdx"],[4,"LookupMode"],[4,"VisibleFromModule"],[3,"ReceiverAdjustments"],[6,"FxHashSet"],[3,"SwitchTargets"],[3,"VTableMap"],[4,"MutabilityReason"],[3,"BorrowckResult"],[3,"Local"],[4,"Operand"],[4,"ProjectionElem"],[3,"Place"],[4,"AggregateKind"],[3,"Terminator"],[4,"TerminatorKind"],[4,"BorrowKind"],[4,"UnOp"],[4,"BinOp"],[4,"CastKind"],[4,"Rvalue"],[4,"StatementKind"],[3,"Statement"],[3,"BasicBlock"],[4,"MirSpan"],[8,"Debug"],[6,"LocalId"],[4,"CmpOp"],[4,"ArithOp"],[3,"Evaluator"],[6,"BasicBlockId"],[8,"Fn"],[4,"IntTy"],[4,"UintTy"],[4,"FloatTy"],[4,"BuiltinInt"],[4,"BuiltinUint"],[4,"BuiltinFloat"],[4,"FnTrait"],[4,"ClosureKind"],[8,"TyExt"],[8,"Cast"],[8,"TraitRefExt"],[8,"DynTyExt"],[8,"ProjectionTyExt"],[13,"BreakOutsideOfLoop"],[13,"MismatchedArgCount"],[13,"ExpectedFunction"],[13,"TypedHole"],[13,"NoSuchField"],[13,"PrivateField"],[13,"UnresolvedField"],[13,"UnresolvedMethodCall"],[13,"PrivateAssocItem"],[8,"ConstExt"],[3,"HirDatabaseStorage"],[3,"UnsafeExpr"],[13,"MissingMatchArms"],[13,"ReplaceFilterMapNextWithFindMap"],[13,"RecordMissingFields"],[13,"SourceCode"],[13,"Sized"],[13,"Mut"],[13,"Mut"],[13,"Subslice"],[13,"ConstantIndex"],[13,"Call"],[13,"Assert"],[13,"SwitchInt"],[13,"Yield"],[13,"FalseEdge"],[13,"Drop"],[13,"DropAndReplace"],[13,"FalseUnwind"],[13,"Goto"]]},\
"ide":{"doc":"ide crate provides “ide-centric” APIs for the …","t":"NNNNEENNNNNNDDNDDEENNNDDDEENNNNNNNNNNNNNNNNNNNNSDNEGDNDNNNENNNNNDDEDNNNNNDGNNNNNNNNDDENENDNNNENNNNNNDNNENNDDDENDENNNNNNNNDDDDEDEEDEEDEDDNNNNNDNNDDDEDEENNDNNDNNNENDDNNNNNNNNDNDENNNNNEEDNNNNNDNNNNNNNNNNNDDNNNNNNNNNNNDNDNNNNNNNNEDNNDNDDNNEDNNDNEDNDNDNEDDDDNNDDNNNNDENENNNNENDDDNDDNNNNNNNNNNNNNNNNNNNNNMMLLLLLLLLLLLMMMLMMMLLLMMMMMLLLLLLLLLLLMMMLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLLLLLLLMLLLLLLMMLLMMMLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMLMLLLLLLLLLLLLLMMMMLLLLLMLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLMLMMLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLMMMMLMMLLLLLLLLMMLMMMMMMMMMLMMMMLLLLLLLLLMLMMLLLMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLMMLMLLMMLLMLLLLMMMMMMLLLLLLLLLLLLLMMLLLMMLLLMLLLLLLMMMLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMLLMMMMLMLLMLLMMLLLMLMMMMMMMMMLLLLLLLMMMMLMLLLMLMLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLMLLMLLLMLLMMMLLMMMLLMMLLLLLLLMLLLLLLLLLLLLLLMLMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLMLLLMLLLLLMMMMMMMMMMMMMMMMM","n":["AboveName","AboveWholeItem","AddParentheses","Adjustment","AdjustmentHints","AdjustmentHintsMode","After","All","Always","Always","Always","Always","Analysis","AnalysisHost","Angle","Annotation","AnnotationConfig","AnnotationKind","AnnotationLocation","ArgList","Arithmetic","Array","Assist","AssistConfig","AssistId","AssistKind","AssistResolveStrategy","Associated","Async","Attribute","Attribute","AttributeBracket","Before","Bench","Bin","Binding","BindingMode","Bitwise","Block","BoolLiteral","Both","Brace","Bracket","BuiltinAttr","BuiltinType","BuiltinType","ByteLiteral","CURRENT","CallItem","Callable","CallableSnippets","Cancellable","Cancelled","Chaining","Change","CharLiteral","ClosingBrace","ClosureCapture","ClosureReturnTypeHints","Colon","Comma","Comment","Comment","Comparison","CompletionConfig","CompletionItem","CompletionItemKind","CompletionRelevance","Const","ConstParam","Consts","Consuming","ControlFlow","CrateGraph","CrateId","CrateRoot","CreateFile","Decimal","Default","DefaultLibrary","Definition","Derive","DeriveHelper","Diagnostic","DiagnosticsConfig","Direction","Discriminant","DiscriminantHints","DocTest","Documentation","Documentation","Dot","Down","Edition","Edition2015","Edition2018","Edition2021","Enum","Error","EscapeSequence","ExpandedMacro","Export","Expr","ExprFillDefaultMode","Field","Fieldless","FileId","FilePosition","FileRange","FileSystemEdit","FillArguments","Fold","FoldKind","FormatSpecifier","Function","Generate","GenericParamList","GoToType","HasImpls","HasReferences","Hexadecimal","Highlight","HighlightConfig","HighlightRelatedConfig","HighlightedRange","HlMod","HlMods","HlOperator","HlPunct","HlRange","HlTag","HoverAction","HoverConfig","HoverDocFormat","HoverGotoTypeData","HoverResult","Impl","Implementation","Import","Import","Imports","Indel","InferredType","Injected","InlayHint","InlayHintLabel","InlayHintLabelPart","InlayHintPosition","InlayHintsConfig","InlayKind","InlayTooltip","IntraDocLink","Item","JoinLinesConfig","Keyword","Keyword","Label","Label","Library","Lifetime","LifetimeElisionHints","LifetimeParam","LineCol","LineIndex","Local","Logical","Macro","Macro","Macro","MacroBang","Markdown","Markdown","Markup","MatchArm","MemoryLayoutHoverConfig","MemoryLayoutHoverRenderKind","Meta","Method","Method","Mods","Module","MonikerDescriptorKind","MonikerKind","MonikerResult","MoveDir","MoveFile","Mutable","Name","Namespace","NavigationTarget","Never","Never","Never","Never","None","None","None","NumericLiteral","Operator","Other","Other","PackageInformation","ParallelPrimeCachesProgress","Parameter","Parameter","Parenthesis","Path","PlainText","Postfix","PreferPostfix","PreferPrefix","Prefix","Public","Punctuation","Query","QuickFix","RangeInfo","Read","ReborrowOnly","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Reference","Reference","ReferenceCategory","ReferenceSearchResult","Region","Region","RenameError","ReturnType","RootDatabase","Runnable","Runnable","Runnable","RunnableKind","SearchScope","SelfParam","SelfType","Semantics","Semi","Severity","SignatureHelp","Single","SingleResolve","SkipTrivial","Snippet","Snippet","SnippetScope","SourceChange","SourceRoot","SourceRootId","SsrError","Static","Static","StaticIndex","StaticIndexedFile","Statics","String","StringLiteral","Struct","StructureNode","StructureNodeKind","Symbol","SymbolKind","SymbolKind","SymbolKind","Term","Test","TestId","TestMod","TextEdit","TextRange","TextSize","Todo","TokenId","TokenStaticData","ToolModule","Trait","Trait","TraitAlias","Type","Type","Type","TypeAlias","TypeParam","TypeParameter","Union","UnresolvedReference","UnresolvedReference","Unsafe","Up","ValueParam","Variant","WeakWarning","WhereClause","WithBlock","Write","actions","active_parameter","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_crate_root","add_dep","adjustment_hints","adjustment_hints_hide_outside_unsafe","adjustment_hints_mode","adt_variance","alias","alignment","allowed","analysis","ancestors_at_offset_with_macros","ancestors_with_macros","annotate_enum_variant_references","annotate_impls","annotate_method_references","annotate_references","annotate_runnables","annotations","append_str","apply","apply","apply","apply_change","apply_change","apply_to_offset","as_str","as_str","assert_contains_node","assist_emit_must_use","assist_id","assist_kind","assists_with_fixes","associated_ty_data","associated_ty_value","ast_id_map","at","attrs","attrs_with_owner","binary_target","binding_hash","binding_mode_hints","binding_mode_of_pat","bitor","bitor","bitor_assign","bitor_assign","block_def_map","body","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowck","break_points","builder","call_hierarchy","callable","callable_item_signature","case_sensitive","catch","category","cfg","chaining_hints","change_file","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closing_brace_hints_min_lines","closure_capture_hints","closure_captures","closure_return_type_hints","closure_style","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","col","completions","compute","const_data","const_eval","const_eval_discriminant","const_eval_static","const_param_ty","const_visibility","container_name","contains","contains","contains","contains_inclusive","contains_range","cover","cover_offset","crate_def_map","crate_def_map_query","crate_edition","crate_graph","crate_graph","crate_id_for_crate_root","crate_lang_items","crate_limits","crate_root","crate_supports_no_std","crate_symbols","crates_currently_indexing","crates_done","crates_for","crates_in_topological_order","crates_total","db","declaration","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","definition","delete","delete","delete","deprecated","deprecated","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descend_into_macros","descend_into_macros_single","descend_into_macros_with_kind_preference","descend_into_macros_with_same_text","descend_node_into_attributes","description","description","detail","detail","diagnostics","diagnostics_display_range","disable_experimental","disabled","discriminant_hints","doc","docs","documentation","documentation","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","empty","enable_imports_on_the_fly","enable_postfix_completions","enable_private_editable","enable_proc_attr_macros","enable_self_on_the_fly","end","end_bound","enum_data","enum_data_with_diagnostics","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact","exact_name_match","exit_points","expand","expand_attr_macro","expand_derive_as_pseudo_attr_macro","expand_derive_macro","expand_macro","expand_proc_attr_macros","expand_proc_macro","expansion","experimental","expr_adjustments","expr_fill_default","expr_scopes","extend","extend","extend","extend_selection","external_docs","fenced_block","fetch_crates","field_types","field_visibilities","fields_attrs","fields_attrs_source_map","file_for_path","file_id","file_id","file_id","file_id","file_item_tree","file_line_index","file_range","file_source_root","file_structure","file_system_edits","file_text","file_text","file_text","files","files","files_changed","find_all_refs","find_node_at_offset_with_descend","find_node_at_offset_with_macros","find_nodes_at_offset_with_descend","fixes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_def_datum","fn_def_variance","focus_or_full_range","focus_range","folding_ranges","folds","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_def","from_edits","from_iter","from_single_file","from_str","from_str","from_text_edit","full_range","function_data","function_visibility","generic_defaults","generic_params","generic_predicates","generic_predicates_for_param","get_source_edit","goto_declaration","goto_definition","goto_implementation","goto_type_definition","group","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hide_closure_initialization_hints","hide_named_constructor_hints","highlight","highlight","highlight_as_html","highlight_range","highlight_related","hir_file_for","hover","hover","hygiene_frame","id","identifier","impl_data","impl_data_with_diagnostics","impl_datum","impl_self_ty","impl_trait","import_map","import_to_add","incoherent_inherent_impl_crates","incoming_calls","index","infer","infer_query","info","inherent_impls_in_block","inherent_impls_in_crate","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inject_doc_comment","inlay_hints","inlay_hints","insert","insert","insert","insert_source_edit","insert_use","insert_use","insert_use","intern_anonymous_const","intern_block","intern_callable_def","intern_closure","intern_const","intern_enum","intern_extern_block","intern_function","intern_generator","intern_impl","intern_impl_trait_id","intern_lifetime_param_id","intern_macro2","intern_macro_call","intern_macro_rules","intern_proc_macro","intern_static","intern_struct","intern_trait","intern_trait_alias","intern_type_alias","intern_type_or_const_param_id","intern_union","interpret_function","intersect","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_attr_macro_call","is_crate_no_std","is_definite","is_derive_annotated","is_empty","is_empty","is_empty","is_empty","is_empty","is_inside_unsafe","is_item_from_trait","is_library","is_library_file","is_local","is_name_already_imported","is_op_method","is_private_editable","is_relevant","is_snippet","is_snippet","is_unsafe_ident_pat","is_unsafe_macro_call","is_unsafe_method_call","is_unsafe_ref_expr","iter","iter","iter","iter","join_assignments","join_else_if","join_lines","keywords","kind","kind","kind","kind","kind","kind","kind","kind","label","label","label","label","label","lang_item","layout_of_adt","layout_of_ty","len","len","len","library_roots","library_symbols","libs","lifetime_elision_hints","limit","limit","line","line_col","line_index","lines","linked_location","links_in_hover","local_roots","location","lookup","lookup","lookup_intern_anonymous_const","lookup_intern_block","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_const","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_function","lookup_intern_generator","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_macro2","lookup_intern_macro_call","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait_alias","lookup_intern_type_alias","lookup_intern_type_or_const_param_id","lookup_intern_union","macro2_data","macro_arg","macro_arg_text","macro_bang","macro_def","macro_expand","macro_rules_data","markup","matching_brace","max_length","memory_layout","merge","message","mir_body","mir_body_for_closure","mod_path","mods","module_symbols","moniker","moniker","monomorphized_mir_body","monomorphized_mir_body_for_closure","move_item","name","name","name","name","nav","nav","navigation_range","new","new","new","new","new","new","new","new","new","new","new","new_library","new_local","niches","node_range","normalize_projection","of","offset","offset","offset","on_char_typed","on_enter","only_types","operator","ordering","original_ast_node","original_range","original_range_opt","original_syntax_node","outgoing_calls","package_information","pad_left","pad_right","parallel_prime_caches","param_names_for_lifetime_elision_hints","parameter_hints","parameter_labels","parameter_ranges","parent","parent_module","parse","parse","parse","parse_macro_expansion","parse_macro_expansion_error","parse_or_expand","parse_or_expand","parse_or_expand_with_err","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","parts","patch_cfg_if","path_for_file","pattern_adjustments","per_query_memory_usage","per_query_memory_usage","position","postfix_match","postfix_snippet","postfix_snippets","postfix_triggers","prefer_no_std","prefer_no_std","prefer_no_std","prefix_snippets","prefix_triggers","prepare_rename","prepend_str","proc_attr_macros_enabled","proc_macro_data","proc_macros","proc_macros","proc_macros_enabled","program_clauses_for_chalk_env","provide","provide","punctuation","push_file_system_edit","range","range","range","range","range","range","range","range","ranges","raw","raw_database","raw_database_mut","record_literal_missing_fields","record_pattern_missing_fields","recursion_limit","ref_match","ref_match","references","references","references","related_tests","relevance","relevant_crates","relevant_crates_for","remove_and_replace","remove_trailing_comma","rename","render_colons","replace","replace","repo","request_cancellation","request_cancellation","requires_import","resolve_annotation","resolve_attr_macro_call","resolve_await_to_poll","resolve_bin_expr","resolve_bind_pat_to_const","resolve_completion_edits","resolve_derive_macro","resolve_extern_crate","resolve_field","resolve_index_expr","resolve_label","resolve_lifetime_param","resolve_macro_call","resolve_method_call","resolve_method_call_as_callable","resolve_method_call_field_fallback","resolve_path","resolve_path","resolve_path","resolve_prefix_expr","resolve_record_field","resolve_record_pat_field","resolve_trait","resolve_try_expr","resolve_type","resolve_variant","return_type_impl_traits","roots","runnables","scope","scope","scope_at_offset","scope_for_def","score","set_crate_graph","set_crate_graph","set_crate_graph_with_durability","set_expand_proc_attr_macros","set_expand_proc_attr_macros_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","set_proc_macros","set_proc_macros","set_proc_macros_with_durability","set_roots","set_source_root","set_source_root_with_durability","severity","should_resolve","shuffle_crate_graph","signature","signature_help","simple","single_file","size","snapshot","snippet","snippet_cap","snippet_cap","snippets","sort_deps","source","source_change","source_file_edits","source_range","source_root","source_root_crates","specialize_operator","specialize_punctuation","speculative_expand","speculative_expand_attr_macro","speculative_expand_derive_as_pseudo_attr_macro","start","start_bound","static_data","status","strings","struct_data","struct_data_with_diagnostics","struct_datum","structural_search_replace","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","symbol_search","syntactic_name_ref_highlighting","syntax_tree","tag","target","target","target_data_layout","test_sample","text","text_edit","text_edit","title","to_def","to_module_def","to_module_defs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_utf8","to_wide","token_ancestors_with_macros","tokens","tokens","tooltip","trait_alias_data","trait_data","trait_data_with_diagnostics","trait_datum","trait_environment","trait_environment_for_body","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_deps","trait_solve","trait_solve_query","transitive_deps","transitive_rev_deps","transitive_rev_deps","trigger_call_info","trigger_signature_help","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_line_col","ty","type_alias_data","type_hints","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_match","type_of_binding_in_pat","type_of_expr","type_of_pat","type_of_self","union","union_data","union_data_with_diagnostics","unused","unwrap_trivial_blocks","up_to","upcast","upcast","upcast","update_lru_capacities","update_lru_capacities","update_lru_capacity","update_parse_query_lru_capacity","use_name_in_title","value_ty","variants_attrs","variants_attrs_source_map","version","view_crate_graph","view_hir","view_item_tree","view_mir","will_rename_file","yield_points","data","data","pos","pos","dst","dst","dst","initial_contents","src","src","src_id","attr","path","test_id","test_id","test_id"],"q":[[0,"ide"],[2663,"ide::AnnotationKind"],[2667,"ide::FileSystemEdit"],[2674,"ide::RunnableKind"]],"d":["","","","","","","","All assists should be resolved.","","","","","Analysis is a snapshot of a world state at a moment in …","<code>AnalysisHost</code> stores the current state of the world.","&lt;&gt;","","","","","","+, -, *, /, +=, -=, *=, /=","","","","Unique identifier of the assist, should not be shown to …","","A way to control how many assist to resolve during the …","Used for items in traits and impls.","Used with keywords like <code>async</code> and <code>await</code>.","","Used to differentiate individual elements within attribute …","","","","","","","|, &amp;, !, ^, |=, &amp;=, ^=","","","","{}","[]","","","","","","","Callable item or value.","","","A panic payload indicating that a salsa revision was …","","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","",":",",","","",", &lt;, ==, &gt;=, &lt;=, !=","","<code>CompletionItem</code> describes a single completion entity which …","The type of the completion item.","","","","","Value that is being consumed in a function call","Used with keywords like <code>if</code> and <code>break</code>.","<code>CrateGraph</code> is a bit of information which turns a set of …","","Used for crate names, like <code>serde</code>.","","","","Used for items from built-in crates (std, core, alloc, …","<code>foo</code> in <code>fn foo(x: i32)</code> is a definition, <code>foo</code> in <code>foo(90 + 2)</code> …","","","","","","","","","Holds documentation","Doc-strings like this one.",".","","","","","","","","","","","","","","","Handle to a file in <code>Vfs</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the results when hovering over an item","","","","","","<code>InsertDelete</code> – a single “atomic” change to text","","Highlighting injection like rust code in doc strings or …","","","","","","","","Used for intra doc links in doc injection.","","","","","A type to specify UI label, like an entry in the list of …","","Used for items from other crates.","","","","<code>(line, column)</code> information in the native, UTF-8 encoding.","Maps flat <code>TextSize</code> offsets to/from <code>(line, column)</code> …","","&amp;&amp;, ||, !","","","Used to differentiate individual elements within macro …","! (only for macro calls)","","","","","","","","","","","","","","","","","Mutable binding.","","","<code>NavigationTarget</code> represents an element in the editor’s …","","","","","","No assists should be resolved.","","","","","","","We’re indexing many crates.","","","()","","","","","","","Used for public items.","","","","Info associated with a text range.","","","","","","","","Immutable reference.","","","","","","","","","","","","Generally, <code>search_scope</code> returns files that might contain …","","","Primary API to get semantic information, like types, from …",";","","Contains information about an item signature as seen from …","Only a certain assist should be resolved.","Hold the <code>AssistId</code> data of a certain assist to resolve. The …","","A user supplied snippet.","","A snippet scope describing where a snippet may apply to. …","","","Files are grouped into source roots. A source root is a …","","","Used for associated functions.","A static representation of fully analyzed source code.","","","","","","","","","","","","","","","","","A range in text, represented as a pair of <code>TextSize</code>.","A measure of text length. Also, equivalently, an index …","","","","","","Used for items in traits and trait impls.","","","","","","","","","","","Used for unsafe functions, unsafe traits, mutable statics, …","","","","","","","","","","","","","","","","","","","","","","","","","In addition to a <code>name</code> field, a <code>NavigationTarget</code> may also …","","","Returns a snapshot of the current state, which you can …","","Iterates the ancestors of the given node, climbing up …","","","","","","","","","","","","Applies changes to the current state of the world. If …","","","","","","The id of the assist.","","Convenience function to return assists + quick fixes for …","","","","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…omputes call hierarchy candidates for the given file …","","","","Runs <code>f</code>, and catches any salsa cancellation.","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero-based UTF-8 offset.","Computes completions at the given position.","","","","","","","","","Check if this range contains an offset.","","","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","Returns the edition of the given crate.","","","","","","Returns the root file of the given crate.","","","the crates that we are currently priming.","the total number of crates that have finished priming","Returns crates this file belongs too.","Returns all crates in the graph, sorted in topological …","the total number of crates we want to prime.","","","","","","","","","","","","","","","","","","","","","Refers to offsets in the original text","Whether this item is marked as deprecatedescend the token into macrocalls to all its mapped …","Descend the token into macrocalls to its first mapped …","","Descend the token into macrocalls to all its mapped …","Maps a node down by mapping its first and last token down.","","","Additional info to show in the UI pop up.","","Computes the set of diagnostics for the given file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a zero-length range at the specified offset (…","Build an empty search scope.","","","","","","The end point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is set in cases like these:","","","If <code>item</code> has an attribute macro attached to it, expands it.","","","","","","","","","","","Extends this crate graph by adding a complete disjoint …","","","Selects the next syntactic nodes encompassing the range.","Returns URL(s) for the documentation of the symbol under …","","","","","","","","","","","","","Gets the file’s <code>LineIndex</code>: data structure to convert …","Build a empty search scope spanning the text range of the …","","Returns a tree representation of symbols in the file. …","","","","Gets the text of the source file.","Build a empty search scope spanning the given files.","","","Finds all usages of the reference at point.","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “most interesting” range within the <code>full_range</code>.","Returns the set of folding ranges.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new SourceChange with the given label from the …","","","","","","Range which encompasses the whole element.","","","","","","","","Returns the declaration from the symbol at <code>position</code>.","Returns the definitions from the symbol at <code>position</code>.","Returns the impls from the symbol at <code>position</code>.","Returns the type definitions for the symbol at <code>position</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes syntax highlighting for the given file","","Computes syntax highlighting for the given file.","Computes syntax highlighting for the given file range.","Computes all ranges to highlight for a given item in a …","","Returns a short text describing element at position.","","","","","","","","","","","The import data to add to completion’s edits. …","","Computes incoming calls for the given file position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to inject highlights into doc comments","Returns a list of the places in the file where type hints …","","","","","Inserts a <code>TextEdit</code> for the given <code>FileId</code>. This properly …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The range covered by both ranges, if it exists. If the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if this crate has <code>no_std</code> or <code>no_core</code> specified.","This is set for type inference results","","","Check if this range is empty.","","","","Returns <code>true</code> if the <code>node</code> is inside an <code>unsafe</code> context.","This is set when trait items are completed in an impl of …","Sysroot or crates.io library.","Returns true if this file belongs to an immutable library.","This is set in cases like these:","This is set when an import is suggested whose name is …","Set for method completions of the <code>core::ops</code> and <code>core::cmp</code> …","Set for item completions that are private but in the …","Returns true when the score for this threshold is above …","","","","","","","","","","","","","Returns an edit to remove all newlines in the range, …","","What item (struct, function, etc) are we completing.","","","","","The kind of this inlay hint.","","","","Short description of the assist, as shown in the UI.","Label in the completion pop up which identifies completion.","","The actual label to show in the inlay hint.","","","","","Returns the length of the original text.","The size of this range.","","","","","","","Zero-based.","Transforms the <code>TextSize</code> into a <code>LineCol</code>.","","Given a range [start, end), returns a sorted iterator of …","Source location represented by this label part. The client …","","","","What string is used for filtering.","Lookup is used to check if completion item indeed can …","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to highlight the macro call bang","","","","","Returns position of the matching brace (all types of …","","","","","","","","","","Returns moniker of symbol at position.","","","","","","","","","","","","Returns a <code>LineIndex</code> for the <code>text</code>.","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","","","","","","","","","","","","","","","The text size of some primitive text-like object.","Transforms the <code>LineCol</code> into a <code>TextSize</code>.","","","Returns an edit which should be applied after a character …","Returns an edit which should be applied when opening a new …","","Whether to highlight operator","Relative order of the two ranges (overlapping ranges are …","Attempts to map the node out of macro expanded files. This …","Attempts to map the node out of macro expanded files …","Attempts to map the node out of macro expanded files …","Attempts to map the node out of macro expanded files. This …","Computes outgoing calls for the given file position.","","","","","","","","","","Returns a <code>mod name;</code> declaration which created the current …","","","Gets the syntax tree of the file.","","","","","","","","","","","","","","","","","","","","","","","","","","NB: this clears the database","","Set for postfix snippet item completions","","","","","","","","","","","","","","","","","","","Whether to highlight punctuation","","","","","","","The text range this inlay hint applies to.","","","","","","","","","","","Indicates that a reference or mutable reference to this …","","","","Returns the set of tests for the given file position.","We use this to sort completion. Relevance records facts …","","Returns crates this file <em>might</em> belong too.","Remove the crate from crate graph. If any crates depend on …","","Returns the edit required to rename reference at the …","","","","","","","This is set for completions that will insert a <code>use</code> item.","","","","","","Resolves additional completion data at the position given.","","","","","","","","","","Attempts to resolve this call expression as a method call …","","","","","","","","","","","","","Returns the set of possible targets to run for the current …","","","","","Provides a relevance score. Higher values are more …","","","","","","","","","","","","","","","","","","","","","","","","Computes parameter information at the given position.","","Build a empty search scope spanning the given file.","","","","","","","","Search for a definition’s source and cache its syntax …","Computing source change sometimes is much more costly then …","","Range of identifier that is being completed.","","","Whether to specialize operator highlights","Whether to specialize punctuation highlights","","","","The start point of this range.","","","Debug info about the current state of the analysis.","Whether to highlight strings","","","","","","","","","","","","","","Fuzzy searches for a symbol.","Whether to highlight unresolved things be their syntax","Returns a syntax tree represented as <code>String</code>, for debug …","","Target ranges are used to sort assists: the smaller the …","","","","","What happens when user selects this item.","Text edit to apply when “accepting” this inlay hint.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms the <code>WideLineCol</code> with the given <code>WideEncoding</code> …","Transforms the <code>LineCol</code> with the given <code>WideEncoding</code> into a …","","","","The tooltip to show when hovering over the inlay hint, …","","","","","","","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …","Returns crates this file belongs too.","If completing a function call, ask the editor to show …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms the <code>TextSize</code> into a <code>LineCol</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See CompletionRelevanceTypeMatch doc comments for cases …","It also includes the changes that binding mode makes in …","","","","","","","","","Create a range up to the given end (<code>..end</code>).","","","","","","","","","","","","","Renders the crate graph to GraphViz “dot” syntax.","","","","","","","","","","","","","","","","","","","","",""],"i":[373,373,93,118,0,0,206,46,113,114,115,116,0,0,129,0,0,0,0,167,130,167,0,0,0,0,0,62,62,99,62,63,206,127,127,98,118,130,167,63,108,129,129,99,98,63,63,6,0,62,0,0,0,118,0,63,118,118,0,129,129,167,63,130,0,0,0,0,99,99,167,62,62,0,0,62,95,108,86,62,62,99,99,0,0,0,118,0,127,0,62,129,123,0,6,6,6,99,85,63,0,120,100,0,99,114,0,0,0,0,93,0,0,63,99,87,118,110,203,203,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,110,90,120,167,0,98,62,0,0,0,0,0,0,0,62,100,0,98,63,0,99,62,118,0,99,0,0,99,130,99,119,62,129,109,208,0,167,0,0,119,98,119,167,99,0,0,0,95,95,62,126,119,0,113,114,115,116,87,46,63,63,63,129,130,0,0,118,119,129,126,109,117,117,117,117,62,63,0,87,0,90,116,87,87,87,87,110,62,0,0,105,167,0,167,0,0,203,110,0,0,99,99,0,129,0,0,46,0,115,0,98,0,0,0,0,0,99,62,0,0,167,208,63,99,0,0,63,0,98,105,119,127,0,127,0,0,0,86,0,0,99,99,62,99,100,118,119,99,99,119,99,98,63,62,123,99,99,85,167,113,90,154,204,1,1,1,2,2,2,1,2,2,4,4,112,112,112,41,72,107,44,25,28,28,32,32,32,32,32,26,36,37,38,39,41,25,38,42,43,28,44,198,198,26,41,41,41,1,41,41,32,131,112,28,61,63,61,64,41,41,41,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,41,103,38,26,91,41,77,80,166,125,112,39,1,2,1,2,81,37,38,82,1,2,5,83,84,4,6,85,86,45,71,47,48,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,72,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,44,61,64,63,62,129,130,131,132,43,81,37,38,82,1,2,5,83,84,4,6,85,86,45,71,47,48,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,72,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,44,61,64,63,62,129,130,131,132,43,112,112,103,112,112,2,5,83,6,98,99,105,119,120,61,64,63,62,129,130,159,81,26,135,41,41,41,41,41,41,72,1,87,64,1,1,1,1,41,41,26,41,39,4,41,41,26,41,41,202,202,26,4,202,28,124,38,1,2,4,39,86,94,97,41,42,103,154,36,64,25,209,37,38,37,96,104,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,28,28,28,28,28,101,72,96,104,26,28,45,45,112,204,72,96,106,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,1,92,91,91,91,41,91,1,1,41,41,81,37,82,1,2,5,83,84,6,165,86,47,87,88,89,89,90,91,93,97,98,99,100,101,72,166,105,167,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,125,126,127,128,44,61,64,63,62,129,130,132,43,81,37,82,1,2,5,83,84,6,86,47,87,88,90,91,93,97,98,99,100,101,72,166,105,167,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,125,126,127,128,44,61,64,63,62,129,130,132,43,77,97,103,28,28,28,28,26,41,41,171,159,28,45,41,4,94,94,26,26,42,26,41,41,41,41,84,71,47,72,210,41,26,92,41,26,94,41,41,26,92,135,39,26,28,28,28,159,81,37,38,82,1,2,28,5,83,84,4,6,6,165,165,159,39,85,86,45,71,47,48,87,88,80,80,46,198,89,89,199,199,90,91,92,93,94,95,200,77,96,97,41,98,99,100,101,42,42,202,72,33,203,102,204,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,36,119,120,121,122,123,124,125,126,126,127,135,209,128,44,210,61,61,64,63,63,62,62,129,130,131,132,73,25,26,43,41,41,72,72,26,210,106,81,37,38,82,1,1,2,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,94,94,95,200,77,278,96,97,41,98,98,99,99,99,100,101,42,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,36,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,61,61,61,61,64,63,62,129,130,131,132,73,25,26,43,121,94,94,26,6,87,94,72,41,41,41,41,41,41,94,26,26,26,26,48,81,37,1,2,5,83,6,47,90,99,72,166,105,111,119,120,121,122,125,126,127,128,61,64,63,62,129,130,43,112,112,26,131,26,26,26,28,26,209,41,48,121,41,41,41,41,41,41,96,41,26,4,41,41,73,41,41,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,132,26,210,37,38,37,94,45,91,44,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,26,1,92,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,38,38,92,28,26,97,28,38,1,4,61,64,28,97,84,26,97,97,97,97,97,94,96,28,28,28,28,38,84,4,64,278,278,26,106,96,72,33,104,205,207,121,125,125,48,96,104,207,41,41,41,38,82,1,41,41,77,112,77,91,81,82,41,82,200,106,41,32,96,96,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,132,41,41,41,154,26,112,106,94,159,41,41,111,61,41,26,209,41,41,26,87,171,72,122,111,125,104,82,1,28,39,89,77,41,101,73,25,43,84,84,107,104,41,2,82,71,107,26,26,77,132,1,28,28,28,28,26,121,207,207,26,112,112,204,204,104,26,28,41,26,41,41,28,41,41,2,5,83,6,98,99,105,119,120,61,64,63,62,129,130,36,4,84,28,41,25,207,97,101,91,101,45,91,44,91,101,26,36,45,41,41,39,45,41,165,80,132,94,159,47,33,166,205,207,131,73,102,128,25,25,28,28,41,96,96,103,124,209,26,96,41,26,4,278,26,112,37,38,122,41,25,97,26,28,28,28,28,26,28,28,28,28,28,28,28,28,28,28,28,84,41,28,28,28,28,28,28,28,41,39,26,28,101,28,28,97,39,41,41,41,41,41,41,41,41,41,41,41,41,39,41,41,39,41,41,159,46,25,204,26,36,92,107,41,101,91,44,91,4,28,48,94,96,41,41,132,132,28,28,28,1,1,41,26,132,41,41,41,26,1,1,1,2,2,2,1,2,2,26,132,26,61,48,102,41,45,200,96,207,125,28,28,28,81,37,38,82,1,2,5,83,84,4,6,85,86,45,71,47,48,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,72,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,44,61,64,63,62,129,130,131,132,43,6,165,80,89,199,42,36,126,61,63,62,82,82,28,135,210,200,41,41,41,41,41,41,41,41,41,41,41,4,4,26,96,48,81,37,38,82,1,2,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,82,41,41,112,81,37,38,82,1,2,28,32,373,5,83,84,4,6,165,159,39,85,86,45,71,171,47,48,87,88,80,46,198,89,199,90,91,92,93,94,95,200,77,278,96,97,41,98,99,100,101,42,202,72,33,203,102,204,166,103,104,105,167,205,106,107,108,109,110,111,154,112,113,114,115,116,117,118,206,207,208,36,119,120,121,122,123,124,125,126,127,135,209,128,44,210,61,64,63,62,129,130,131,132,73,25,26,43,97,28,28,28,28,38,41,41,159,278,1,41,41,41,41,25,25,41,125,41,41,41,122,26,26,26,26,26,103,374,375,374,375,376,377,378,376,377,378,378,379,380,379,381,382],"fc":[],"p":[[3,"TextRange"],[3,"TextSize"],[4,"Delta"],[3,"CrateGraph"],[3,"FileId"],[4,"Edition"],[3,"CrateDisplayName"],[4,"Option"],[3,"String"],[3,"CfgOptions"],[3,"Env"],[15,"bool"],[4,"CrateOrigin"],[15,"str"],[3,"Arc"],[4,"Result"],[4,"ReleaseChannel"],[3,"CrateData"],[3,"Idx"],[3,"Dependency"],[3,"CyclicDependenciesError"],[3,"Interner"],[3,"AdtId"],[3,"Variances"],[3,"AnalysisHost"],[3,"Analysis"],[8,"HirDatabase"],[3,"Semantics"],[4,"RustLanguage"],[3,"SyntaxNode"],[8,"Iterator"],[3,"AnnotationConfig"],[3,"Annotation"],[3,"Vec"],[6,"Cancellable"],[3,"InlayHintLabel"],[3,"Indel"],[3,"TextEdit"],[3,"Change"],[8,"SourceDatabaseExt"],[3,"RootDatabase"],[3,"Markup"],[3,"Documentation"],[3,"AssistConfig"],[3,"DiagnosticsConfig"],[4,"AssistResolveStrategy"],[3,"FileRange"],[3,"Assist"],[3,"AssocTypeId"],[3,"AssociatedTyDatum"],[3,"Arc"],[3,"AssociatedTyValueId"],[3,"AssociatedTyValue"],[3,"HirFileId"],[3,"AstIdMap"],[4,"AttrDefId"],[3,"Attrs"],[3,"AttrsWithOwner"],[3,"IdentPat"],[4,"BindingMode"],[3,"Highlight"],[4,"HlMod"],[4,"HlTag"],[3,"HlMods"],[3,"BlockId"],[3,"DefMap"],[4,"DefWithBodyId"],[3,"Body"],[4,"MirLowerError"],[3,"TextEditBuilder"],[3,"FilePosition"],[3,"NavigationTarget"],[3,"RangeInfo"],[4,"CallableDefId"],[3,"CallableSig"],[3,"Binders"],[3,"Query"],[8,"FnOnce"],[8,"UnwindSafe"],[3,"Cancelled"],[3,"LineCol"],[3,"LineIndex"],[3,"SourceRootId"],[3,"SourceRoot"],[4,"Severity"],[4,"ExprFillDefaultMode"],[4,"AssistKind"],[3,"AssistId"],[3,"Label"],[4,"ReferenceCategory"],[3,"CompletionConfig"],[3,"SearchScope"],[4,"CallableSnippets"],[3,"SourceChange"],[4,"FileSystemEdit"],[3,"CompletionItem"],[3,"CompletionRelevance"],[4,"CompletionItemKind"],[4,"SymbolKind"],[4,"SnippetScope"],[3,"Snippet"],[3,"CallItem"],[3,"HighlightRelatedConfig"],[3,"StructureNode"],[4,"StructureNodeKind"],[3,"HoverConfig"],[3,"MemoryLayoutHoverConfig"],[4,"MemoryLayoutHoverRenderKind"],[4,"HoverDocFormat"],[4,"HoverAction"],[3,"HoverGotoTypeData"],[3,"InlayHintsConfig"],[4,"ClosureReturnTypeHints"],[4,"DiscriminantHints"],[4,"LifetimeElisionHints"],[4,"AdjustmentHints"],[4,"AdjustmentHintsMode"],[4,"InlayKind"],[4,"MonikerDescriptorKind"],[4,"MonikerKind"],[3,"MonikerResult"],[3,"PackageInformation"],[4,"Direction"],[3,"ReferenceSearchResult"],[3,"Runnable"],[4,"TestId"],[4,"RunnableKind"],[3,"TokenId"],[4,"HlPunct"],[4,"HlOperator"],[3,"HlRange"],[3,"HighlightConfig"],[4,"Ordering"],[15,"char"],[3,"StaticIndex"],[3,"ConstId"],[3,"ConstData"],[4,"GeneralConstId"],[3,"Substitution"],[3,"Const"],[4,"ConstEvalError"],[3,"EnumVariantId"],[15,"i128"],[3,"StaticId"],[3,"ConstParamId"],[3,"Ty"],[4,"Visibility"],[6,"CrateId"],[3,"LangItems"],[3,"CrateLimits"],[3,"Crate"],[3,"Global"],[3,"Box"],[3,"HoverResult"],[15,"usize"],[3,"SyntaxToken"],[3,"SmallVec"],[8,"AstNode"],[3,"Diagnostic"],[3,"SyntaxNodePtr"],[3,"InFile"],[4,"Bound"],[3,"EnumId"],[3,"EnumData"],[3,"SsrError"],[3,"HighlightedRange"],[4,"FoldKind"],[3,"MacroCall"],[4,"Item"],[3,"Attr"],[3,"ExpandedMacro"],[3,"MacroCallId"],[3,"TokenId"],[3,"Subtree"],[4,"ExpandError"],[3,"ValueResult"],[4,"Expr"],[3,"Adjustment"],[3,"ExprScopes"],[3,"FxHasher"],[3,"BuildHasherDefault"],[3,"HashMap"],[8,"IntoIterator"],[3,"OsStr"],[8,"Display"],[6,"FxIndexSet"],[4,"VariantId"],[3,"FieldData"],[3,"ArenaMap"],[3,"TupleField"],[3,"AstPtr"],[3,"RecordField"],[4,"Either"],[3,"VfsPath"],[3,"ItemTree"],[3,"Formatter"],[3,"Error"],[3,"SingleResolve"],[3,"RenameError"],[3,"InlayHintLabelPart"],[6,"Result"],[3,"ParallelPrimeCachesProgress"],[4,"AnnotationKind"],[3,"SignatureHelp"],[3,"Fold"],[4,"InlayHintPosition"],[3,"InlayHint"],[4,"InlayTooltip"],[3,"TokenStaticData"],[3,"StaticIndexedFile"],[8,"Debug"],[3,"FnDefId"],[3,"FnDefDatum"],[4,"RangeOrOffset"],[15,"u32"],[3,"NoHashHasher"],[4,"ModuleDefId"],[4,"MacroKind"],[4,"Definition"],[3,"FunctionId"],[3,"FunctionData"],[4,"GenericDefId"],[3,"GenericParams"],[3,"Interned"],[3,"TypeOrConstParamId"],[3,"Name"],[8,"Hasher"],[3,"HygieneFrame"],[3,"ImplId"],[3,"ImplData"],[3,"ImplId"],[3,"ImplDatum"],[3,"TraitRef"],[3,"ImportMap"],[4,"TyFingerprint"],[3,"InferenceResult"],[3,"InherentImpls"],[3,"AnonymousConstId"],[3,"BlockLoc"],[3,"InternedCallableDefId"],[3,"InternedClosureId"],[3,"Const"],[3,"AssocItemLoc"],[3,"Enum"],[3,"ItemLoc"],[3,"ExternBlock"],[3,"ExternBlockId"],[3,"Function"],[3,"InternedGeneratorId"],[3,"Impl"],[4,"ImplTraitId"],[3,"InternedOpaqueTyId"],[3,"LifetimeParamId"],[3,"InternedLifetimeParamId"],[3,"Macro2Loc"],[3,"Macro2Id"],[3,"MacroCallLoc"],[3,"MacroRulesLoc"],[3,"MacroRulesId"],[3,"ProcMacroLoc"],[3,"ProcMacroId"],[3,"Static"],[3,"Struct"],[3,"StructId"],[3,"Trait"],[3,"TraitId"],[3,"TraitAlias"],[3,"TraitAliasId"],[3,"TypeAlias"],[3,"TypeAliasId"],[3,"InternedTypeOrConstParamId"],[3,"Union"],[3,"UnionId"],[4,"Adt"],[3,"MethodCallExpr"],[3,"RefExpr"],[3,"Iter"],[3,"JoinLinesConfig"],[4,"LangItem"],[4,"LangItemTarget"],[4,"AdtId"],[3,"RustcEnumVariantIdx"],[3,"LayoutS"],[4,"LayoutError"],[3,"HashSet"],[3,"SymbolIndex"],[3,"Macro2Data"],[3,"GreenNode"],[3,"MacroDefId"],[4,"TokenExpander"],[4,"ParseError"],[3,"MacroRulesData"],[3,"MirBody"],[3,"ClosureId"],[3,"Module"],[3,"TraitEnvironment"],[3,"FileSet"],[3,"ProjectionTy"],[8,"TextLen"],[15,"u8"],[8,"Fn"],[8,"Sync"],[3,"SourceFile"],[3,"Parse"],[3,"MacroFile"],[4,"Pat"],[3,"ProcMacroData"],[3,"ProcMacro"],[3,"Environment"],[3,"ProgramClauses"],[3,"Demand"],[3,"RecordExpr"],[3,"RecordPat"],[3,"Macro"],[3,"AwaitExpr"],[3,"Function"],[3,"BinExpr"],[4,"ModuleDef"],[3,"ExternCrate"],[3,"FieldExpr"],[3,"Field"],[3,"IndexExpr"],[3,"Lifetime"],[3,"Label"],[3,"LifetimeParam"],[3,"Callable"],[3,"Path"],[4,"PathResolution"],[3,"AnchoredPath"],[3,"PrefixExpr"],[3,"RecordExprField"],[3,"RecordPatField"],[3,"Trait"],[3,"TryExpr"],[4,"Type"],[3,"Type"],[4,"VariantDef"],[3,"ReturnTypeImplTraits"],[3,"SemanticsScope"],[3,"Durability"],[8,"Into"],[3,"Snapshot"],[8,"HasSource"],[3,"TokenTree"],[3,"StaticData"],[3,"StructData"],[3,"AdtDatum"],[3,"TargetDataLayout"],[8,"ToDef"],[4,"WideEncoding"],[3,"WideLineCol"],[3,"TraitAliasData"],[3,"TraitData"],[3,"TraitId"],[3,"TraitDatum"],[3,"TraitImpls"],[3,"Goal"],[3,"InEnvironment"],[3,"Canonical"],[4,"Solution"],[3,"TryFromIntError"],[4,"TyDefId"],[3,"TypeAliasData"],[3,"TypeId"],[3,"TypeInfo"],[3,"SelfParam"],[8,"ExpandDatabase"],[8,"DefDatabase"],[6,"FxHashMap"],[4,"ValueTyDefId"],[3,"EnumVariantData"],[3,"Variant"],[4,"AnnotationLocation"],[13,"HasImpls"],[13,"HasReferences"],[13,"CreateFile"],[13,"MoveFile"],[13,"MoveDir"],[13,"Test"],[13,"TestMod"],[13,"Bench"],[13,"DocTest"]]},\
"ide_assists":{"doc":"<code>assists</code> crate provides a bunch of code assists, also known …","t":"NDDDEENDNNNNNNNNDMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMLLLLLLLMLMLMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLAENNFLLLLLLLLFFLLLFLLLL","n":["All","Assist","AssistConfig","AssistId","AssistKind","AssistResolveStrategy","Generate","GroupLabel","None","None","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Single","SingleResolve","allowed","assist_emit_must_use","assist_id","assist_kind","assists","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","group","id","init","init","init","init","init","init","init","insert_use","into","into","into","into","into","into","into","label","name","prefer_no_std","should_resolve","snippet_cap","source_change","target","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_signature_help","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","DefaultMethods","No","Only","add_trait_assoc_items_to_impl","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","extract_trivial_expression","filter_assoc_items","from","init","into","test_related_attribute","to_owned","try_from","try_into","type_id"],"q":[[0,"ide_assists"],[141,"ide_assists::utils"]],"d":["All assists should be resolved.","","","Unique identifier of the assist, should not be shown to …","","A way to control how many assist to resolve during the …","","","","No assists should be resolved.","","","","","","Only a certain assist should be resolved.","Hold the <code>AssistId</code> data of a certain assist to resolve. The …","","","The id of the assist.","","Return all the assists applicable at the given position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Short description of the assist, as shown in the UI.","","","","","Computing source change sometimes is much more costly then …","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assorted functions shared by several assists.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","This is a method with a heuristics to support test methods …","","","",""],"i":[3,0,0,0,0,0,7,0,7,3,7,7,7,7,7,3,0,2,2,15,15,0,5,7,8,3,15,9,2,5,7,8,3,15,9,2,5,7,8,9,2,5,7,8,9,2,7,5,7,8,3,15,9,2,5,7,8,3,15,9,2,5,7,8,3,15,9,2,7,8,2,7,8,2,5,7,8,3,15,9,2,5,7,8,3,15,9,2,7,5,5,5,7,8,3,15,9,2,2,5,7,8,3,15,9,2,5,7,2,3,2,5,5,5,7,8,9,2,5,5,7,8,3,15,9,2,5,7,8,3,15,9,2,5,7,8,3,15,9,2,0,0,24,24,0,24,24,24,24,24,24,24,24,0,0,24,24,24,0,24,24,24,24],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[7,7],[8,8],[9,9],[2,2],[[]],[[]],[[]],[[]],[[]],[[7,7],10],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[7,7],10],[[8,8],10],[[2,2],10],[[],10],[[],10],[[],10],[[5,12],[[14,[13]]]],[[7,12],[[14,[13]]]],[[8,12],[[14,[13]]]],[[3,12],[[14,[13]]]],[[15,12],[[14,[13]]]],[[9,12],[[14,[13]]]],[[2,12],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[14,[7]]]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[7,17],0,[[3,8],10],0,0,0,[[]],[[]],[[]],[[]],[[]],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,[[[19,[1]],[6,[20]],21,22,23]],[[]],[[]],[24,24],[[]],[11],[11],[11],[[24,24],10],[25,[[27,[26]]]],[[[19,[1]],24],[[6,[20]]]],[[]],[[],11],[[]],[28,[[27,[29]]]],[[]],[[],14],[[],14],[[],18]],"c":[],"p":[[3,"RootDatabase"],[3,"AssistConfig"],[4,"AssistResolveStrategy"],[3,"FileRange"],[3,"Assist"],[3,"Vec"],[4,"AssistKind"],[3,"AssistId"],[3,"GroupLabel"],[15,"bool"],[15,"usize"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"SingleResolve"],[6,"Result"],[15,"str"],[3,"TypeId"],[3,"Semantics"],[4,"AssocItem"],[3,"Trait"],[3,"Impl"],[3,"SemanticsScope"],[4,"DefaultMethods"],[3,"BlockExpr"],[4,"Expr"],[4,"Option"],[3,"Fn"],[3,"Attr"]]},\
"ide_completion":{"doc":"<code>completions</code> crate provides utilities for generating …","t":"NNNEDDEDENNNNNNNNDNENNNLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLFLMLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLMMMMMMLMMMMLMLLMLLMMLMLMMMFMLLMMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLM","n":["AddParentheses","Binding","BuiltinType","CallableSnippets","CompletionConfig","CompletionItem","CompletionItemKind","CompletionRelevance","CompletionRelevancePostfixMatch","Exact","Expr","FillArguments","InferredType","Item","Keyword","Method","NonExact","Snippet","Snippet","SnippetScope","SymbolKind","Type","UnresolvedReference","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callable","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","completions","default","deprecated","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","detail","documentation","drop","drop","drop","drop","drop","drop","drop","drop","enable_imports_on_the_fly","enable_postfix_completions","enable_private_editable","enable_self_on_the_fly","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact_name_match","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","import_to_add","init","init","init","init","init","init","init","init","insert_use","into","into","into","into","into","into","into","into","is_definite","is_item_from_trait","is_local","is_name_already_imported","is_op_method","is_private_editable","is_relevant","is_snippet","kind","label","limit","lookup","lookup","new","partial_cmp","postfix_match","postfix_snippet","postfix_snippets","postfix_triggers","prefer_no_std","prefix_snippets","prefix_triggers","ref_match","ref_match","relevance","requires_import","resolve_completion_edits","scope","score","snippet","snippet_cap","snippets","source_range","text_edit","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_call_info","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_match"],"q":[[0,"ide_completion"]],"d":["","","","","","<code>CompletionItem</code> describes a single completion entity which …","The type of the completion item.","","","This is set in cases like these:","","","","","","","Set in cases when item is postfix, but not exact","A user supplied snippet.","","A snippet scope describing where a snippet may apply to. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main entry point for completion. We run completion as a …","","Whether this item is marked as deprecated","","","","","","","","","","","","","","","","","","Additional info to show in the UI pop up.","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is set in cases like these:","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","The import data to add to completion’s edits. …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This is set for type inference results","This is set when trait items are completed in an impl of …","This is set in cases like these:","This is set when an import is suggested whose name is …","Set for method completions of the <code>core::ops</code> and <code>core::cmp</code> …","Set for item completions that are private but in the …","Returns true when the score for this threshold is above …","","What item (struct, function, etc) are we completing.","Label in the completion pop up which identifies completion.","","What string is used for filtering.","Lookup is used to check if completion item indeed can …","","","Set for postfix snippet item completions","","","","","","","","Indicates that a reference or mutable reference to this …","We use this to sort completion. Relevance records facts …","This is set for completions that will insert a <code>use</code> item.","Resolves additional completion data at the position given. …","","Provides a relevance score. Higher values are more …","","","","Range of identifier that is being completed.","What happens when user selects this item.","","","","","","","","","If completing a function call, ask the editor to show …","","","","","","","","","","","","","","","","","","","","","","","","","See CompletionRelevanceTypeMatch doc comments for cases …"],"i":[2,6,6,0,0,0,0,0,0,5,7,2,6,7,6,6,5,0,6,0,6,7,6,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,6,0,4,3,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,8,3,3,1,2,3,4,5,6,7,8,1,1,1,1,1,2,4,5,6,7,8,1,2,4,5,6,7,8,4,1,2,3,4,5,6,7,8,1,2,3,4,5,6,6,7,8,3,1,2,3,4,5,6,7,8,1,1,2,3,4,5,6,7,8,4,4,4,4,4,4,4,3,3,3,1,3,3,8,6,4,8,1,8,1,1,8,3,3,3,4,0,8,4,8,1,1,3,3,1,2,3,4,5,6,7,8,3,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],9],[[10,1,11,[13,[12]]],[[13,[[14,[3]]]]]],[[],4],0,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,0,0,[15],[15],[15],[15],[15],[15],[15],[15],0,0,0,0,[[1,1],16],[[2,2],16],[[4,4],16],[[5,5],16],[[6,6],16],[[7,7],16],[[8,8],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[1,17],18],[[2,17],18],[[3,17],18],[[4,17],18],[[5,17],18],[[6,17],18],[[7,17],18],[[8,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[19,6],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[4,16],0,0,0,0,[3,20],0,[[20,7],[[13,[8]]]],[[6,6],[[13,[9]]]],0,[[8,20],21],[1,22],0,0,[1,22],0,[3,13],0,0,0,[[10,1,11,23],[[13,[[14,[24]]]]]],0,[4,25],[8,21],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0],"c":[],"p":[[3,"CompletionConfig"],[4,"CallableSnippets"],[3,"CompletionItem"],[3,"CompletionRelevance"],[4,"CompletionRelevancePostfixMatch"],[4,"CompletionItemKind"],[4,"SnippetScope"],[3,"Snippet"],[4,"Ordering"],[3,"RootDatabase"],[3,"FilePosition"],[15,"char"],[4,"Option"],[3,"Vec"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"SymbolKind"],[15,"str"],[3,"String"],[8,"Iterator"],[8,"IntoIterator"],[3,"TextEdit"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"ide_db":{"doc":"This crate defines the core datastructure representing IDE …","t":"NNNNNNNNNGGDGGNNNIDDDNNNDNNDNNENNNNNNNNOOALLALLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLALLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLCKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLALLLAALLLLLLLLLLLLLLLLLALLLLLLAALLLLLLLLLLLLLLALLLLLLLLLLLLLLLALLLLLLLLLLLLLLLALLLLLLLLLDLLLFFLLLLLFLLLMLLMLNDDEENDNNNNNNNNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLMMLLLLMLLLLLLLLLLLLLLLLLLNNNNNNNENNNNNNNENNNNNENENNENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLARRRRRDDRRLLLLMLLLLLLMLLLLLLLLMMLLLLLLLFFFFFFFAAANDNDEDENDNDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLFMMLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNEEDNNNNENLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMLLLLFLLLLMFMLLLLLLLLLLLLLLLLNENLLLLFLLLLFFLLLLLLLLFFLENHNNLLLLLLLLLLLFLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLNENDGNOLLLLLLLLLLLLLLLLLOLLLLLLFLLLLLLLLFDDNNEDDNLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLNENNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLMMMLLLMLLLLLLLLLLLLLLLMMMMMMMDDDDDDIDDLLLLLLLLLLLLLLLLLFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKMLLKMLLKMLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLFDLLLLLLLLAALLALLLLLLALLLLLLLLLLNNNNNNNNENNNNNNNLLLLLLLLLFFLLLENNNLLLLLLLLLLLFLLLFFFFFFFFFFFFFFFFFFFNNELLLLLLLLLLLLLLLLLLLF","n":["Attribute","BuiltinAttr","Const","ConstParam","Derive","DeriveHelper","Enum","Field","Function","FxHashMap","FxHashSet","FxHasher","FxIndexMap","FxIndexSet","Impl","Label","LifetimeParam","LineIndexDatabase","LineIndexDatabaseGroupStorage__","LineIndexDatabaseStorage","LineIndexQuery","Local","Macro","Module","RootDatabase","SelfParam","SelfType","SnippetCap","Static","Struct","SymbolKind","ToolModule","Trait","TraitAlias","TypeAlias","TypeParam","Union","ValueParam","Variant","_bail","_format_err","active_parameter","adt_variance","apply_change","assists","associated_ty_data","associated_ty_value","ast_id_map","attrs","attrs_with_owner","base_db","block_def_map","body","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowck","callable_item_signature","clone","clone","clone_into","clone_into","cmp","const_data","const_eval","const_eval_discriminant","const_eval_static","const_param_ty","const_visibility","crate_def_map","crate_def_map_query","crate_graph","crate_lang_items","crate_limits","crate_supports_no_std","crate_symbols","default","default","default","defs","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","enable_proc_attr_macros","enum_data","enum_data_with_diagnostics","eq","eq","equivalent","equivalent","execute","expand_proc_attr_macros","expand_proc_macro","expr_scopes","famous_defs","field_types","field_visibilities","fields_attrs","fields_attrs_source_map","file_item_tree","file_source_root","file_text","file_text","finish","fmt","fmt","fmt","fmt","fmt_index","fmt_index","fn_def_datum","fn_def_variance","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","function_data","function_visibility","generated","generic_defaults","generic_params","generic_predicates","generic_predicates_for_param","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","hash","helpers","hygiene_frame","impl_data","impl_data_with_diagnostics","impl_datum","impl_self_ty","impl_trait","import_map","imports","in_db","in_db_mut","incoherent_inherent_impl_crates","infer","infer_query","inherent_impls_in_block","inherent_impls_in_crate","init","init","init","init","init","init","init","intern_anonymous_const","intern_block","intern_callable_def","intern_closure","intern_const","intern_enum","intern_extern_block","intern_function","intern_generator","intern_impl","intern_impl_trait_id","intern_lifetime_param_id","intern_macro2","intern_macro_call","intern_macro_rules","intern_proc_macro","intern_static","intern_struct","intern_trait","intern_trait_alias","intern_type_alias","intern_type_or_const_param_id","intern_union","into","into","into","into","into","into","into","items_locator","label","lang_item","layout_of_adt","layout_of_ty","library_roots","library_symbols","line_index","line_index","line_index","line_index","local_roots","lookup_intern_anonymous_const","lookup_intern_block","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_const","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_function","lookup_intern_generator","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_macro2","lookup_intern_macro_call","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait_alias","lookup_intern_type_alias","lookup_intern_type_or_const_param_id","lookup_intern_union","macro2_data","macro_arg","macro_arg_text","macro_def","macro_expand","macro_rules_data","maybe_changed_since","maybe_changed_since","mir_body","mir_body_for_closure","module_symbols","monomorphized_mir_body","monomorphized_mir_body_for_closure","new","new","new","normalize_projection","ops_database","ops_salsa_runtime","ops_salsa_runtime_mut","parse","parse_macro_expansion","parse_macro_expansion_error","parse_or_expand","parse_or_expand_with_err","partial_cmp","path_transform","per_query_memory_usage","proc_macro_data","proc_macros","program_clauses_for_chalk_env","query_storage","recursion_limit","relevant_crates","rename","request_cancellation","resolve_path","return_type_impl_traits","rust_doc","search","set_crate_graph","set_crate_graph_with_durability","set_expand_proc_attr_macros","set_expand_proc_attr_macros_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","set_proc_macros","set_proc_macros_with_durability","set_source_root","set_source_root_with_durability","snapshot","source_change","source_root","source_root_crates","static_data","struct_data","struct_data_with_diagnostics","struct_datum","symbol_index","syntax_helpers","target_data_layout","to_owned","to_owned","trait_alias_data","trait_data","trait_data_with_diagnostics","trait_datum","trait_environment","trait_environment_for_body","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_deps","trait_solve","trait_solve_query","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty_filter","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","union_data_with_diagnostics","upcast","upcast","upcast","update_lru_capacities","update_parse_query_lru_capacity","use_trivial_constructor","value_ty","variants_attrs","variants_attrs_source_map","write","write_u16","write_u32","write_u64","write_u8","write_usize","ActiveParameter","at_token","borrow","borrow_mut","callable_for_node","callable_for_token","deref","deref_mut","drop","fmt","from","generic_def_for_node","ident","init","into","pat","try_from","try_into","ty","type_id","All","Assist","AssistId","AssistKind","AssistResolveStrategy","Generate","GroupLabel","None","None","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Single","SingleResolve","assist_id","assist_kind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_str","group","id","init","init","init","init","init","init","into","into","into","into","into","into","label","name","should_resolve","source_change","target","to_owned","to_owned","to_owned","to_owned","trigger_signature_help","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Adt","Await","Bin","BuiltinAttr","BuiltinType","Const","ConstReference","Definition","Definition","Definition","DeriveHelper","Field","FieldShorthand","Function","GenericParam","IdentClass","Index","Label","Local","Macro","Module","NameClass","NameClass","NameRefClass","NameRefClass","Operator","OperatorClass","PatFieldShorthand","Prefix","SelfType","Static","ToolModule","Trait","TraitAlias","Try","TypeAlias","Variant","as_assoc_item","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_module_path","classify","classify","classify_await","classify_bin","classify_index","classify_lifetime","classify_lifetime","classify_lifetime","classify_node","classify_prefix","classify_token","classify_try","clone","clone_into","defined","definitions","definitions_no_ops","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","init","init","init","init","init","into","into","into","into","into","krate","module","name","range_for_rename","rename","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","usages","visibility","field_ref","local_def","field_ref","local_ref","FamousDefs","alloc","borrow","borrow_mut","builtin_crates","core","core_cmp_Ord","core_convert_AsRef","core_convert_From","core_convert_Into","core_default_Default","core_iter","core_iter_IntoIterator","core_iter_Iterator","core_macros_builtin_derive","core_marker_Copy","core_ops_ControlFlow","core_ops_Deref","core_ops_DerefMut","core_ops_Drop","core_option_Option","core_result_Result","deref","deref_mut","drop","from","init","into","proc_macro","std","test","try_from","try_into","type_id","lints","CLIPPY_LINTS","CLIPPY_LINT_GROUPS","DEFAULT_LINTS","DEFAULT_LINT_GROUPS","FEATURES","Lint","LintGroup","RUSTDOC_LINTS","RUSTDOC_LINT_GROUPS","borrow","borrow","borrow_mut","borrow_mut","children","clone","clone_into","deref","deref","deref_mut","deref_mut","description","drop","drop","from","from","init","init","into","into","label","lint","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","is_editable_crate","item_name","lint_eq_or_in_group","mod_path_to_ast","pick_best_token","pick_token","visit_file_defs","import_assets","insert_use","merge_imports","Exact","FirstSegmentUnresolved","Fuzzy","ImportAssets","ImportCandidate","LocatedImport","NameToImport","Path","PathImportCandidate","TraitAssocItem","TraitImportCandidate","TraitMethod","assoc_item_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exact_case_sensitive","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_exact_path","for_fuzzy_method_call","for_fuzzy_path","for_ident_pat","for_method_call","from","from","from","from","from","from","from","hash","import_candidate","import_path","init","init","init","init","init","init","init","into","into","into","into","into","into","into","item_for_path_search","item_to_import","name","new","original_item","original_path","path_fuzzy_name_to_exact","qualifier","receiver_ty","search_for_imports","search_for_relative_paths","text","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Block","ByCrate","BySelf","Crate","File","ImportGranularity","ImportScope","InsertUseConfig","Item","Module","Module","Plain","PrefixKind","Preserve","as_syntax_node","ast_to_remove_for_path_in_use_stmt","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_for_update","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enforce_granularity","eq","eq","eq","equivalent","equivalent","equivalent","find_insert_use_container","fmt","fmt","fmt","fmt","from","from","from","from","granularity","group","init","init","init","init","insert_use","into","into","into","into","prefix_kind","remove_path_if_in_use_stmt","skip_glob_imports","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Crate","MergeBehavior","Module","borrow","borrow_mut","clone","clone_into","common_prefix","deref","deref_mut","drop","eq","eq_attrs","eq_visibility","equivalent","fmt","from","init","into","to_owned","try_from","try_into","try_merge_imports","try_merge_trees","type_id","AssocItemSearch","AssocItemsOnly","DEFAULT_QUERY_SEARCH_LIMIT","Exclude","Include","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","items_with_name","to_owned","try_from","try_into","type_id","Label","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","eq","fmt","fmt","from","init","into","new","to_owned","to_string","try_from","try_into","type_id","PathTransform","apply","apply_all","borrow","borrow_mut","deref","deref_mut","drop","from","function_call","generic_transformation","init","into","trait_impl","try_from","try_into","type_id","Ident","IdentifierKind","Lifetime","RenameError","Result","Underscore","bail","borrow","borrow","borrow_mut","borrow_mut","classify","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fmt","format_err","from","from","init","init","into","into","source_edit_from_references","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","is_rust_fence","FileReference","FindUsages","Import","Read","ReferenceCategory","SearchScope","UsageSearchResult","Write","all","at_least_one","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","empty","eq","equivalent","file_range","file_ranges","files","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","in_scope","include_self_refs","init","init","init","init","init","intersection","into","into","into","into","into","into_iter","into_iter","is_empty","iter","len","name","range","references","set_scope","single_file","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","CreateFile","FileSystemEdit","MoveDir","MoveFile","SnippetBuilder","SourceChange","SourceChangeBuilder","TreeMutator","add_placeholder_snippet","add_tabstop_after","add_tabstop_before","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_file","default","default","delete","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","edit","edit_file","extend","extend","file_id","file_system_edits","finish","fmt","fmt","from","from","from","from","from","from","from","from_edits","from_iter","from_text_edit","get_source_edit","init","init","init","init","init","insert","insert_snippet","insert_source_edit","into","into","into","into","into","is_snippet","make_mut","make_mut","make_syntax_mut","make_syntax_mut","merge","move_file","mutated_tree","new","new","push_file_system_edit","replace","replace_ast","replace_snippet","snippet_builder","source_change","source_file_edits","to_owned","to_owned","trigger_signature_help","trigger_signature_help","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","dst","dst","dst","initial_contents","src","src","src_id","LibraryRootsQuery","LibrarySymbolsQuery","LocalRootsQuery","ModuleSymbolsQuery","Query","SymbolIndex","SymbolsDatabase","SymbolsDatabaseGroupStorage__","SymbolsDatabaseStorage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","crate_symbols","crate_symbols","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exact","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","for_each_query","from","from","from","from","from","from","from","from","hash","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","len","library_roots","library_roots","library_symbols","library_symbols","libs","limit","local_roots","local_roots","maybe_changed_since","memory_size","module_symbols","module_symbols","new","new","only_types","query_storage","query_storage","query_storage","query_storage","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","world_symbols","LexedStr","as_str","borrow","borrow_mut","deref","deref_mut","drop","error","errors","format_string","format_string_exprs","from","init","insert_whitespace_into_node","intersperse_trivia","into","is_empty","kind","len","new","node_ext","range_text","single_token","text","text_len","text_range","text_start","to_input","try_from","try_into","type_id","Align","Asterisk","Close","Colon","DollarSign","Dot","Escape","Fill","FormatSpecifier","Identifier","Integer","NumberSign","Open","QuestionMark","Sign","Zero","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","is_format_string","lex_format_specifiers","try_from","try_into","type_id","Arg","Expr","Ident","Placeholder","borrow","borrow_mut","deref","deref_mut","drop","eq","equivalent","fmt","from","init","into","parse_format_exprs","try_from","try_into","type_id","with_placeholders","insert_ws_into","block_as_lone_tail","expr_as_name_ref","for_each_break_and_continue_expr","for_each_tail_expr","full_path_of_name_ref","is_pattern_cond","macro_call_for_string_token","parse_tt_as_comma_sep_paths","preorder_expr","single_let","vis_eq","walk_expr","walk_pat","walk_patterns_in_expr","walk_ty","get_missing_assoc_items","resolve_target_trait","Option","Result","TryEnum","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ty","happy_case","happy_pattern","happy_pattern_wildcard","init","into","sad_pattern","to_owned","try_from","try_into","type_id","use_trivial_constructor"],"q":[[0,"ide_db"],[380,"ide_db::active_parameter"],[400,"ide_db::assists"],[516,"ide_db::defs"],[662,"ide_db::defs::NameClass"],[664,"ide_db::defs::NameRefClass"],[666,"ide_db::famous_defs"],[700,"ide_db::generated"],[701,"ide_db::generated::lints"],[739,"ide_db::helpers"],[746,"ide_db::imports"],[749,"ide_db::imports::import_assets"],[875,"ide_db::imports::insert_use"],[966,"ide_db::imports::merge_imports"],[991,"ide_db::items_locator"],[1012,"ide_db::label"],[1033,"ide_db::path_transform"],[1050,"ide_db::rename"],[1090,"ide_db::rust_doc"],[1091,"ide_db::search"],[1197,"ide_db::source_change"],[1310,"ide_db::source_change::FileSystemEdit"],[1317,"ide_db::symbol_index"],[1469,"ide_db::syntax_helpers"],[1500,"ide_db::syntax_helpers::format_string"],[1530,"ide_db::syntax_helpers::format_string_exprs"],[1550,"ide_db::syntax_helpers::insert_whitespace_into_node"],[1551,"ide_db::syntax_helpers::node_ext"],[1566,"ide_db::traits"],[1568,"ide_db::ty_filter"],[1590,"ide_db::use_trivial_constructor"]],"d":["","","","","","","","","","Type alias for a hashmap using the <code>fx</code> hash algorithm.","Type alias for a hashmap using the <code>fx</code> hash algorithm.","A speedy hash algorithm for use within rustc. The hashmap …","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","This module provides functionality for querying callable …","","","This module defines the <code>Assist</code> data structure. The actual …","","","","","","<code>base_db</code> is normally also needed in places where <code>ide_db</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>NameDefinition</code> keeps information about the element we want …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>FamousDefs</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Random assortment of ide helpers for high-level ide …","","","","","","","","","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This module has the functionality to search the project …","See <code>Label</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PathTransform</code>.","","","","","","","","Rename infrastructure for rust-analyzer. It is used …","","","","Rustdoc specific doc comment handling","Implementation of find-usages functionality.","","","","","","","","","","","","","","","","","","This modules defines type to represent changes to the …","","","","","","","This module handles fuzzy-searching of functions, structs …","","","","","","","","","","","","","","","","Functionality for obtaining data related to traits from …","","","","","","","","","","","","","","","","This module contains structures for filtering the expected …","","","","","","","","","","","","","","","","Functionality for generating trivial constructors","","","","","","","","","","","Returns information about the call argument this token is …","","","","Returns a <code>hir::Callable</code> this token is a part of and its …","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","All assists should be resolved.","","Unique identifier of the assist, should not be shown to …","","A way to control how many assist to resolve during the …","","","","No assists should be resolved.","","","","","","Only a certain assist should be resolved.","Hold the <code>AssistId</code> data of a certain assist to resolve. The …","The id of the assist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Short description of the assist, as shown in the UI.","","","Computing source change sometimes is much more costly then …","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>None</code> in <code>if let None = Some(82) {}</code>. Syntactically, it is a …","","","","","","","","","","","","","","","On a first blush, a single <code>ast::Name</code> defines a single …","","This is similar to <code>NameClass</code>, but works for <code>ast::NameRef</code> …","","","","<code>field</code> in <code>if let Foo { field } = foo</code>. Here, <code>ast::Name</code> both …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Definition</code> defined by this name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Textual range of the identifier which will change when …","","","","","","","","","","","","","","","","","","","","","","","","Helps with finding well-know things inside the standard …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Generated by <code>sourcegen_lints</code>, do not edit by hand.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Checks if the given lint is equal or is contained by the …","Converts the mod path struct into its ast representation.","Picks the token with the highest rank returned by the …","","Iterates all <code>ModuleDef</code>s and <code>Impl</code> blocks of the given file.","Look up accessible paths for items.","Handle syntactic aspects of inserting a new <code>use</code> item.","Handle syntactic aspects of merging UseTrees.","Requires items with names that exactly match the given …","A qualifier that has a first segment and it’s unresolved.","Requires items with names that case-insensitively contain …","A struct to find imports in the project, given a certain …","A candidate for import, derived during various IDE …","An import (not necessary the only one) that corresponds a …","A name that will be used during item lookups.","A path, qualified (<code>std::collections::HashMap</code>) or not (…","Path import for a given name, qualified or not.","A trait associated function (with no self parameter) or an …","A trait import needed for a given associated item access. …","A trait method with self parameter. For ‘…","The associated item name that the trait to import should …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The path to use in the <code>use</code> statement for a given candidate …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An item that will be imported with the import path given.","The name the item (struct, trait, enum, etc.) should have.","","The path import candidate, resolved.","A path of the original item.","","Optional qualifier before name.","A type of the item that has the associated item accessed …","","This may return non-absolute paths if a part of the …","","","","","","","","","","","","","","","","","","","","","","","","","","Causes paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>…","Merge imports from the same crate into a single use …","","How imports should be grouped into use statements.","","","Flatten imports so that each has its own use statement.","Merge imports from the same module into a single use …","","Causes paths to ignore imports in the local module.","","Do not change the granularity of any imports and preserve …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines the containing syntax node in which to insert a …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Insert an import path into the given file/node. A <code>merge</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Merge imports from the same crate into a single use …","What type of merges are allowed.","Merge imports from the same module into a single use …","","","","","Traverses both paths until they differ, returning the …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Merge <code>rhs</code> into <code>lhs</code> keeping both intact. Returned AST is …","Merge <code>rhs</code> into <code>lhs</code> keeping both intact. Returned AST is …","","Three possible ways to search for the name in associated …","Search for the name in the associated items only.","A value to use, when uncertain which limit to pick.","Search for the name in other items only.","Search for the name in both associated and other items.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Searches for importable items with the given name in the …","","","","","A type to specify UI label, like an entry in the list of …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","<code>PathTransform</code> substitutes path in SyntaxNodes in bulk.","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Generally, <code>search_scope</code> returns files that might contain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build an empty search scope.","","","Build a empty search scope spanning the text range of the …","","Build a empty search scope spanning the given files.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Limit the search to a given <code>SearchScope</code>.","Enable searching for <code>Self</code> when the definition is a type or …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The node of the reference in the (macro-)file","The range of the reference in the original file","","Limit the search to a given <code>SearchScope</code>.","Build a empty search scope spanning the given file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a snippet to move the cursor selected over <code>node</code>","Adds a tabstop snippet to place the cursor after <code>node</code>","Adds a tabstop snippet to place the cursor before <code>node</code>","","","","","","","","","","","","","","","","","","Remove specified <code>range</code> of text.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new SourceChange with the given label from the …","","","","","","","","","Append specified <code>text</code> at the given <code>offset</code>","Append specified <code>snippet</code> at the given <code>offset</code>","Inserts a <code>TextEdit</code> for the given <code>FileId</code>. This properly …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a copy of the <code>node</code>, suitable for mutation.","","","","Maps the original, immutable <code>SyntaxNode</code> to a …","","","","Replaces specified <code>range</code> of text with a given string.","","Replaces specified <code>range</code> of text with a given <code>snippet</code>.","Keeps track of where to place snippets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","The symbol indices of modules that make up a given crate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The set of roots for crates.io libraries. Files in …","","The symbol index for a given source root within …","","","","The set of “local” (that is, from the current …","","","","The symbol index for a given module. These modules should …","","","","","","","","","Set the value of the <code>library_roots</code> input.","Set the value of the <code>library_roots</code> input and promise that …","Set the value of the <code>local_roots</code> input.","Set the value of the <code>local_roots</code> input and promise that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tools to work with format string literals for the …","Tools to work with expressions present in format string …","Returns the argument unchanged.","","Utilities for formatting macro expanded nodes until we get …","NB: only valid to call with Output from …","Calls <code>U::from(self)</code>.","","","","","Various helper functions to work with SyntaxNodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Enum for representing extracted format string args. Can …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Parser for a format-like string. It is more allowing in …","","","","Add placeholders like <code>$1</code> and <code>$2</code> in place of …","Renders a <code>SyntaxNode</code> with whitespace inserted between …","","","","Calls <code>cb</code> on each expression inside <code>expr</code> that is at “tail …","","","","Parses the input token tree as comma separated plain paths.","Preorder walk all the expression’s child expressions …","Returns the <code>let</code> only if there is exactly one (that is, …","","Preorder walk all the expression’s child expressions.","Preorder walk all the pattern’s sub patterns.","Preorder walk all the expression’s child patterns.","Preorder walk all the type’s sub types.","Given the <code>impl</code> block, returns the list of associated items …","Given the <code>impl</code> block, attempts to find the trait this <code>impl</code> …","","","Enum types that implement <code>std::ops::Try</code> trait.","","","","","","","","Returns the argument unchanged.","Returns <code>Some(..)</code> if the provided type is an enum that …","","","","","Calls <code>U::from(self)</code>.","","","","","","given a type return the trivial constructor (if one exists)"],"i":[28,28,28,28,28,28,28,28,28,0,0,0,0,0,28,28,28,0,0,0,0,28,28,28,0,28,28,0,28,28,0,28,28,28,28,28,28,28,28,0,0,0,4,4,0,4,4,4,4,4,0,4,4,4,50,4,337,76,51,28,29,50,4,337,76,51,28,29,4,4,28,29,28,29,28,4,4,4,4,4,4,4,4,4,4,4,4,4,50,4,51,0,50,4,337,76,51,28,29,50,4,337,76,51,28,29,50,4,4,337,76,51,28,29,4,4,4,28,29,28,29,51,4,4,4,0,4,4,4,4,4,4,4,4,50,4,51,28,29,4,76,4,4,4,76,50,4,337,76,51,28,28,28,29,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,28,0,4,4,4,4,4,4,4,0,51,51,4,4,4,4,4,50,4,337,76,51,28,29,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,50,4,337,76,51,28,29,0,0,4,4,4,4,4,0,77,4,76,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,76,4,4,4,4,4,4,76,29,4,4,4,4,4,4,4,4,4,28,0,4,4,4,4,51,4,4,0,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,0,0,4,28,29,4,4,4,4,4,4,4,4,4,4,4,0,50,4,337,76,51,28,29,50,4,337,76,51,28,29,4,0,4,50,4,337,76,51,28,29,4,4,4,4,4,4,4,0,4,4,4,50,50,50,50,50,50,0,212,212,212,0,0,212,212,212,212,212,0,212,212,212,212,212,212,212,212,220,0,0,0,0,217,0,217,220,217,217,217,217,217,220,0,221,221,216,217,218,220,221,219,216,217,218,220,221,219,216,217,218,219,216,217,218,219,217,216,217,218,220,221,219,216,217,218,220,221,219,216,217,218,220,221,219,217,218,217,218,216,217,218,220,221,219,216,217,218,220,221,219,217,216,216,216,217,218,220,221,219,216,217,218,220,221,219,216,217,220,216,216,216,217,218,219,216,216,217,218,220,221,219,216,217,218,220,221,219,216,217,218,220,221,219,222,229,229,222,222,222,225,0,225,227,222,222,227,222,222,0,229,222,222,222,222,0,233,0,233,233,0,225,229,222,222,222,222,222,229,222,222,222,222,233,225,229,227,222,233,225,229,227,222,225,227,229,229,229,233,225,227,233,229,233,229,222,222,225,233,233,222,233,225,229,227,222,233,225,229,227,222,233,225,229,227,222,222,222,233,225,229,227,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,233,225,229,227,222,222,233,225,229,227,222,233,225,229,227,222,222,222,222,222,222,222,233,225,229,227,222,233,225,229,227,222,233,225,229,227,222,222,338,338,339,339,0,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,0,0,0,0,0,0,0,0,0,0,340,261,340,261,340,261,261,340,261,340,261,261,340,261,340,261,340,261,340,261,261,340,261,340,261,340,261,340,261,0,0,0,0,0,0,0,0,0,0,268,0,268,0,0,0,0,270,0,270,0,270,271,270,271,272,273,268,274,269,270,271,272,273,268,274,269,268,269,268,269,270,271,272,273,268,274,269,270,271,272,273,268,274,269,270,271,272,273,268,274,269,269,269,268,270,271,272,273,268,274,269,274,274,274,274,274,270,271,272,273,268,274,269,269,274,269,270,271,272,273,268,274,269,270,271,272,273,268,274,269,0,269,272,269,269,269,274,272,271,274,274,268,268,269,270,271,272,273,268,274,269,270,271,272,273,268,274,269,270,271,272,273,268,274,269,279,278,278,281,279,0,0,0,281,281,279,278,0,281,279,0,281,282,279,278,281,282,279,278,281,282,279,278,279,281,282,279,278,281,282,279,278,281,282,279,278,281,282,279,278,282,281,282,278,281,282,278,279,281,282,279,278,281,282,279,278,282,282,281,282,279,278,0,281,282,279,278,282,0,282,281,282,279,278,281,282,279,278,281,282,279,278,281,282,279,278,284,0,284,284,284,284,284,0,284,284,284,284,0,0,284,284,284,284,284,284,284,284,0,0,284,0,288,0,288,288,288,288,288,288,288,288,288,288,288,288,288,0,288,288,288,288,0,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,0,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,294,0,294,0,0,294,0,295,294,295,294,294,294,294,295,294,295,294,295,294,294,295,295,294,0,295,294,295,294,295,294,0,294,295,295,294,295,294,295,294,0,0,0,299,299,0,0,0,299,258,258,297,298,299,300,258,297,298,299,300,258,298,297,298,299,300,258,297,298,299,300,258,297,297,298,299,300,258,297,298,299,300,258,297,298,299,300,258,300,299,299,300,297,300,297,298,299,300,297,298,299,300,258,299,258,258,297,298,299,300,258,300,297,298,299,300,258,297,300,297,297,297,298,298,297,258,300,297,298,299,300,258,297,298,299,300,258,297,298,299,300,258,297,298,299,300,258,303,0,303,303,0,0,0,0,301,301,301,301,310,256,306,303,301,310,256,306,303,256,303,256,303,301,256,306,301,301,310,256,306,303,301,310,256,306,303,301,310,256,306,303,301,301,256,256,301,256,301,256,303,301,310,256,256,256,306,303,256,256,256,256,301,310,256,306,303,301,301,256,301,310,256,306,303,256,301,310,301,310,256,301,301,301,310,256,301,301,301,301,301,256,256,303,301,301,301,310,256,306,303,301,310,256,306,303,301,310,256,306,303,341,342,343,341,342,343,343,0,0,0,0,0,0,0,0,0,311,344,317,313,314,315,316,150,311,344,317,313,314,315,316,150,311,0,312,313,314,315,316,150,311,344,317,313,314,315,316,150,311,344,317,313,314,315,316,150,311,344,317,313,314,315,316,150,150,150,311,313,314,311,313,314,315,316,150,317,317,311,344,317,313,314,315,316,150,150,313,314,315,316,313,314,315,316,311,344,317,313,314,315,316,150,311,344,317,313,314,315,316,150,150,312,317,312,317,311,311,312,317,317,150,312,317,311,317,311,313,314,315,316,312,312,312,312,311,344,317,313,314,315,316,150,311,344,317,313,314,315,316,150,311,344,317,313,314,315,316,150,0,0,319,319,319,319,319,319,319,319,0,0,319,319,0,319,319,319,319,319,319,0,319,319,319,319,319,319,319,319,319,319,324,324,324,324,324,324,324,324,0,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,0,0,324,324,324,0,326,326,326,326,326,326,326,326,326,326,326,326,326,326,0,326,326,326,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,336,336,0,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[3,[1]]]],[[4,5]],0,[[[6,[1]]],[[8,[[7,[1]]]]]],[[[10,[9]],[11,[1]]],[[8,[[12,[1]]]]]],[13,[[15,[14]]]],[16,17],[16,18],0,[19,[[15,[20]]]],[21,[[15,[22]]]],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[24,[15,23]]]],[25,[[27,[26]]]],[28,28],[29,29],[[]],[[]],[[28,28],30],[31,[[15,[32]]]],[[33,[34,[1]]],[[24,[[35,[1]],36]]]],[37,[[24,[38,36]]]],[39,[[24,[[35,[1]],36]]]],[40,[[41,[1]]]],[31,42],[[[10,[9]]],[[15,[20]]]],[[[10,[9]]],[[15,[20]]]],[[],[[15,[43]]]],[[[10,[9]]],[[15,[44]]]],[[[10,[9]]],45],[[[10,[9]]],46],[47,[[49,[48]]]],[[],50],[[],4],[[],51],0,[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[4],[52],[52],[52],[52],[52],[52],[4],[53,[[15,[54]]]],[53],[[28,28],46],[[29,29],46],[[],46],[[],46],[[]],[[],46],[55,[[59,[[57,[56]],58]]]],[21,[[15,[60]]]],0,[61,[[15,[[63,[[10,[62]],[27,[[41,[1]]]]]]]]]],[61,[[15,[[63,[[10,[62]],42]]]]]],[61,[[15,[[63,[[10,[62]],17]]]]]],[61,[[15,[[63,[[10,[62]],[67,[[65,[64]],[65,[66]]]]]]]]]],[13,[[15,[68]]]],[69,70],[69,[[15,[71]]]],[[4,69],[[15,[71]]]],[50,72],[[4,73],74],[[51,73],74],[[28,73],74],[[29,73],74],[[4,75,73],74],[[76,77,75,73],74],[[[10,[9]],[78,[1]]],[[8,[[79,[1]]]]]],[[[78,[1]]],[[3,[1]]]],[[4,80]],[[76,81,80]],[[]],[[]],[[]],[[]],[[]],[82,28],[83,28],[[]],[[]],[84,[[15,[85]]]],[84,42],0,[86,15],[86,[[88,[87]]]],[86,15],[[86,89,[91,[90]]],15],[4],[4],[4],[4],[4],[4],[4],[4],[[28,92]],0,[13,[[15,[93]]]],[94,[[15,[95]]]],[94],[[[10,[9]],[96,[1]]],[[8,[[97,[1]]]]]],[94,[[27,[[41,[1]]]]]],[94,[[91,[[27,[[98,[1]]]]]]]],[[[10,[9]]],[[15,[99]]]],0,[[51,77],[[100,[51]]]],[[51,77],[[101,[51]]]],[[[10,[9]],102],103],[21,[[15,[104]]]],[21,[[15,[104]]]],[19,[[15,[105]]]],[[[10,[9]]],[[15,[105]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],106],[107,19],[25,108],[[],109],[[[111,[110]]],31],[[[113,[112]]],53],[[[113,[114]]],115],[[[111,[116]]],84],[[],117],[[[113,[118]]],94],[119,120],[121,122],[123,124],[125,55],[126,127],[128,129],[[[111,[130]]],39],[[[113,[131]]],132],[[[113,[133]]],134],[[[113,[135]]],136],[[[111,[137]]],138],[89,139],[[[113,[140]]],141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[10,[9]],142],[[91,[143]]]],[[144,[34,[1]],[10,[9]]],[[24,[[15,[[146,[145]]]],147]]]],[[[41,[1]],[10,[9]]],[[24,[[15,[[146,[145]]]],147]]]],[[],[[15,[[149,[70,[148,[50]]]]]]]],[70,[[15,[150]]]],0,[69,[[15,[151]]]],[69,[[15,[151]]]],0,[[],[[15,[[149,[70,[148,[50]]]]]]]],[106],[19,107],[108,25],[109],[31,[[111,[110]]]],[53,[[113,[112]]]],[115,[[113,[114]]]],[84,[[111,[116]]]],[117],[94,[[113,[118]]]],[120,119],[122,121],[124,123],[55,125],[127,126],[129,128],[39,[[111,[130]]]],[132,[[113,[131]]]],[134,[[113,[133]]]],[136,[[113,[135]]]],[138,[[111,[137]]]],[139,89],[141,[[113,[140]]]],[124,[[15,[152]]]],[55,[[91,[15]]]],[55,[[91,[153]]]],[154,[[24,[[15,[155]],156]]]],[55,[[59,[[15,[[57,[56]]]],58]]]],[127,[[15,[157]]]],[[4,75,158],46],[[76,77,75,158],46],[21,[[24,[[15,[159]],23]]]],[[[160,[1]]],[[24,[[15,[159]],23]]]],[161,[[15,[150]]]],[[21,[34,[1]],[15,[162]]],[[24,[[15,[159]],23]]]],[[[160,[1]],[34,[1]],[15,[162]]],[[24,[[15,[159]],23]]]],[[[91,[52]]],4],[163,76],[46,[[91,[29]]]],[[[164,[1]],[15,[162]]],[[41,[1]]]],[4,165],[4,81],[4,81],[69,[[167,[166]]]],[168,[[59,[58]]]],[55,[[59,[[49,[48]],58]]]],[13,[[170,[169]]]],[13,[[59,[[167,[[170,[169]]]],58]]]],[[28,28],[[91,[30]]]],0,[4,171],[129,[[15,[172]]]],[[],[[15,[[175,[[10,[9]],[24,[[171,[173,48]],174]],[148,[50]]]]]]]],[[[10,[9]],[91,[19]],[176,[1]]],[[177,[1]]]],[[],8],[[[10,[9]]],178],[[4,69],[[15,[[180,[179]]]]]],0,[4],[[4,181],[[91,[69]]]],[84,[[91,[[15,[[27,[182]]]]]]]],0,0,[[[15,[43]]]],[[[15,[43]],183]],[46],[[46,183]],[[69,70]],[[69,70,183]],[[69,[15,[71]]]],[[69,[15,[71]],183]],[[[15,[[149,[70,[148,[50]]]]]]]],[[[15,[[149,[70,[148,[50]]]]]],183]],[[[15,[[149,[70,[148,[50]]]]]]]],[[[15,[[149,[70,[148,[50]]]]]],183]],[[[15,[[175,[[10,[9]],[24,[[171,[173,48]],174]],[148,[50]]]]]]]],[[[15,[[175,[[10,[9]],[24,[[171,[173,48]],174]],[148,[50]]]]]],183]],[[70,[15,[184]]]],[[70,[15,[184]],183]],[4,[[185,[4]]]],0,[70,[[15,[184]]]],[70,[[15,[[149,[[10,[9]],[148,[50]]]]]]]],[39,[[15,[186]]]],[132,[[15,[187]]]],[132],[[[10,[9]],[2,[1]]],[[8,[[188,[1]]]]]],0,0,[[[10,[9]]],[[91,[[15,[189]]]]]],[[]],[[]],[136,[[15,[190]]]],[134,[[15,[191]]]],[134],[[[10,[9]],[192,[1]]],[[8,[[193,[1]]]]]],[86,[[15,[162]]]],[21,[[15,[162]]]],[19,[[15,[194]]]],[[[10,[9]]],[[15,[194]]]],[[[10,[9]]],15],[[[10,[9]],[91,[19]],[197,[[196,[[195,[1]]]]]]],[[91,[[198,[1]]]]]],[[[10,[9]],[91,[19]],[197,[[196,[[195,[1]]]]]]],[[91,[[198,[1]]]]]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[199,[[27,[[41,[1]]]]]],0,[138,[[15,[200]]]],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],[141,[[15,[187]]]],[141],[4,202],[4,203],[4,204],[[4,[205,[[49,[71]],52]]]],[[4,[91,[52]]]],0,[206,[[27,[[41,[1]]]]]],[53,[[15,[[63,[[10,[207]],17]]]]]],[53,[[15,[[63,[[10,[207]],[65,[208]]]]]]]],[50],[[50,163]],[[50,178]],[[50,72]],[[50,209]],[[50,52]],0,[[[210,[4]],211],[[91,[212]]]],[[]],[[]],[[[210,[4]],213,211],91],[[[210,[4]],211],91],[52],[52],[52],[[212,73],74],[[]],[[[210,[4]],214,211],91],[212,[[91,[215]]]],[[],52],[[]],0,[[],24],[[],24],0,[[],201],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[216,216],[217,217],[218,218],[219,219],[[]],[[]],[[]],[[]],[[217,217],46],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[[217,217],46],[[218,218],46],[[],46],[[],46],[[216,73],74],[[217,73],74],[[218,73],74],[[220,73],74],[[221,73],74],[[219,73],74],[[]],[[]],[[]],[[]],[[]],[[]],[71,[[24,[217]]]],0,0,[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],0,[217,71],[[220,218],46],0,0,[[]],[[]],[[]],[[]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[222,204],[[91,[223]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[222,4],[[91,[224]]]],[[[210,[4]],215],[[91,[225]]]],[[[210,[4]],226],[[91,[227]]]],[[[210,[4]],228],[[91,[229]]]],[[[210,[4]],230],[[91,[229]]]],[[[210,[4]],231],[[91,[229]]]],[[[210,[4]],232],[[91,[233]]]],[[[210,[4]],232],[[91,[225]]]],[[[210,[4]],232],[[91,[227]]]],[[[210,[4]],234],[[91,[233]]]],[[[210,[4]],235],[[91,[229]]]],[[[210,[4]],211],[[91,[233]]]],[[[210,[4]],236],[[91,[229]]]],[222,222],[[]],[225,[[91,[222]]]],[233,[[237,[222]]]],[233,[[237,[222]]]],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[[222,222],46],[[],46],[[222,73],74],[[233,73],74],[[225,73],74],[[229,73],74],[[227,73],74],[238,222],[239,222],[223,222],[240,222],[241,222],[242,222],[243,222],[161,222],[244,222],[245,222],[246,222],[247,222],[248,222],[249,222],[250,222],[251,222],[[]],[252,222],[253,222],[254,222],[[]],[[]],[[]],[[]],[[222,92]],[[],52],[[],52],[[],52],[[],52],[[],52],[[]],[[]],[[]],[[]],[[]],[[222,4],[[91,[47]]]],[[222,4],[[91,[161]]]],[[222,4],[[91,[90]]]],[[222,[210,[4]]],[[91,[255]]]],[[222,[210,[4]],71],[[257,[256]]]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[],201],[[],201],[[],201],[[222,[210,[4]]],258],[[222,4],[[91,[42]]]],0,0,0,0,0,[259,[[91,[47]]]],[[]],[[]],[259,224],[259,[[91,[47]]]],[259,[[91,[245]]]],[259,[[91,[245]]]],[259,[[91,[245]]]],[259,[[91,[245]]]],[259,[[91,[245]]]],[259,[[91,[161]]]],[259,[[91,[245]]]],[259,[[91,[245]]]],[259,[[91,[240]]]],[259,[[91,[245]]]],[259,[[91,[260]]]],[259,[[91,[245]]]],[259,[[91,[245]]]],[259,[[91,[245]]]],[259,[[91,[260]]]],[259,[[91,[260]]]],[52],[52],[52],[[]],[[],52],[[]],[259,[[91,[47]]]],[259,[[91,[47]]]],[259,[[91,[47]]]],[[],24],[[],24],[[],201],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[261,261],[[]],[52],[52],[52],[52],0,[52],[52],[[]],[[]],[[],52],[[],52],[[]],[[]],0,0,[[]],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[47,4],46],[[4,262],[[91,[90]]]],[[71,71],46],[263,264],[[[265,[211]],266],[[91,[211]]]],[[[265,[211]]],[[91,[267]]]],[[[210,[4]],69,80]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[268,268],[269,269],[[]],[[]],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[[269,269],46],[[],46],[174,268],[[270,73],74],[[271,73],74],[[272,73],74],[[273,73],74],[[268,73],74],[[274,73],74],[[269,73],74],[[264,[210,[4]]],[[91,[274]]]],[[161,275,174,234],[[91,[274]]]],[[161,[91,[264]],174,[210,[4]],234],[[91,[274]]]],[[[210,[4]],276],[[91,[274]]]],[[277,[210,[4]]],[[91,[274]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[269,92]],[274,270],0,[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,262],[[91,[262]]]],0,0,[[263,262,262,[91,[263]]],269],0,0,[[274,46]],0,0,[[274,[210,[4]],278,46],[[171,[269]]]],[[274,[210,[4]],46],[[171,[269]]]],[268,71],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[279,234],[264,[[91,[[49,[280]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[281,281],[282,282],[279,279],[278,278],[279,279],[[]],[[]],[[]],[[]],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],0,[[281,281],46],[[282,282],46],[[278,278],46],[[],46],[[],46],[[],46],[[234,[210,[4]]],[[91,[279]]]],[[281,73],74],[[282,73],74],[[279,73],74],[[278,73],[[24,[283]]]],[[]],[[]],[[]],[[]],0,0,[[],52],[[],52],[[],52],[[],52],[[279,264,282]],[[]],[[]],[[]],[[]],0,[264],0,[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[],201],[[],201],0,0,0,[[]],[[]],[284,284],[[]],[[264,264],91],[52],[52],[52],[[284,284],46],[[224,224],46],[[[91,[285]],[91,[285]]],46],[[],46],[[284,73],74],[[]],[[],52],[[]],[[]],[[],24],[[],24],[[286,286,284],[[91,[286]]]],[[287,287,284],[[91,[287]]]],[[],201],0,0,0,0,0,[[]],[[]],[288,288],[[]],[52],[52],[52],[[288,73],74],[[]],[[],52],[[]],[[[210,[4]],47,268,288,[91,[52]]],224],[[]],[[],24],[[],24],[[],201],0,[[]],[[]],[289,289],[[]],[52],[52],[52],[[289,71],46],[[289,71],46],[[289,73],74],[[289,73],74],[[]],[[],52],[[]],[174,289],[[]],[[],174],[[],24],[[],24],[[],201],0,[[290,234]],[[290,291]],[[]],[[]],[52],[52],[52],[[]],[[292,292,252,214],290],[[292,292],290],[[],52],[[]],[[292,292,245,293],290],[[],24],[[],24],[[],201],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[71,[[257,[294]]]],[294,294],[[]],[52],[52],[52],[52],[52],[52],[[294,294],46],[[295,73],74],[[295,73],74],[[294,73],74],0,[[]],[[]],[[],52],[[],52],[[]],[[]],[[222,71],296],[[]],[[],174],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[71,46],0,0,0,0,0,0,0,0,[258,297],[258,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[297,297],[298,298],[299,299],[300,300],[258,258],[[]],[[]],[[]],[[]],[[]],[[],297],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[[],300],[[299,299],46],[[],46],[255,300],[297,224],[[],300],[[297,73],74],[[298,73],74],[[299,73],74],[[300,73],74],[[]],[[]],[[]],[[]],[[]],[[299,92]],[[258,300],258],[258,258],[[],52],[[],52],[[],52],[[],52],[[],52],[[300,300],300],[[]],[[]],[[]],[[]],[[]],[297],[300],[297,46],[297,224],[297,52],0,0,0,[[258,[91,[300]]],258],[69,300],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[],201],[[],201],[[],201],0,0,0,0,0,0,0,0,[[301,29,302]],[[301,29,302]],[[301,29,302]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[256,256],[303,303],[[]],[[]],[[301,304,[305,[174]]]],[[],256],[[],306],[[301,307]],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],0,[[301,69]],[[256,291]],[[256,291]],0,0,[301,256],[[256,73],74],[[303,73],74],[[]],[[]],[[[308,[69,296]]],256],[[]],[303,256],[[]],[[]],[[[308,[69,296]],[171,[303]]],256],[291,256],[[69,296],256],[[256,69],[[91,[296]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[301,309,[305,[174]]]],[[301,29,309,[305,[174]]]],[[256,69,296]],[[]],[[]],[[]],[[]],[[]],0,[[301,302],302],[[310,302],302],[[301,234],234],[[310,234],234],[[256,256],256],[[301,69,304]],0,[69,301],[234,310],[[256,303]],[[301,307,[305,[174]]]],[[301,302,302]],[[301,29,307,[305,[174]]]],0,0,0,[[]],[[]],[301],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[],201],[[],201],[[],201],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[311],[[312,47],49],[47,49],[[],313],[[],314],[[],315],[[],316],[[],150],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[52],[[150,150],46],[[],46],[311],[[]],[[]],[[311,73],74],[[313,73],74],[[314,73],74],[[315,73],74],[[316,73],74],[[150,73],74],[[317,312,75,73],74],[[317,81,80]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[150,92]],[[313,312],[[100,[313]]]],[[314,312],[[100,[314]]]],[[315,312],[[100,[315]]]],[[316,312],[[100,[316]]]],[[313,312],[[101,[313]]]],[[314,312],[[101,[314]]]],[[315,312],[[101,[315]]]],[[316,312],[[101,[316]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,52],[[],[[15,[[180,[70]]]]]],0,[70,[[15,[150]]]],0,[311],[[311,52]],[[],[[15,[[180,[70]]]]]],0,[[317,312,75,158],46],[150,52],[161,[[15,[150]]]],0,[174,311],[163,317],[311],[[],8],[[],8],[[],8],[[],8],[[[15,[[180,[70]]]]]],[[[15,[[180,[70]]]],183]],[[[15,[[180,[70]]]]]],[[[15,[[180,[70]]]],183]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],[[],201],[[4,311],[[171,[318]]]],0,[319,71],[[]],[[]],[52],[52],[52],[[319,52],[[91,[71]]]],[319,224],0,0,[[]],[[],52],0,[[319,320,80],46],[[]],[319,46],[[319,52],321],[319,52],[71,319],0,[[319,[322,[52]]],71],[71,91],[[319,52],71],[[319,52],52],[[319,52],[[322,[52]]]],[[319,52],52],[319,323],[[],24],[[],24],[[],201],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[52],[52],[52],[[324,73],74],[[]],[[],52],[[]],[325,46],[[325,80]],[[],24],[[],24],[[],201],0,0,0,0,[[]],[[]],[52],[52],[52],[[326,326],46],[[],46],[[326,73],74],[[]],[[],52],[[]],[71,24],[[],24],[[],24],[[],201],[[[171,[326]]],[[171,[174]]]],[234,234],[327,[[91,[328]]]],[328,[[91,[226]]]],[[[91,[329]],[91,[330]],80]],[[328,80]],[226,[[91,[264]]]],[328,46],[325,[[91,[331]]]],[332,[[91,[[171,[264]]]]]],[[328,80]],[328,[[91,[333]]]],[[285,285],46],[[328,80]],[[334,80]],[[328,80]],[[335,80]],[[[210,[4]],293],[[171,[223]]]],[[[210,[4]],293],[[91,[245]]]],0,0,0,[[]],[[]],[336,336],[[]],[52],[52],[52],[[]],[[[210,[4]],275],[[91,[336]]]],[336,71],[[336,334],334],[336,334],[[],52],[[]],[336,334],[[]],[[],24],[[],24],[[],201],[[4,264,275],[[91,[328]]]]],"c":[],"p":[[3,"Interner"],[3,"AdtId"],[3,"Variances"],[3,"RootDatabase"],[3,"Change"],[3,"AssocTypeId"],[3,"AssociatedTyDatum"],[3,"Arc"],[3,"CrateData"],[3,"Idx"],[3,"AssociatedTyValueId"],[3,"AssociatedTyValue"],[3,"HirFileId"],[3,"AstIdMap"],[3,"Arc"],[4,"AttrDefId"],[3,"Attrs"],[3,"AttrsWithOwner"],[3,"BlockId"],[3,"DefMap"],[4,"DefWithBodyId"],[3,"Body"],[4,"MirLowerError"],[4,"Result"],[4,"CallableDefId"],[3,"CallableSig"],[3,"Binders"],[4,"SymbolKind"],[3,"SnippetCap"],[4,"Ordering"],[3,"ConstId"],[3,"ConstData"],[4,"GeneralConstId"],[3,"Substitution"],[3,"Const"],[4,"ConstEvalError"],[3,"EnumVariantId"],[15,"i128"],[3,"StaticId"],[3,"ConstParamId"],[3,"Ty"],[4,"Visibility"],[3,"CrateGraph"],[3,"LangItems"],[3,"CrateLimits"],[15,"bool"],[3,"Crate"],[3,"Global"],[3,"Box"],[3,"FxHasher"],[3,"LineIndexQuery"],[15,"usize"],[3,"EnumId"],[3,"EnumData"],[3,"MacroCallId"],[3,"TokenId"],[3,"Subtree"],[4,"ExpandError"],[3,"ValueResult"],[3,"ExprScopes"],[4,"VariantId"],[3,"FieldData"],[3,"ArenaMap"],[3,"TupleField"],[3,"AstPtr"],[3,"RecordField"],[4,"Either"],[3,"ItemTree"],[3,"FileId"],[3,"SourceRootId"],[15,"str"],[15,"u64"],[3,"Formatter"],[6,"Result"],[3,"DatabaseKeyIndex"],[3,"LineIndexDatabaseGroupStorage__"],[8,"LineIndexDatabase"],[3,"FnDefId"],[3,"FnDefDatum"],[8,"FnMut"],[3,"Runtime"],[4,"MacroKind"],[4,"ModuleDefId"],[3,"FunctionId"],[3,"FunctionData"],[4,"GenericDefId"],[3,"GenericParams"],[3,"Interned"],[3,"TypeOrConstParamId"],[3,"Name"],[4,"Option"],[8,"Hasher"],[3,"HygieneFrame"],[3,"ImplId"],[3,"ImplData"],[3,"ImplId"],[3,"ImplDatum"],[3,"TraitRef"],[3,"ImportMap"],[3,"QueryTable"],[3,"QueryTableMut"],[4,"TyFingerprint"],[3,"SmallVec"],[3,"InferenceResult"],[3,"InherentImpls"],[3,"AnonymousConstId"],[3,"BlockLoc"],[3,"InternedCallableDefId"],[3,"InternedClosureId"],[3,"Const"],[3,"AssocItemLoc"],[3,"Enum"],[3,"ItemLoc"],[3,"ExternBlock"],[3,"ExternBlockId"],[3,"Function"],[3,"InternedGeneratorId"],[3,"Impl"],[4,"ImplTraitId"],[3,"InternedOpaqueTyId"],[3,"LifetimeParamId"],[3,"InternedLifetimeParamId"],[3,"Macro2Loc"],[3,"Macro2Id"],[3,"MacroCallLoc"],[3,"MacroRulesLoc"],[3,"MacroRulesId"],[3,"ProcMacroLoc"],[3,"ProcMacroId"],[3,"Static"],[3,"Struct"],[3,"StructId"],[3,"Trait"],[3,"TraitId"],[3,"TraitAlias"],[3,"TraitAliasId"],[3,"TypeAlias"],[3,"TypeAliasId"],[3,"InternedTypeOrConstParamId"],[3,"Union"],[3,"UnionId"],[4,"LangItem"],[4,"LangItemTarget"],[4,"AdtId"],[3,"RustcEnumVariantIdx"],[3,"LayoutS"],[4,"LayoutError"],[3,"BuildHasherDefault"],[3,"HashSet"],[3,"SymbolIndex"],[3,"LineIndex"],[3,"Macro2Data"],[3,"GreenNode"],[3,"MacroDefId"],[4,"TokenExpander"],[4,"ParseError"],[3,"MacroRulesData"],[3,"Revision"],[3,"MirBody"],[3,"ClosureId"],[3,"Module"],[3,"TraitEnvironment"],[15,"u16"],[3,"ProjectionTy"],[8,"Database"],[3,"SourceFile"],[3,"Parse"],[3,"MacroFile"],[4,"RustLanguage"],[3,"SyntaxNode"],[3,"Vec"],[3,"ProcMacroData"],[3,"ProcMacro"],[3,"String"],[3,"HashMap"],[3,"Environment"],[3,"ProgramClauses"],[15,"u32"],[6,"CrateId"],[6,"FxHashSet"],[3,"AnchoredPath"],[3,"ReturnTypeImplTraits"],[3,"Durability"],[3,"SourceRoot"],[3,"Snapshot"],[3,"StaticData"],[3,"StructData"],[3,"AdtDatum"],[3,"TargetDataLayout"],[3,"TraitAliasData"],[3,"TraitData"],[3,"TraitId"],[3,"TraitDatum"],[3,"TraitImpls"],[3,"Goal"],[3,"InEnvironment"],[3,"Canonical"],[4,"Solution"],[4,"TyDefId"],[3,"TypeAliasData"],[3,"TypeId"],[8,"ExpandDatabase"],[8,"DefDatabase"],[8,"HirDatabase"],[6,"FxHashMap"],[4,"ValueTyDefId"],[3,"EnumVariantData"],[3,"Variant"],[15,"u8"],[3,"Semantics"],[6,"SyntaxToken"],[3,"ActiveParameter"],[4,"CallableExpr"],[3,"GenericArgList"],[3,"Name"],[3,"Assist"],[4,"AssistKind"],[3,"AssistId"],[3,"GroupLabel"],[4,"AssistResolveStrategy"],[3,"SingleResolve"],[4,"Definition"],[4,"AssocItem"],[8,"Iterator"],[4,"NameClass"],[3,"NameRef"],[4,"NameRefClass"],[3,"AwaitExpr"],[4,"OperatorClass"],[3,"BinExpr"],[3,"IndexExpr"],[3,"Lifetime"],[4,"IdentClass"],[6,"SyntaxNode"],[3,"PrefixExpr"],[3,"TryExpr"],[3,"ArrayVec"],[3,"Field"],[3,"Label"],[3,"Macro"],[4,"ModuleDef"],[3,"Impl"],[4,"GenericParam"],[3,"Static"],[3,"Trait"],[3,"TraitAlias"],[3,"BuiltinType"],[4,"Adt"],[3,"Const"],[3,"Local"],[3,"TypeAlias"],[3,"Function"],[4,"PathResolution"],[3,"Variant"],[3,"FileRange"],[3,"SourceChange"],[6,"Result"],[3,"FindUsages"],[3,"FamousDefs"],[3,"Enum"],[3,"Lint"],[4,"ItemInNs"],[3,"ModPath"],[3,"Path"],[4,"TokenAtOffset"],[8,"Fn"],[8,"AstToken"],[4,"NameToImport"],[3,"LocatedImport"],[4,"ImportCandidate"],[3,"TraitImportCandidate"],[3,"PathImportCandidate"],[3,"FirstSegmentUnresolved"],[3,"ImportAssets"],[3,"Type"],[3,"IdentPat"],[3,"MethodCallExpr"],[4,"PrefixKind"],[4,"ImportScope"],[8,"Removable"],[4,"ImportGranularity"],[3,"InsertUseConfig"],[3,"Error"],[4,"MergeBehavior"],[3,"Visibility"],[3,"Use"],[3,"UseTree"],[4,"AssocItemSearch"],[3,"Label"],[3,"PathTransform"],[8,"IntoIterator"],[3,"SemanticsScope"],[3,"Impl"],[4,"IdentifierKind"],[3,"RenameError"],[3,"TextEdit"],[3,"UsageSearchResult"],[3,"FileReference"],[4,"ReferenceCategory"],[3,"SearchScope"],[3,"SourceChangeBuilder"],[8,"AstNode"],[4,"FileSystemEdit"],[3,"AnchoredPathBuf"],[8,"Into"],[3,"SnippetBuilder"],[3,"TextRange"],[6,"IntMap"],[3,"TextSize"],[3,"TreeMutator"],[3,"Query"],[8,"SymbolsDatabase"],[3,"ModuleSymbolsQuery"],[3,"LibrarySymbolsQuery"],[3,"LocalRootsQuery"],[3,"LibraryRootsQuery"],[3,"SymbolsDatabaseGroupStorage__"],[3,"FileSymbol"],[3,"LexedStr"],[3,"Output"],[4,"SyntaxKind"],[3,"Range"],[3,"Input"],[4,"FormatSpecifier"],[3,"String"],[4,"Arg"],[3,"BlockExpr"],[4,"Expr"],[3,"Label"],[3,"StmtList"],[3,"MacroCall"],[3,"TokenTree"],[3,"LetExpr"],[4,"Pat"],[4,"Type"],[4,"TryEnum"],[3,"LineIndexDatabaseStorage"],[13,"PatFieldShorthand"],[13,"FieldShorthand"],[3,"LintGroup"],[13,"CreateFile"],[13,"MoveFile"],[13,"MoveDir"],[3,"SymbolsDatabaseStorage"]]},\
"ide_diagnostics":{"doc":"Diagnostics rendering and fixits.","t":"NDDDNEENNLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLFMMLLLLLLLLMMMLLLLLLLLLLLLLLLMLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLM","n":["Default","Diagnostic","DiagnosticCode","DiagnosticsConfig","Error","ExprFillDefaultMode","Severity","Todo","WeakWarning","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diagnostics","disable_experimental","disabled","drop","drop","drop","drop","drop","eq","eq","equivalent","experimental","expr_fill_default","fixes","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","insert_use","into","into","into","into","into","message","prefer_no_std","proc_attr_macros_enabled","proc_macros_enabled","range","severity","test_sample","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unused"],"q":[[0,"ide_diagnostics"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,0,0,0,3,0,0,4,3,1,1,10,3,4,5,1,10,3,4,5,1,3,4,5,1,3,4,5,10,4,1,10,3,4,5,1,10,3,4,5,0,5,5,1,10,3,4,5,1,4,4,10,5,10,1,10,3,4,5,1,10,3,4,5,1,10,3,4,5,5,1,10,3,4,5,10,5,5,5,10,10,5,1,3,4,5,1,10,3,4,5,1,10,3,4,5,1,10,3,4,5,10],"f":[0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],0,[[],4],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[7,5,8,9],[[11,[10]]]],0,0,[6],[6],[6],[6],[6],[[1,1],12],[[4,4],12],[[],12],0,0,0,[[1,13],14],[[10,13],14],[[3,13],14],[[4,13],14],[[5,13],14],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],5],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],0],"c":[],"p":[[3,"DiagnosticCode"],[15,"str"],[4,"Severity"],[4,"ExprFillDefaultMode"],[3,"DiagnosticsConfig"],[15,"usize"],[3,"RootDatabase"],[4,"AssistResolveStrategy"],[3,"FileId"],[3,"Diagnostic"],[3,"Vec"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"ide_ssr":{"doc":"Structural Search Replace","t":"DDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLFLLLLLLLLLLLLLLLLLLLLLL","n":["Match","MatchDebugInfo","MatchFinder","SsrError","SsrMatches","SsrPattern","SsrRule","add_rule","add_search_pattern","at_first_file","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","debug_where_text_equal","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","edits","eq","flattened","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","in_context","init","init","init","init","init","init","init","into","into","into","into","into","into","into","matched_text","matches","matches","provide","ssr_from_comment","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"ide_ssr"]],"d":["Information about a match that was found.","","Searches a crate for pattern matches and possibly replaces …","","","","","Adds a rule to be applied. The order in which rules are …","Adds a search pattern. For use if you intend to only call …","Constructs an instance using the start of the first file …","","","","","","","","","","","","","","","Finds all nodes in <code>file_id</code> whose text is exactly equal to …","","","","","","","","","","","","","","","","","","","","","","","Finds matches for all added rules and returns edits for …","","Returns <code>self</code> with any nested matches removed and made into …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Constructs a new instance where names will be looked up as …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns matches for all added rules.","","","Attempts to build an SSR MatchFinder from a comment at the …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,9,18,3,2,5,11,1,9,18,3,2,5,11,1,11,1,9,18,3,2,5,11,1,9,18,3,2,5,11,1,9,18,3,2,5,11,1,3,11,9,18,3,3,2,5,11,1,9,18,3,2,5,11,2,5,1,1,9,18,3,2,5,11,1,9,18,3,2,5,11,18,1,11,3,0,3,1,9,18,3,2,5,11,1,9,18,3,2,5,11,1,9,18,3,2,5,11],"f":[0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[1,5],[[4,[3]]]],[6,[[4,[1,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,7,8],[[10,[9]]]],[[],11],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[1,[[14,[7,13]]]],[[3,3],15],[11,11],[[9,16],17],[[18,16],17],[[3,16],17],[[3,16],17],[[2,16],17],[[5,16],17],[[11,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[4,[2,3]]]],[8,[[4,[5,3]]]],[[6,19,[10,[20]]],[[4,[1,3]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,21],[1,11],0,[22],[[6,20],23],[[],21],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24]],"c":[],"p":[[3,"MatchFinder"],[3,"SsrRule"],[3,"SsrError"],[4,"Result"],[3,"SsrPattern"],[3,"RootDatabase"],[3,"FileId"],[15,"str"],[3,"MatchDebugInfo"],[3,"Vec"],[3,"SsrMatches"],[15,"usize"],[3,"TextEdit"],[6,"IntMap"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Match"],[3,"FilePosition"],[3,"FileRange"],[3,"String"],[3,"Demand"],[4,"Option"],[3,"TypeId"]]},\
"intern":{"doc":"Global <code>Arc</code>-based object interning infrastructure.","t":"DIDLLLLLLLLLLLLLLLLLLLLLKLLLLLLLL","n":["InternStorage","Internable","Interned","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","drop","eq","eq","fmt","fmt","from","from","hash","into","into","new","new","new_str","storage","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"intern"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,3,3,11,3,11,3,3,3,3,3,3,3,3,3,11,3,3,11,3,11,3,1,3,3,3,11,3,11,3,11],"f":[0,0,0,[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]]],[[[3,[4]],[3,[4]]],5],[[[3,[1]],[3,[1]]],5],[[[3,[[0,[6,1,2]]]],7],8],[[[3,[[0,[9,1,2]]]],7],8],[[]],[[]],[[[3,[[0,[1,2]]]],10]],[[]],[[]],[1,[[3,[1]]]],[[],[[11,[2]]]],[4,[[3,[4]]]],[[],11],[[]],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14]],"c":[],"p":[[8,"Internable"],[8,"Sized"],[3,"Interned"],[15,"str"],[15,"bool"],[8,"Display"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Hasher"],[3,"InternStorage"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"la_arena":{"doc":"Yet another index-based arena.","t":"DDEDDDNDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Arena","ArenaMap","Entry","Idx","IdxRange","IntoIter","Occupied","OccupiedEntry","RawIdx","Vacant","VacantEntry","alloc","alloc_many","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","contains_idx","count","default","default","end","entry","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_raw","from_u32","get","get","get_mut","get_mut","hash","hash","hash","hash","index","index","index","index_mut","index_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_mut","into_raw","into_u32","is_empty","is_empty","iter","iter","iter_mut","iter_mut","last","len","new","new","new","new_inclusive","next","next","next_back","nth","or_default","or_insert","or_insert_with","partial_cmp","partial_cmp","partial_cmp","remove","remove","reserve","shrink_to_fit","shrink_to_fit","size_hint","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values","values_mut","values_mut","with_capacity","with_capacity"],"q":[[0,"la_arena"]],"d":["Yet another index-based arena.","A map from arena indexes to some other type. Space …","A view into a single entry in a map, which may either be …","The index of a value allocated in an arena that holds <code>T</code>s.","A range of densely allocated arena values.","An iterator over the arena’s elements.","An occupied entry.","A view into an occupied entry in a <code>ArenaMap</code>. It is part of …","The raw index of a value in an arena.","A vacant entry.","A view into an vacant entry in a <code>ArenaMap</code>. It is part of …","Allocates a new value on the arena, returning the …","Densely allocates multiple values, returning the values’ …","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","Clears the map, removing all elements.","Empties the arena, removing all contained values.","","","","","","","","","","","","","","Returns whether the map contains a value for the specified …","","","","Returns the end of the index range.","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a new index from a <code>RawIdx</code>.","Constructs a <code>RawIdx</code> from a u32.","Gets a reference to the value in the entry.","Returns a reference to the value associated with the …","Gets a mutable reference to the value in the entry.","Returns a mutable reference to the value associated with …","","","","","","","","","","Sets the value of the entry with the <code>VacantEntry</code>’s key, …","Sets the value of the entry with the <code>OccupiedEntry</code>’s …","Inserts a value associated with a given arena index into …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Converts the entry into a mutable reference to its value.","Converts this index into the underlying <code>RawIdx</code>.","Deconstructs a <code>RawIdx</code> into the underlying u32.","Returns whether the index range is empty.","Returns whether the arena contains no elements.","Returns an iterator over the arena indexes and values in …","Returns an iterator over the arena’s elements.","Returns an iterator over the arena indexes and values in …","Returns an iterator over the arena’s mutable elements.","","Returns the length of the arena.","Creates a new index range inclusive of the start value and …","Creates a new empty map.","Creates a new empty arena.","Creates a new index range inclusive of the start value and …","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","","","","Takes the value of the entry out of the map, and returns …","Removes an index from the map, returning the value at the …","Reserves capacity for at least additional more elements to …","Shrinks the capacity of the map as much as possible.","Reallocates the arena to make it take up as little space …","","Returns the start of the index range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the values in the map.","Returns an iterator over the arena’s values.","Returns an iterator over mutable references to the values …","Returns an iterator over the arena’s mutable values.","Create a new empty map with specific capacity.","Create a new empty arena with specific capacity."],"i":[0,0,0,0,0,0,5,0,0,5,0,1,1,5,5,23,19,2,4,29,7,9,1,5,23,19,2,4,29,7,9,1,7,1,2,4,7,9,1,2,4,7,9,1,2,7,9,7,4,7,1,4,7,2,4,7,9,1,7,1,2,4,7,9,9,1,5,23,19,2,4,29,7,9,9,1,7,1,2,9,19,7,19,7,2,7,9,1,7,1,1,7,1,23,19,7,5,23,19,2,4,29,7,9,1,4,29,7,1,19,2,9,4,1,7,1,7,1,4,1,4,7,1,4,4,29,4,4,5,5,5,2,7,9,19,7,7,7,1,4,4,2,4,7,9,1,9,5,23,19,2,4,29,7,9,1,5,23,19,2,4,29,7,9,1,5,23,19,2,4,29,7,9,1,7,1,7,1,7,1],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],[[1,3],4],[[5,6],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[2]]]],[1],[2,2],[4,4],[[[7,[8,8]]],[[7,[8,8]]]],[9,9],[[[1,[8]]],[[1,[8]]]],[[]],[[]],[[]],[[]],[[]],[[2,2],10],[[[7,[11,11]],[7,[11,11]]],10],[[9,9],10],[[[7,[2]],2],12],[4,13],[[],[[7,[2]]]],[[],1],[4,2],[[[7,[2]],2],[[5,[2]]]],[[2,2],12],[[4,4],12],[[[7,[14,14]],[7,[14,14]]],12],[[9,9],12],[[[1,[14]],[1,[14]]],12],[[[7,[2]],3]],[[1,3]],[[2,15],16],[[4,15],16],[[[7,[17,17]],15],16],[[9,15],16],[[9,15],16],[[[1,[17]],15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,9],[[]],[[]],[3,[[7,[2]]]],[3,1],[9,2],[18,9],[19],[[[7,[2]],2],20],[19],[[[7,[2]],2],20],[[2,21]],[[[7,[22,22]],21]],[[9,21]],[[[1,[22]],21]],[[[7,[2]],2]],[[1,4]],[[1,2]],[[[7,[2]],2]],[[1,2]],[23],[19],[[[7,[2]],2],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[2]]]],[1],[19],[2,9],[9,18],[4,12],[1,12],[[[7,[2]]],[[0,[24,25]]]],[1,[[0,[24,26,25,8]]]],[[[7,[2]]],24],[1,[[0,[24,26,25]]]],[4,20],[1,13],[[[27,[2]]],4],[[],[[7,[2]]]],[[],1],[[[28,[2]]],4],[4,20],[29,20],[4,20],[[4,13],20],[[[5,[30]]],30],[5],[[5,6]],[[2,2],[[20,[10]]]],[[[7,[31,31]],[7,[31,31]]],[[20,[10]]]],[[9,9],[[20,[10]]]],[19],[[[7,[2]],2],20],[[[7,[2]],13]],[[[7,[2]]]],[1],[4],[4,2],[[]],[[]],[[]],[[]],[[]],[[],32],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[[7,[2]]],[[0,[24,25]]]],[1,[[0,[24,26,25]]]],[[[7,[2]]],[[0,[24,25]]]],[1,[[0,[24,26,25]]]],[13,[[7,[2]]]],[13,1]],"c":[],"p":[[3,"Arena"],[3,"Idx"],[8,"IntoIterator"],[3,"IdxRange"],[4,"Entry"],[8,"FnOnce"],[3,"ArenaMap"],[8,"Clone"],[3,"RawIdx"],[4,"Ordering"],[8,"Ord"],[15,"bool"],[15,"usize"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"u32"],[3,"OccupiedEntry"],[4,"Option"],[8,"Hasher"],[8,"Hash"],[3,"VacantEntry"],[8,"Iterator"],[8,"DoubleEndedIterator"],[8,"ExactSizeIterator"],[3,"Range"],[3,"RangeInclusive"],[3,"IntoIter"],[8,"Default"],[8,"PartialOrd"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"limit":{"doc":"limit defines a struct to enforce limits.","t":"DLLLLLLLLLLLL","n":["Limit","borrow","borrow_mut","check","fmt","from","inner","into","new","new_tracking","try_from","try_into","type_id"],"q":[[0,"limit"]],"d":["Represents a struct used to enforce a numerical limit.","","","Checks whether the given value is below the limit. Returns …","","Returns the argument unchanged.","Gets the underlying numeric limit.","Calls <code>U::from(self)</code>.","Creates a new limit.","Creates a new limit.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[1,2],3],[[1,4],5],[[]],[1,2],[[]],[2,1],[2,1],[[],3],[[],3],[[],6]],"c":[],"p":[[3,"Limit"],[15,"usize"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"TypeId"]]},\
"line_index":{"doc":"See <code>LineIndex</code>.","t":"DDDDNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["LineCol","LineIndex","TextRange","TextSize","Utf16","Utf32","WideEncoding","WideLineCol","add","add","add","add","add","add","add_assign","add_assign","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","col","col","contains","contains_inclusive","contains_range","cover","cover_offset","default","default","empty","end","end_bound","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","intersect","into","into","into","into","into","into","is_empty","len","len","line","line","line_col","lines","measure","new","new","of","offset","ordering","partial_cmp","start","start_bound","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_utf8","to_wide","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_line_col","type_id","type_id","type_id","type_id","type_id","type_id","up_to"],"q":[[0,"line_index"]],"d":["<code>(line, column)</code> information in the native, UTF-8 encoding.","Maps flat <code>TextSize</code> offsets to/from <code>(line, column)</code> …","A range in text, represented as a pair of <code>TextSize</code>.","A measure of text length. Also, equivalently, an index …","UTF-16.","UTF-32.","A kind of wide character encoding.","<code>(line, column)</code> information in wide encodings.","","","","","","","","","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","","","","","","","","","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","Zero-based UTF-8 offset.","Zero-based.","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","Create a zero-length range at the specified offset (…","The end point of this range.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","The range covered by both ranges, if it exists. If the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if this range is empty.","Returns the length of the original text.","The size of this range.","Zero-based.","Zero-based.","Transforms the <code>TextSize</code> into a <code>LineCol</code>.","Given a range [start, end), returns a sorted iterator of …","Returns the number of code units it takes to encode <code>text</code> …","Returns a <code>LineIndex</code> for the <code>text</code>.","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","The text size of some primitive text-like object.","Transforms the <code>LineCol</code> into a <code>TextSize</code>.","Relative order of the two ranges (overlapping ranges are …","","The start point of this range.","","","","","","","","","","","","","","","","","Transforms the <code>WideLineCol</code> with the given <code>WideEncoding</code> …","Transforms the <code>LineCol</code> with the given <code>WideEncoding</code> into a …","","","","","","","","","","","","","","Transforms the <code>TextSize</code> into a <code>LineCol</code>.","","","","","","","Create a range up to the given end (<code>..end</code>)."],"i":[0,0,0,0,5,5,0,0,1,1,1,2,2,2,1,2,1,4,5,6,7,1,2,4,5,6,7,1,2,1,2,1,2,4,5,6,7,1,2,4,5,6,7,1,2,2,4,6,1,1,1,1,1,1,2,1,1,1,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,1,2,2,4,5,6,1,2,1,4,5,6,7,1,2,1,7,1,4,6,7,7,5,7,1,2,7,1,2,1,1,1,1,1,2,2,2,1,2,2,4,5,6,7,1,2,7,7,4,5,6,7,1,2,2,4,5,6,7,1,2,7,4,5,6,7,1,2,1],"f":[0,0,0,0,0,0,0,0,[[1,2],1],[1,1],[[1,2],1],[[2,2],2],[2,2],[[2,2],2],[1],[2],[[2,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2],[[3,[1]]]],[[2,2],[[3,[2]]]],[[1,2],[[3,[1]]]],[[2,2],[[3,[2]]]],[4,4],[5,5],[6,6],[7,7],[1,1],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],8],0,0,[[1,2],9],[[1,2],9],[[1,1],9],[[1,1],1],[[1,2],1],[[],1],[[],2],[2,1],[1,2],[1,[[10,[2]]]],[[4,4],9],[[5,5],9],[[6,6],9],[[7,7],9],[[1,1],9],[[2,2],9],[[4,11],12],[[5,11],12],[[6,11],12],[[7,11],12],[[1,11],[[14,[13]]]],[[2,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[15,2],[[]],[[4,16]],[[5,16]],[[6,16]],[[1,16]],[[2,16]],[[1,1],[[3,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1,9],[7,2],[1,2],0,0,[[7,2],4],[[7,1],17],[[5,18],19],[18,7],[[2,2],1],[20,2],[[7,4],[[3,[2]]]],[[1,1],8],[[2,2],[[3,[8]]]],[1,2],[1,[[10,[2]]]],[[1,2],1],[[1,2],1],[1,1],[[2,2],2],[2,2],[[2,2],2],[1],[2],[17,2],[[]],[[]],[[]],[[]],[[]],[[]],[[7,5,6],[[3,[4]]]],[[7,5,4],[[3,[6]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[19,[[14,[2,21]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[7,2],[[3,[4]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[2,1]],"c":[],"p":[[3,"TextRange"],[3,"TextSize"],[4,"Option"],[3,"LineCol"],[4,"WideEncoding"],[3,"WideLineCol"],[3,"LineIndex"],[4,"Ordering"],[15,"bool"],[4,"Bound"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[15,"u32"],[8,"Hasher"],[8,"Iterator"],[15,"str"],[15,"usize"],[8,"TextLen"],[3,"TryFromIntError"],[3,"TypeId"]]},\
"lsp_server":{"doc":"A language server scaffold, exposing a synchronous …","t":"DNEEDNNNDNENNDNDNDDDNNNDDNDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMMLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Connection","ContentModified","ErrorCode","ExtractError","Incoming","InternalError","InvalidParams","InvalidRequest","IoThreads","JsonError","Message","MethodMismatch","MethodNotFound","Notification","Notification","Outgoing","ParseError","ProtocolError","ReqQueue","Request","Request","RequestCanceled","RequestFailed","RequestId","Response","Response","ResponseError","ServerCancelled","ServerErrorEnd","ServerErrorStart","ServerNotInitialized","UnknownErrorCode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","complete","complete","connect","data","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","error","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","handle_shutdown","hash","id","id","incoming","initialize","initialize_finish","initialize_start","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_completed","join","listen","memory","message","method","method","new","new","new_err","new_ok","outgoing","params","params","partial_cmp","provide","provide","read","receiver","register","register","result","sender","serialize","serialize","serialize","serialize","serialize","serialize","stdio","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","error","method"],"q":[[0,"lsp_server"],[237,"lsp_server::ExtractError"]],"d":["Connection is just a pair of channels of LSP messages.","The server detected that the content of a document got …","","","","","","","","Failed to deserialize the message.","","The extracted message was of a different method than …","","","","","","","Manages the set of pending requests, both incoming and …","","","The client has canceled a request and a server has detected","A request failed but it was syntactically correct, e.g the …","","","","","The server cancelled the request. This error code should …","","","Error code indicating that a server received a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Open a connection over tcp. This call blocks until a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If <code>req</code> is <code>Shutdown</code>, respond to it and return <code>true</code>, …","","","","","Initialize the connection. Sends the server capabilities …","Finishes the initialization process by sending an …","Starts the initialization process by waiting for an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Listen for a connection over tcp. This call blocks until a …","Creates a pair of connected connections.","","","","","","","","","","","","","","","","","","","","","","","","","","Create connection over standard in/standard out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,8,0,0,0,8,8,8,0,20,0,20,8,0,5,0,8,0,0,0,5,8,8,0,0,5,0,8,8,8,8,8,30,27,5,2,6,3,7,8,9,10,20,15,1,12,30,27,5,2,6,3,7,8,9,10,20,15,1,12,1,5,2,6,3,7,8,9,10,5,2,6,3,7,8,9,10,2,7,1,12,27,7,15,5,2,6,3,7,9,2,10,2,3,6,9,5,2,2,6,3,7,8,9,10,10,20,20,20,15,1,12,30,27,5,5,5,5,2,2,2,6,3,7,8,9,10,20,15,1,12,27,2,6,3,15,27,27,27,30,27,5,2,6,3,7,8,9,10,20,15,1,12,1,30,27,27,7,6,9,6,9,3,3,15,6,9,2,10,20,5,27,1,12,3,27,5,2,6,3,7,9,27,5,2,6,3,7,8,9,10,2,10,20,30,27,5,2,6,3,7,8,9,10,20,15,1,12,30,27,5,2,6,3,7,8,9,10,20,15,1,12,30,27,5,2,6,3,7,8,9,10,20,15,1,12,5,37,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2],[[4,[3]]]],[5,5],[2,2],[6,6],[3,3],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],11],0,[[1,2],4],[[12,2],4],[13,14],0,[[],15],[16,[[17,[5]]]],[16,[[17,[2]]]],[16,[[17,[6]]]],[16,[[17,[3]]]],[16,[[17,[7]]]],[16,[[17,[9]]]],[[2,2],18],[[10,10],18],[[],18],0,[[6,19],[[17,[[20,[6]]]]]],[[9,19],[[17,[21,[20,[9]]]]]],[[5,22],23],[[2,22],23],[[2,22],23],[[6,22],23],[[3,22],23],[[7,22],23],[[8,22],23],[[9,22],23],[[10,22],23],[[10,22],23],[[[20,[6]],22],23],[[[20,[24]],22],23],[[[20,[9]],22],23],[[[15,[24,24]],22],23],[[[1,[24]],22],23],[[[12,[24]],22],23],[[]],[[]],[[]],[9,5],[6,5],[3,5],[25,2],[26,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,6],[[17,[18,10]]]],[[2,28]],0,0,0,[[27,29],[[17,[29,10]]]],[[27,2,29],[[17,[10]]]],[27,[[17,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2],18],[30,14],[13,14],[[]],0,0,0,[[2,25,31],6],[[25,31],9],[[2,26,25],3],[[2,31],3],0,0,0,[[2,2],[[4,[11]]]],[32],[32],[33,[[14,[[4,[5]]]]]],0,[[1,2]],[[12,25,31],6],0,0,[[5,34],17],[[2,34],17],[[6,34],17],[[3,34],17],[[7,34],17],[[9,34],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[5,36],14],0,0],"c":[],"p":[[3,"Incoming"],[3,"RequestId"],[3,"Response"],[4,"Option"],[4,"Message"],[3,"Request"],[3,"ResponseError"],[4,"ErrorCode"],[3,"Notification"],[3,"ProtocolError"],[4,"Ordering"],[3,"Outgoing"],[8,"ToSocketAddrs"],[6,"Result"],[3,"ReqQueue"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[15,"str"],[4,"ExtractError"],[8,"DeserializeOwned"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"String"],[15,"i32"],[3,"Connection"],[8,"Hasher"],[4,"Value"],[3,"IoThreads"],[8,"Serialize"],[3,"Demand"],[8,"BufRead"],[8,"Serializer"],[3,"TypeId"],[8,"Write"],[13,"JsonError"]]},\
"mbe":{"doc":"<code>mbe</code> (short for Macro By Example) crate contains code for …","t":"NNNNNENDNGEEGNNNNNNNNNNNENNENGNDNDDDENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLFLLFMLLLLLFFMLMLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["BindingError","Brace","Bracket","Call","ConversionError","CountError","CountError","DeclarativeMacro","Def","Delimiter","DelimiterKind","ExpandError","ExpandResult","Expected","Expr","InvalidRepeat","Invisible","LeftoverTokens","LimitExceeded","MacroItems","MacroStmts","MetaItem","Misplaced","NoMatchingRule","Origin","OutOfBounds","Parenthesis","ParseError","Pattern","Punct","RepetitionEmptyTokenTree","Shift","SourceFile","SyntheticToken","SyntheticTokenId","TokenMap","TopEntryPoint","Type","UnexpectedToken","UnexpectedToken","ValueResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","expand","first_range_by_token","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","id","into","into","into","into","into","into","into","into","into","into","into","into","kind","map","map_err","map_id_down","map_id_up","new","new","ok","only_err","parse","parse_exprs_with_sep","parse_macro2","parse_macro_rules","parse_to_token_tree","range","ranges_by_token","result","shift","shift","shift_all","syntax_node_to_token_tree","syntax_node_to_token_tree_with_modifications","synthetic_entries","synthetic_token_id","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","token_by_range","token_tree_to_syntax_node","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unshift","value"],"q":[[0,"mbe"]],"d":["","","","","","","","This struct contains AST for a single <code>macro_rules</code> …","","","","","","","","","","","","","","Edge case – macros generally don’t expand to …","","","","","","","","","","","","","","Maps <code>tt::TokenId</code> to the relative range of the original …","Parse the whole of the input as a given syntactic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Split token tree with separate expr: $($e:expr)SEP*","The new, unstable <code>macro m {}</code> flavor.","The old, <code>macro_rules! m {}</code> flavor.","Convert a string to a <code>TokenTree</code>","","","","","","Shift given TokenTree token id","Convert the syntax node to a <code>TokenTree</code> (what macro will …","Convert the syntax node to a <code>TokenTree</code> (what macro will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,1,1,13,6,0,6,0,13,0,0,0,0,5,26,5,1,6,6,26,26,26,7,6,0,7,1,0,26,0,5,0,26,0,0,0,0,26,5,6,0,1,2,3,4,5,6,7,8,9,13,11,26,1,2,3,4,5,6,7,8,9,13,11,26,1,2,3,4,5,6,7,8,9,11,1,2,3,4,5,6,7,8,9,11,4,1,2,4,5,6,7,8,9,13,11,1,2,4,5,6,7,8,9,13,11,11,8,4,1,2,3,4,5,5,6,6,7,7,8,9,13,11,26,1,2,3,4,5,6,6,7,8,9,13,11,11,26,1,2,4,6,7,9,3,1,2,3,4,5,6,7,8,9,13,11,26,3,11,11,8,8,9,11,11,11,26,0,8,8,0,3,4,11,8,9,9,0,0,4,4,3,1,2,3,4,5,6,7,8,9,11,5,6,7,4,0,1,2,3,4,5,6,7,8,9,13,11,26,1,2,3,4,5,6,7,8,9,13,11,26,1,2,3,4,5,6,7,8,9,13,11,26,9,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[[[11,[10,10]]],[[11,[10,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[1,1],12],[[2,2],12],[[4,4],12],[[5,5],12],[[6,6],12],[[7,7],12],[[8,8],12],[[9,9],12],[[13,13],12],[[[11,[14,14]],[11,[14,14]]],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[8,15],[[16,[15]]]],[[4,17,18],[[20,[19]]]],[[1,21],[[23,[22]]]],[[2,21],24],[[3,21],24],[[4,21],24],[[5,21],24],[[5,21],24],[[6,21],24],[[6,21],24],[[7,21],24],[[7,21],24],[[8,21],24],[[9,21],24],[[13,21],24],[[[11,[25,25]],21],24],[[26,21],[[23,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[7,6],[[]],[[]],[[]],[[]],[[[23,[27]]],[[11,[27]]]],[[]],[[]],[[1,28]],[[2,28]],[[4,28]],[[6,28]],[[7,28]],[[9,28]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[11,29],11],[[11,29],11],[[8,17],17],[[8,17]],[15,9],[[],11],[[],11],[[],[[11,[27]]]],[[26,30],31],[[15,32],[[33,[15]]]],[[15,12],[[23,[8,5]]]],[[15,12],[[23,[8,5]]]],[34,20],0,[[4,17,18],35],[11,23],[8,9],[[9,17],17],[[9,15]],[36],[[36,4,37,[39,[38,[33,[3]]]],[39,[38,[33,[3]]]]]],0,[[4,17],[[20,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[4,19],[[20,[17]]]],[[15,26]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[9,17],[[20,[17]]]],0],"c":[],"p":[[4,"DelimiterKind"],[3,"SyntheticTokenId"],[3,"SyntheticToken"],[3,"TokenMap"],[4,"ParseError"],[4,"ExpandError"],[4,"CountError"],[3,"DeclarativeMacro"],[3,"Shift"],[8,"Clone"],[3,"ValueResult"],[15,"bool"],[4,"Origin"],[8,"PartialEq"],[6,"Subtree"],[6,"ExpandResult"],[3,"TokenId"],[4,"SyntaxKind"],[3,"TextRange"],[4,"Option"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Debug"],[4,"TopEntryPoint"],[8,"Default"],[8,"Hasher"],[8,"FnOnce"],[3,"Input"],[3,"Output"],[15,"char"],[3,"Vec"],[15,"str"],[8,"Iterator"],[6,"SyntaxNode"],[15,"u32"],[6,"SyntaxElement"],[6,"FxHashMap"],[3,"String"],[3,"TypeId"]]},\
"parser":{"doc":"The Rust parser.","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNENEEONNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMM","n":["ABI","AMP","AMP2","AMPEQ","ARG_LIST","ARRAY_EXPR","ARRAY_TYPE","ASSOC_ITEM_LIST","ASSOC_TYPE_ARG","ASYNC_KW","AS_KW","AT","ATTR","AUTO_KW","AWAIT_EXPR","AWAIT_KW","BANG","BIN_EXPR","BLOCK_EXPR","BOX_EXPR","BOX_KW","BOX_PAT","BREAK_EXPR","BREAK_KW","BYTE","BYTE_STRING","Block","CALL_EXPR","CARET","CARETEQ","CAST_EXPR","CHAR","CLOSURE_EXPR","COLON","COLON2","COMMA","COMMENT","CONST","CONST_ARG","CONST_BLOCK_PAT","CONST_KW","CONST_PARAM","CONTINUE_EXPR","CONTINUE_KW","CRATE_KW","C_STRING","DEFAULT_KW","DOLLAR","DOT","DOT2","DOT2EQ","DOT3","DO_KW","DYN_KW","DYN_TRAIT_TYPE","ELSE_KW","ENUM","ENUM_KW","EQ","EQ2","ERROR","EXISTENTIAL_KW","EXPR_STMT","EXTERN_BLOCK","EXTERN_CRATE","EXTERN_ITEM_LIST","EXTERN_KW","Enter","Enter","Error","Error","Exit","Exit","Expr","Expr","FALSE_KW","FAT_ARROW","FIELD_EXPR","FLOAT_NUMBER","FN","FN_KW","FN_PTR_TYPE","FOR_EXPR","FOR_KW","FOR_TYPE","FloatSplit","GENERIC_ARG_LIST","GENERIC_PARAM","GENERIC_PARAM_LIST","GTEQ","IDENT","IDENT_PAT","IF_EXPR","IF_KW","IMPL","IMPL_KW","IMPL_TRAIT_TYPE","INDEX_EXPR","INFER_TYPE","INT_NUMBER","IN_KW","ITEM_LIST","Input","Item","LABEL","LET_ELSE","LET_EXPR","LET_KW","LET_STMT","LIFETIME","LIFETIME_ARG","LIFETIME_IDENT","LIFETIME_PARAM","LITERAL","LITERAL_PAT","LOOP_EXPR","LOOP_KW","LTEQ","L_ANGLE","L_BRACK","L_CURLY","L_PAREN","LexedStr","MACRO_ARM","MACRO_CALL","MACRO_DEF","MACRO_EXPR","MACRO_ITEMS","MACRO_KW","MACRO_PAT","MACRO_RULES","MACRO_RULES_KW","MACRO_STMTS","MACRO_TYPE","MATCH_ARM","MATCH_ARM_LIST","MATCH_EXPR","MATCH_GUARD","MATCH_KW","META","METHOD_CALL_EXPR","MINUS","MINUSEQ","MODULE","MOD_KW","MOVE_KW","MUT_KW","MacroItems","MacroStmts","MetaItem","MetaItem","NAME","NAME_REF","NEQ","NEVER_TYPE","OR_PAT","Output","PARAM","PARAM_LIST","PAREN_EXPR","PAREN_PAT","PAREN_TYPE","PATH","PATH_EXPR","PATH_PAT","PATH_SEGMENT","PATH_TYPE","PERCENT","PERCENTEQ","PIPE","PIPE2","PIPEEQ","PLUS","PLUSEQ","POUND","PREFIX_EXPR","PTR_TYPE","PUB_KW","Pat","PatTop","Path","Pattern","PrefixEntryPoint","QUESTION","RANGE_EXPR","RANGE_PAT","RAW_KW","RECORD_EXPR","RECORD_EXPR_FIELD","RECORD_EXPR_FIELD_LIST","RECORD_FIELD","RECORD_FIELD_LIST","RECORD_PAT","RECORD_PAT_FIELD","RECORD_PAT_FIELD_LIST","REF_EXPR","REF_KW","REF_PAT","REF_TYPE","RENAME","REST_PAT","RETURN_EXPR","RETURN_KW","RETURN_TYPE_ARG","RET_TYPE","R_ANGLE","R_BRACK","R_CURLY","R_PAREN","Reparser","SELF_KW","SELF_PARAM","SELF_TYPE_KW","SEMICOLON","SHEBANG","SHL","SHLEQ","SHR","SHREQ","SLASH","SLASHEQ","SLICE_PAT","SLICE_TYPE","SOURCE_FILE","STAR","STAREQ","STATIC","STATIC_KW","STMT_LIST","STRING","STRUCT","STRUCT_KW","SUPER_KW","SourceFile","Step","Stmt","StrStep","SyntaxKind","T","THIN_ARROW","TILDE","TOKEN_TREE","TRAIT","TRAIT_ALIAS","TRAIT_KW","TRUE_KW","TRY_EXPR","TRY_KW","TUPLE_EXPR","TUPLE_FIELD","TUPLE_FIELD_LIST","TUPLE_PAT","TUPLE_STRUCT_PAT","TUPLE_TYPE","TYPE_ALIAS","TYPE_ARG","TYPE_BOUND","TYPE_BOUND_LIST","TYPE_KW","TYPE_PARAM","Token","Token","TopEntryPoint","Ty","Type","UNDERSCORE","UNDERSCORE_EXPR","UNION","UNION_KW","UNSAFE_KW","USE","USE_KW","USE_TREE","USE_TREE_LIST","VARIANT","VARIANT_LIST","VISIBILITY","Vis","WHERE_CLAUSE","WHERE_KW","WHERE_PRED","WHILE_EXPR","WHILE_KW","WHITESPACE","WILDCARD_PAT","YEET_EXPR","YEET_KW","YIELD_EXPR","YIELD_KW","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","default","eq","error","errors","fmt","fmt","fmt","fmt","fmt","for_node","from","from","from","from","from","from","from","from","from","from","from_char","from_contextual_keyword","from_keyword","hash","intersperse_trivia","into","into","into","into","into","into","into","into","into","is_empty","is_keyword","is_literal","is_punct","is_trivia","iter","kind","len","new","parse","parse","parse","partial_cmp","push","push_ident","range_text","single_token","text","text_len","text_range","text_start","to_input","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","was_joint","ends_in_dot","kind","kind","msg","n_input_tokens","kind","kind","msg","pos","text"],"q":[[0,"parser"],[397,"parser::Step"],[402,"parser::StrStep"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Input for the parser – a sequence of tokens.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Edge case – macros generally don’t expand to …","","","","","","","Output of the parser – a DFS traversal of a concrete …","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a prefix of the input as a given syntactic construct.","","","","","","","","","","","","","","","","","","","","","","","","","","","A parsing function for a specific braced-block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Parse the whole of the input as a given syntactic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the node is a braced block, return the corresponding …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","NB: only valid to call with Output from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Re-parse given tokens using this <code>Reparser</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets jointness for the last token we’ve pushed.","","","","","","","","","",""],"i":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,14,13,14,13,14,15,16,3,3,3,3,3,3,3,3,3,3,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,16,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,15,15,15,16,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,16,16,15,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,15,0,16,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,14,0,16,15,3,3,3,3,3,3,3,3,3,3,3,3,16,3,3,3,3,3,3,3,3,3,3,3,1,1,17,3,5,6,13,14,15,16,1,17,3,5,6,13,14,15,16,3,3,3,5,6,3,1,1,3,13,14,15,16,17,1,17,3,3,5,6,13,14,15,16,3,3,3,3,1,1,17,3,5,6,13,14,15,16,1,3,3,3,3,6,1,1,1,17,15,16,3,5,5,1,1,1,1,1,1,1,3,1,17,3,5,6,13,14,15,16,1,17,3,5,6,13,14,15,16,1,17,3,5,6,13,14,15,16,5,25,26,27,28,26,29,30,31,31,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[[]],[[3,3],4],[[],5],[[],6],[[3,3],7],[[1,8],[[9,[2]]]],[1,10],[[3,11],12],[[13,11],12],[[14,11],12],[[15,11],12],[[16,11],12],[[3,[9,[3]],[9,[3]]],[[9,[17]]]],[[]],[[]],[18,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,[[9,[3]]]],[2,[[9,[3]]]],[2,[[9,[3]]]],[[3,20]],[[1,6,21],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,7],[3,7],[3,7],[3,7],[3,7],[6,10],[[1,8],3],[1,8],[2,1],[[17,5],6],[[15,5],6],[[16,5],6],[[3,3],[[9,[4]]]],[[5,3]],[[5,3]],[[1,[22,[8]]],2],[2,9],[[1,8],2],[[1,8],8],[[1,8],[[22,[8]]]],[[1,8],8],[1,5],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[5],0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"LexedStr"],[15,"str"],[4,"SyntaxKind"],[4,"Ordering"],[3,"Input"],[3,"Output"],[15,"bool"],[15,"usize"],[4,"Option"],[8,"Iterator"],[3,"Formatter"],[6,"Result"],[4,"Step"],[4,"StrStep"],[4,"TopEntryPoint"],[4,"PrefixEntryPoint"],[3,"Reparser"],[15,"u16"],[15,"char"],[8,"Hasher"],[8,"FnMut"],[3,"Range"],[4,"Result"],[3,"TypeId"],[13,"FloatSplit"],[13,"Token"],[13,"Enter"],[13,"Error"],[13,"Token"],[13,"Enter"],[13,"Error"]]},\
"paths":{"doc":"Thin wrappers around <code>std::path</code>, distinguishing between …","t":"DDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AbsPath","AbsPathBuf","RelPath","RelPathBuf","absolutize","as_os_str","as_path","as_path","as_ref","as_ref","as_ref","as_ref","as_ref","assert","assert","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone_into","clone_into","cmp","cmp","cmp","cmp","deref","deref","display","ends_with","eq","eq","eq","eq","eq","exists","extension","file_name","file_stem","fmt","fmt","fmt","fmt","from","from","hash","hash","hash","hash","into","into","join","name_and_extension","new_unchecked","normalize","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","starts_with","strip_prefix","to_owned","to_owned","to_owned","to_path_buf","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"paths"]],"d":["Wrapper around an absolute <code>Path</code>.","Wrapper around an absolute <code>PathBuf</code>.","Wrapper around a relative <code>Path</code>.","Wrapper around a relative <code>PathBuf</code>.","Equivalent of <code>Path::join</code> for <code>AbsPath</code> with an additional …","","Coerces to an <code>AbsPath</code> slice.","Coerces to a <code>RelPath</code> slice.","","","","","","Wrap the given absolute path in <code>AbsPathBuf</code>","Wrap the given absolute path in <code>AbsPath</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Equivalent of <code>Path::join</code> for <code>AbsPath</code>.","","Creates a new <code>RelPath</code> from <code>path</code>, without checking if it is …","Normalize the given path:","Equivalent of <code>Path::parent</code> for <code>AbsPath</code>.","","","","","Equivalent of <code>PathBuf::pop</code> for <code>AbsPathBuf</code>.","","Equivalent of <code>Path::strip_prefix</code> for <code>AbsPath</code>.","","","","Equivalent of <code>Path::to_path_buf</code> for <code>AbsPath</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,4,6,4,4,1,6,7,4,1,4,4,1,6,7,4,1,6,7,1,4,6,4,6,4,1,6,7,4,6,1,1,4,4,1,6,7,1,1,1,1,4,1,6,7,4,6,4,1,6,7,4,6,1,1,7,1,1,4,1,6,7,4,1,1,4,1,6,1,4,4,4,1,6,6,6,4,6,4,1,6,7],"f":[0,0,0,0,[[1,[3,[2]]],4],[1,5],[4,1],[6,7],[4,1],[4,2],[1,2],[6,2],[7,2],[8,4],[2,1],[4,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,9],[4,4],[6,6],[[]],[[]],[[4,4],10],[[1,1],10],[[6,6],10],[[7,7],10],[4,1],[6,7],[1,11],[[1,7],12],[[4,4],12],[[4,1],12],[[1,1],12],[[6,6],12],[[7,7],12],[1,12],[1,[[13,[5]]]],[1,[[13,[5]]]],[1,[[13,[5]]]],[[4,14],15],[[1,14],15],[[6,14],15],[[7,14],15],[[]],[[]],[[4,16]],[[1,16]],[[6,16]],[[7,16]],[[]],[[]],[[1,[3,[2]]],4],[1,13],[2,7],[1,4],[1,[[13,[1]]]],[[4,4],[[13,[10]]]],[[1,1],[[13,[10]]]],[[6,6],[[13,[10]]]],[[7,7],[[13,[10]]]],[4,12],[[1,1],12],[[1,1],[[13,[7]]]],[[]],[1],[[]],[1,4],[17,[[18,[4,8]]]],[8,[[18,[4,8]]]],[[],18],[2,[[18,[1,2]]]],[17,[[18,[6,8]]]],[[],18],[8,[[18,[6,8]]]],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19]],"c":[42],"p":[[3,"AbsPath"],[3,"Path"],[8,"AsRef"],[3,"AbsPathBuf"],[3,"OsStr"],[3,"RelPathBuf"],[3,"RelPath"],[3,"PathBuf"],[15,"never"],[4,"Ordering"],[3,"Display"],[15,"bool"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"proc_macro_api":{"doc":"Client-side Proc-Macro crate","t":"NNNDDDEDDDLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMALLFFLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNRRDNNDNNIRDEERMLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLM","n":["Attr","CustomDerive","FuncLike","MacroDylib","MacroPanic","ProcMacro","ProcMacroKind","ProcMacroServer","RustCInfo","ServerError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","commit","date","deserialize","eq","eq","equivalent","equivalent","expand","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","io","kind","load_dylib","message","message","msg","name","new","read_dylib_info","read_version","serialize","spawn","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version_string","ApiVersionCheck","ApiVersionCheck","CURRENT_API_VERSION","ENCODE_CLOSE_SPAN_VERSION","ExpandMacro","ExpandMacro","ExpandMacro","FlatTree","ListMacros","ListMacros","Message","NO_VERSION_CHECK_VERSION","PanicMessage","Request","Response","VERSION_CHECK_VERSION","attributes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_dir","deserialize","deserialize","deserialize","deserialize","deserialize","env","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","lib","macro_body","macro_name","new","read","serialize","serialize","serialize","serialize","serialize","to_subtree","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","dylib_path"],"q":[[0,"proc_macro_api"],[94,"proc_macro_api::msg"],[170,"proc_macro_api::msg::Request"]],"d":["","","","","","A handle to a specific macro (a <code>#[proc_macro]</code> annotated …","","A handle to an external process which load dylibs with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Defines messages for cross-process message passing based …","","","Read rustc dylib information","Check the version of rustc that was used to compile a proc …","","Spawns an external process as the proc macro server and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Possible attributes for the attribute-like macros.","","","","","","","","","","","","","","","","","Environment variables to set during macro expansion.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Argument of macro call.","Name of macro to expand.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,0,0,0,0,0,15,10,30,13,1,14,2,15,10,30,13,1,14,2,13,1,2,1,2,13,13,1,1,2,1,2,2,10,13,1,14,2,15,10,30,13,1,14,2,15,10,30,13,1,14,2,10,2,14,10,30,0,2,15,0,0,1,14,1,2,10,15,10,30,13,1,14,2,15,10,30,13,1,14,2,15,10,30,13,1,14,2,13,13,24,25,0,0,0,24,25,0,24,25,0,0,0,0,0,0,26,23,24,25,9,26,23,24,25,9,26,26,23,24,25,9,26,26,23,24,25,9,26,23,24,25,9,26,23,24,25,9,26,26,26,26,23,31,23,24,25,9,26,23,23,24,25,9,26,23,24,25,9,26,23,24,25,9,26,31,32],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[[]],[[]],0,0,[3,[[4,[1]]]],[[1,1],5],[[2,2],5],[[],5],[[],5],[[2,6,[7,[6]],8],[[4,[[4,[6,9]],10]]]],[[10,11],12],[[13,11],12],[[1,11],12],[[14,11],12],[[2,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2,1],[[14,15],[[4,[[8,[2]],10]]]],0,0,0,[2,16],[17,15],[18,[[19,[13]]]],[18,[[19,[20]]]],[[1,21],4],[17,[[19,[14]]]],[[]],[[]],[[],20],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,[[4,[23]]]],[3,[[4,[24]]]],[3,[[4,[25]]]],[3,[[4,[9]]]],[3,[[4,[26]]]],0,[[23,11],12],[[24,11],12],[[25,11],12],[[9,11],12],[[26,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[6,27],23],[[28,20],[[19,[7]]]],[[23,21],4],[[24,21],4],[[25,21],4],[[9,21],4],[[26,21],4],[[23,27],6],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[29,19],0],"c":[],"p":[[4,"ProcMacroKind"],[3,"ProcMacro"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[6,"Subtree"],[4,"Option"],[3,"Vec"],[3,"PanicMessage"],[3,"ServerError"],[3,"Formatter"],[6,"Result"],[3,"RustCInfo"],[3,"ProcMacroServer"],[3,"MacroDylib"],[15,"str"],[3,"AbsPathBuf"],[3,"AbsPath"],[6,"Result"],[3,"String"],[8,"Serializer"],[3,"TypeId"],[3,"FlatTree"],[4,"Request"],[4,"Response"],[3,"ExpandMacro"],[15,"u32"],[8,"BufRead"],[8,"Write"],[3,"MacroPanic"],[8,"Message"],[13,"ListMacros"]]},\
"proc_macro_srv":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"proc_macro_test":{"doc":"Exports a few trivial procedural macros for testing.","t":"H","n":["PROC_MACRO_TEST_LOCATION"],"q":[[0,"proc_macro_test"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"profile":{"doc":"A collection of tools for profiling rust-analyzer.","t":"DDDDDDDLMLLLLLLLLLLLLLLLLLLLLLLCFLLLLLLLLLLLLLLLLLLLLLLLFFFFMLLLLLLLLLLMFLLLLLFLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Bytes","Count","CpuSpan","MemoryUsage","Scope","StopWatch","StopWatchSpan","add_assign","allocated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","countme","cpu_span","default","default","drop","drop","drop","elapsed","enter","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","heartbeat","heartbeat_span","init","init_from","instructions","into","into","into","into","into","into","into","is_active","megabytes","memory","memory","memory_usage","new","new","now","partial_cmp","partial_cmp","span","start","sub","sub","time","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"profile"]],"d":["","Include <code>_c: Count&lt;Self&gt;</code> field in important structs to …","A wrapper around google_cpu_profiler.","","Allows to check if the current code is within some dynamic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Filtering syntax env RA_PROFILE=*             // dump …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create new <code>Count</code>, incrementing the corresponding count.","","","","","This function starts a profiling scope in the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,4,9,10,3,8,4,1,7,9,10,3,8,4,1,7,3,4,1,3,4,1,3,1,0,0,3,1,3,8,7,9,8,3,1,10,3,4,1,7,9,10,3,8,4,1,7,3,1,0,0,0,0,10,9,10,3,8,4,1,7,8,1,9,10,0,3,1,4,3,1,0,9,4,1,10,3,4,1,10,4,1,9,10,3,8,4,1,7,9,10,3,8,4,1,7,9,10,3,8,4,1,7],"f":[0,0,0,0,0,0,0,[[1,2]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[4,4],[1,1],[[]],[[]],[[]],[[[3,[5]],[3,[5]]],6],[[1,1],6],0,[[],7],[[],3],[[],1],[3],[8],[7],[9,10],[[],8],[[[3,[[11,[[11,[[11,[11]]]]]]]],[3,[[11,[[11,[[11,[11]]]]]]]]],12],[[1,1],12],[[10,13],14],[[[3,[15]],13],[[17,[16]]]],[[4,13],14],[[1,13],14],[[7,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[18]],19]],[[1,19]],[[]],0,[[]],[20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[1,21],[[9,12],9],0,[[],4],[[],3],[21,1],[[],4],[[[3,[[22,[[22,[[22,[22]]]]]]]],[3,[[22,[[22,[[22,[22]]]]]]]]],[[23,[6]]]],[[1,1],[[23,[6]]]],0,[[],9],[[4,4],4],[[1,1],1],0,[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25]],"c":[],"p":[[3,"Bytes"],[15,"usize"],[3,"Count"],[3,"MemoryUsage"],[8,"Ord"],[4,"Ordering"],[3,"CpuSpan"],[3,"Scope"],[3,"StopWatch"],[3,"StopWatchSpan"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[4,"Result"],[8,"Hash"],[8,"Hasher"],[15,"str"],[15,"isize"],[8,"PartialOrd"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"project_model":{"doc":"In rust-analyzer, we maintain a strict separation between …","t":"NNNNNDENDDNNNEENNDNNGDDDNNDNDEENENDGDENNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMLLLLLLMMLLMMMLLMLLLLLLLMLLMMLMLMLMMLLMMMLALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMMMMMMMMMMMMF","n":["All","Bench","Bin","BuildScript","Cargo","CargoConfig","CargoFeatures","CargoToml","CargoWorkspace","CfgOverrides","DetachedFiles","Discover","Example","InvocationLocation","InvocationStrategy","Json","Lib","ManifestPath","Once","Other","Package","PackageData","PackageDependency","PackageRoot","Path","PerWorkspace","ProjectJson","ProjectJson","ProjectJsonData","ProjectManifest","ProjectWorkspace","Root","RustLibSource","Selected","Sysroot","Target","TargetData","TargetKind","Test","Workspace","WorkspaceBuildScripts","active_features","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","cfg_overrides","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","crates","crates","default","default","default","default","default","default","dependencies","deref","deserialize","discover","discover","discover_all","discover_rustc","discover_single","discover_with_src_override","edition","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_ignore_build_data","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","exclude","extra_args","extra_env","features","features","fetch_metadata","find_sysroot_proc_macro_srv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_manifest_file","global","hack_cargo_workspace","hash","hash","hash","id","include","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invocation_location","invocation_strategy","is_empty","is_json","is_local","is_local","is_member","is_proc_macro","kind","kind","len","load","load","load_detached_files","load_inline","loading_warning","manifest","metadata","n_crates","n_packages","name","name","name","new","new","package","package_flag","packages","parent","parent_manifests","partial_cmp","partial_cmp","path","pkg","proc_macro","public_deps","repository","required_features","root","root","run_all_build_scripts","run_build_script_command","run_build_scripts","rustc_source","selective","set_build_scripts","src_root","sysroot","sysroot_src","target","target_by_root","target_data_layout","target_directory","targets","to_crate_graph","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_roots","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","with_sysroot_dir","workspace_definition_path","workspace_features","workspace_root","wrap_rustc_in_build_scripts","features","no_default_features","build_scripts","cargo","cfg_overrides","files","project","rustc","rustc_cfg","rustc_cfg","rustc_cfg","sysroot","sysroot","sysroot","target_layout","toolchain","toolchain","get"],"q":[[0,"project_model"],[391,"project_model::CargoFeatures"],[393,"project_model::ProjectWorkspace"],[408,"project_model::target_data_layout"]],"d":["","","","","Project workspace was discovered by running <code>cargo metadata</code> …","","","","<code>CargoWorkspace</code> represents the logical structure of, well, …","A set of cfg-overrides per crate.","Project with a set of disjoint files, not belonging to any …","Try to automatically detect where the rustc source …","","","","Project workspace was manually specified using a …","Any kind of Cargo lib crate-type (dylib, rlib, proc-macro, …","More or less <code>AbsPathBuf</code> with non-None parent.","","","","Information associated with a cargo crate","","<code>PackageRoot</code> describes a package root folder. Which may be …","Explicit path for the rustc source directory.","","Roots and crates that compose this Rust project.","","","","","","Describes how to set the rustc source directory.","","","","Information associated with a package’s target","","","","","List of features enabled on this package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the crates in the project.","","","","","","","","List of packages this package depends on","","","Attempts to discover the toolchain’s sysroot from the …","","","","","","Rust edition for this package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extra args to pass to the cargo command.","Extra env vars to set when invoking the cargo command","List of features to activate.","Features provided by the crate, mapped to the features …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","A global set of overrides matching all crates.","Stores the result of <code>cargo metadata</code> of the …","","","","String representation of package id","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if the project workspace is <code>Json</code>.","Does this package come from the local filesystem (and is …","Is from the local filesystem and may be edited","Whether this package is a member of the workspace","Is this target a proc-macro","","Kind of target","","","","","","","Path containing the <code>Cargo.toml</code>","The contents of [package.metadata.rust-analyzer]","Returns the number of crates in the project.","","Name as given in the <code>Cargo.toml</code>","","Name as given in the <code>Cargo.toml</code> or generated from the file …","","Create a new ProjectJson instance.","Package that provided this target","","","","","","","Returns the path to the project’s root folder.","","","","Repository as given in the <code>Cargo.toml</code>","Required features of the target without which it won’t …","Returns sysroot “root” directory, where <code>bin/</code>, <code>etc/</code>, …","Path to the main source file of the target","Runs the build scripts for the given <code>ProjectWorkspace</code>s. …","The command to run instead of <code>cargo check</code> for building …","Runs the build scripts for this <code>ProjectWorkspace</code>.","rustc private crate source","A set of overrides matching specific crates.","","Returns the sysroot “source” directory, where stdlib …","Sysroot loading behavior","","rustc target","","Runs <code>rustc --print target-spec-json</code> to get the …","","Targets provided by the crate (lib, bin, example, test, ……","","","","","","","","","","","","","","","","","","","","","Returns the roots for the current <code>ProjectWorkspace</code> The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version given in the <code>Cargo.toml</code>","","","Returns the union of the features of all member crates in …","","Invoke <code>cargo check</code> through the RUSTC_WRAPPER.","List of features to activate.","Do not activate the <code>default</code> feature.","","","","","","","Holds cfg flags for the current target. We get those by …","Holds cfg flags for the current target. We get those by …","Holds cfg flags for the current target. We get those by …","","","","","","",""],"i":[6,11,11,11,17,0,0,19,0,0,17,5,11,0,0,17,11,0,20,11,0,0,0,0,5,20,0,19,0,0,0,21,0,6,0,0,0,0,11,21,0,8,1,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,7,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,19,12,14,6,7,15,18,20,21,8,1,13,14,19,19,14,19,14,8,1,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,21,17,1,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,21,18,16,7,7,7,8,4,17,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,19,15,14,1,16,19,8,16,4,4,14,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,7,7,14,17,8,16,8,10,9,10,15,14,17,17,17,14,8,8,12,17,8,9,10,4,12,10,4,4,1,4,1,19,12,9,14,14,8,10,14,10,17,7,17,7,15,17,14,7,7,7,4,0,4,8,17,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,17,1,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,8,14,17,4,4,7,50,50,51,51,51,52,53,51,51,53,52,51,53,52,51,51,53,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,3],0,[1,1],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],22],[[19,19],22],[12,23],[14,[[0,[23,24]]]],[[],6],[[],7],[[],15],[[],18],[[],20],[[],21],0,[1],[25,[[26,[13]]]],[[27,[29,[28,28]]],[[30,[14]]]],[27,[[32,[[31,[19]]]]]],[[],[[31,[19]]]],[14,[[33,[1]]]],[27,[[30,[19]]]],[[27,[29,[28,28]],34],[[30,[14]]]],0,[[1,1],35],[[4,4],35],[[5,5],35],[[6,6],35],[[7,7],35],[[8,8],35],[[9,9],35],[[10,10],35],[[11,11],35],[[12,12],35],[[14,14],35],[[15,15],35],[[16,16],35],[[18,18],35],[[19,19],35],[[20,20],35],[[21,21],35],[[17,17],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[18,[[33,[36]]]],0,0,0,0,0,[[1,27,7,37],[[30,[38]]]],[17,[[30,[34]]]],[[1,39],40],[[4,39],40],[[5,39],40],[[6,39],40],[[7,39],40],[[8,39],40],[[9,39],40],[[10,39],40],[[11,39],40],[[12,39],40],[[13,39],40],[[14,39],40],[[15,39],40],[[16,39],40],[[17,39],40],[[18,39],40],[[19,39],40],[[20,39],40],[[21,39],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,[[30,[19]]]],0,0,[[1,41]],[[16,41]],[[19,41]],0,0,[[4,42],8],[[4,43],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[14,35],[17,35],0,0,0,0,0,0,[15,45],[[34,34],14],[[19,7,37],[[30,[17]]]],[[[31,[34]],7],[[30,[17]]]],[[12,[33,[36]],[29,[28,28]],[33,[46]]],17],[14,[[33,[28]]]],0,0,[12,45],[17,45],0,0,0,[38,4],[[27,13],12],0,[[4,8],28],[4,[[0,[23,24]]]],[1,27],[[4,1],[[33,[[31,[1]]]]]],[[1,1],[[33,[22]]]],[[19,19],[[33,[22]]]],[12,27],0,[14,[[33,[[44,[0]]]]]],[14,23],0,0,[14,27],0,[[7,37],[[31,[[30,[18]]]]]],0,[[17,7,37],[[30,[18]]]],0,0,[[17,18]],[14,27],0,0,0,[[4,27],[[33,[43]]]],0,[4,27],0,[[17,47,[29,[28,28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[31,[16]]]],[34,[[26,[1]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],0,[34,[[30,[14]]]],[17,[[33,[27]]]],[4,[[49,[28]]]],[4,27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[33,[1]],[33,[36]],[29,[28,28]]],[[30,[28]]]]],"c":[],"p":[[3,"ManifestPath"],[3,"Path"],[15,"never"],[3,"CargoWorkspace"],[4,"RustLibSource"],[4,"CargoFeatures"],[3,"CargoConfig"],[3,"PackageData"],[3,"PackageDependency"],[3,"TargetData"],[4,"TargetKind"],[3,"ProjectJson"],[3,"ProjectJsonData"],[3,"Sysroot"],[3,"CfgOverrides"],[3,"PackageRoot"],[4,"ProjectWorkspace"],[3,"WorkspaceBuildScripts"],[4,"ProjectManifest"],[4,"InvocationStrategy"],[4,"InvocationLocation"],[4,"Ordering"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"Deserializer"],[4,"Result"],[3,"AbsPath"],[3,"String"],[6,"FxHashMap"],[6,"Result"],[3,"Vec"],[6,"Result"],[4,"Option"],[3,"AbsPathBuf"],[15,"bool"],[15,"str"],[8,"Fn"],[3,"Metadata"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[6,"Package"],[6,"Target"],[3,"Idx"],[15,"usize"],[3,"Version"],[8,"FnMut"],[3,"TypeId"],[6,"FxHashSet"],[13,"Selected"],[13,"Cargo"],[13,"DetachedFiles"],[13,"Json"]]},\
"rust_analyzer":{"doc":"Implementation of the LSP for rust-analyzer.","t":"GGAAFAFFFNNNNELLLLLLLALLLLLALLLLDNNDNDNDNDNEDNDEDNDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMNDNENLLLLLLLLLLLLLLLLLLLLLMFFMLLLLLLLMNNENDNDDDNNDENDNDEESDNDNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLMMLLLLLLLMMMLLMMLMLLLLMMMLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMNEDENDEDDDEEDEDDDDDNNNEDDEDEEDDEDDENDDEEDEDEEEDNEENNEDEENENENEEEDDEEDEDENEDDDEDEDDNEDEEEDENNNNEDEEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMFMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMM","n":["Error","Result","cli","config","from_json","lsp_ext","main_loop","server_capabilities","version","Normal","Quiet","Spammy","Verbose","Verbosity","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","flags","from","init","into","is_spammy","is_verbose","load_cargo","to_owned","try_from","try_into","type_id","AnalysisStats","AnalysisStats","Csv","Diagnostics","Diagnostics","Highlight","Highlight","Lsif","Lsif","LspServer","LspServer","OutputFormat","Parse","Parse","RustAnalyzer","RustAnalyzerCmd","Scip","Scip","Search","Search","Ssr","Ssr","Symbols","Symbols","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_build_scripts","disable_build_scripts","disable_proc_macros","disable_proc_macros","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_env","from_env_or_exit","from_str","from_vec","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","log_file","memory_usage","no_dump","no_log_buffering","no_sysroot","only","output","output","parallel","path","path","path","path","pattern","print_config_schema","quiet","rainbow","randomize","rule","run","run","run","run","run","run","run","run","run","skip_inference","skip_mir_stats","source_stats","subcommand","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verbose","verbosity","version","wait_dbg","with_deps","Explicit","LoadCargoConfig","None","ProcMacroServerChoice","Sysroot","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","from","from","init","init","into","into","load_out_dirs_from_check","load_workspace","load_workspace_at","prefill_caches","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_proc_macro_server","AboveName","AboveWholeItem","AnnotationLocation","Both","CallInfoConfig","Client","ClientCommandsConfig","Config","ConfigError","CustomCommand","Decimal","FilesConfig","FilesWatcher","Hexadecimal","HoverActionsConfig","InlineJsonProject","LensConfig","LinkedProject","MemoryLayoutHoverRenderKindDef","NO_ACTIONS","NotificationsConfig","ProjectManifest","RunnablesConfig","Rustfmt","RustfmtConfig","Server","WorkspaceSymbolConfig","add_linked_projects","add_workspaces","any","any","assist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_info","caps","cargo","cargo_autoreload","cargo_extra_args","cargo_toml_not_found","change_annotation_support","check_extra_args","check_extra_env","check_on_save","client_commands","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_action_group","code_action_literals","code_action_resolve","code_lens_refresh","color_diagnostic_output","completion","completion_label_details_support","debug","debug","debug_single","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","detached_files","diagnostics","diagnostics_map","did_change_watched_files_dynamic_registration","did_save_text_document_dynamic_registration","docs","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy_replacements","enum_variant_refs","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exclude","expand_proc_attr_macros","expand_proc_macros","extra_args","extra_env","files","find_all_refs_exclude_imports","flycheck","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","goto_location","goto_type_def","has_linked_projects","hierarchical_symbols","highlight_related","highlighting_config","highlighting_non_standard_tokens","hover","hover_actions","implementations","implementations","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inlay_hints","inlay_hints_refresh","insert_replace_support","interpret","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","join_lines","json_schema","lens","line_folding_only","linked_projects","local_docs","location","location_link","lru_parse_query_capacity","lru_query_capacities","main_loop_num_threads","method_refs","new","none","none","notifications","open_server_logs","override_cargo","params_only","position_encoding","prefill_caches","prime_caches_num_threads","proc_macro_srv","publish_diagnostics","rediscover_workspaces","references","references","refs_adt","refs_trait","remove_workspace","root_path","run","run","run_build_scripts","run_single","runnable","runnable","runnables","rustfmt","search_kind","search_limit","search_scope","semantic_tokens_refresh","semantics_tokens_augments_syntax_tokens","server_status_notification","show_reference","signature_help_label_offsets","snippet_cap","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trigger_parameter_hints","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typing_autoclose_angle","update","watcher","will_rename","work_done_progress","workspace_symbol","args","command","enable_range_formatting","extra_args","AllSymbols","AnalyzerStatus","AnalyzerStatusParams","CancelFlycheck","Cargo","CargoRunnable","ClearFlycheck","ClientCommandOptions","CodeAction","CodeActionData","CodeActionRequest","CodeActionResolveRequest","CodeLensResolveData","CodeLensResolveDataKind","CommandLink","CommandLinkGroup","CompletionImport","CompletionResolveData","CrateInfoResult","Down","Edit","Error","ExpandMacro","ExpandMacroParams","ExpandedMacro","ExternalDocs","ExternalDocsPair","ExternalDocsResponse","FetchDependencyList","FetchDependencyListParams","FetchDependencyListResult","Health","Hover","HoverParams","HoverRequest","Impls","InlayHintResolveData","InlayHintsParams","InterpretFunction","JoinLines","JoinLinesParams","MatchingBrace","MatchingBraceParams","MemoryUsage","MoveItem","MoveItemDirection","MoveItemParams","Ok","OnEnter","OnTypeFormatting","OnlyTypes","Op","OpenCargoToml","OpenCargoTomlParams","OpenServerLogs","ParentModule","Position","PositionOrRange","Range","RebuildProcMacros","References","RelatedTests","ReloadWorkspace","RunFlycheck","RunFlycheckParams","Runnable","RunnableKind","Runnables","RunnablesParams","ServerStatusNotification","ServerStatusParams","ShuffleCrateGraph","Simple","SnippetDocumentChangeOperation","SnippetTextDocumentEdit","SnippetTextEdit","SnippetWorkspaceEdit","Ssr","SsrParams","SyntaxTree","SyntaxTreeParams","TestInfo","Up","ViewCrateGraph","ViewCrateGraphParams","ViewFileText","ViewHir","ViewItemTree","ViewItemTreeParams","ViewMir","Warning","WithLocal","Workspace","WorkspaceAndDependencies","WorkspaceSymbol","WorkspaceSymbolParams","WorkspaceSymbolSearchKind","WorkspaceSymbolSearchScope","actions","annotation_id","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_args","cargo_extra_args","change_annotations","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_action_params","command","command","commands","commands","crates","data","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direction","document_changes","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edit","edits","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","executable_args","expansion","expect_test","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","full_import_path","group","health","hover","id","imported_name","imports","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_text_format","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_preferred","kind","kind","kind","label","local","location","message","name","name","negotiated_encoding","new_text","override_cargo","parse_only","partial_result_params","path","position","position","position","position","position","positions","query","query","quiescent","range","range","range","range","ranges","runnable","search_kind","search_scope","selections","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tooltip","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","web","work_done_progress_params","work_done_progress_params","workspace_root"],"q":[[0,"rust_analyzer"],[9,"rust_analyzer::cli"],[32,"rust_analyzer::cli::flags"],[260,"rust_analyzer::cli::load_cargo"],[298,"rust_analyzer::config"],[665,"rust_analyzer::config::RustfmtConfig"],[669,"rust_analyzer::lsp_ext"]],"d":["","","Various batch processing tasks, intended primarily for …","Config used by the language server.","","rust-analyzer extensions to the LSP.","","","Returns information about cargo’s version.","","","","","","","","","","","","","Grammar for the command-line arguments.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Loads a Cargo project into a static instance of analysis, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Searches for <code>patterns</code>, printing debug information for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for runnable items, such as <code>main</code> function or …","","","","Configuration for workspace symbol search requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional arguments for the <code>cargo</code>, e.g. <code>--release</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the client supports colored output for full …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Custom command to be executed instead of <code>cargo</code> for …","","","","","","","","","","","","","","","","","","","","","","What kind of symbol is being searched for.","How many items are returned at most.","In what scope should the symbol be searched in.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about CodeLens, that is to be resolved.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The document on type formatting request is sent from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The annotation id if this is an annotatedeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Include <em>all</em> crates, not just crates in the workspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","File position where SSR was invoked. Paths in <code>query</code> will …","","","","","A non-empty query string","","","","","","","","","","Current selections. Search/replace will be restricted to …i":[0,0,0,0,0,0,0,0,0,8,8,8,8,0,8,8,8,8,8,8,8,0,8,8,8,8,8,0,8,8,8,8,0,17,13,0,17,0,17,0,17,0,17,0,0,17,0,0,0,17,0,17,0,17,0,17,14,17,18,19,20,21,22,23,24,25,26,27,13,14,17,18,19,20,21,22,23,24,25,26,27,13,25,14,17,18,19,20,21,22,23,24,25,26,27,13,14,17,18,19,20,21,22,23,24,25,26,27,13,22,23,22,23,14,17,18,19,20,21,22,23,24,25,26,27,13,13,13,14,17,18,19,20,21,22,23,24,25,26,27,13,14,17,18,19,20,21,22,23,24,25,26,27,13,14,14,13,14,14,17,18,19,20,21,22,23,24,25,26,27,13,14,17,18,19,20,21,22,23,24,25,26,27,13,14,22,19,14,22,22,22,27,22,22,23,26,27,25,18,14,21,22,24,19,20,21,22,23,24,25,26,27,22,22,22,14,14,17,18,19,20,21,22,23,24,25,26,27,13,14,17,18,19,20,21,22,23,24,25,26,27,13,14,17,18,19,20,21,22,23,24,25,26,27,13,14,14,18,14,22,32,0,32,0,32,36,32,36,32,32,32,36,32,36,32,36,32,32,32,32,36,32,36,32,36,32,36,0,0,36,32,36,32,36,32,36,32,36,49,49,0,56,0,51,0,0,0,53,56,0,0,56,0,48,0,0,0,43,0,48,0,53,0,51,0,5,5,42,43,5,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,5,5,5,5,54,52,5,5,5,5,5,5,48,42,49,43,50,51,52,53,54,55,56,5,48,42,49,43,50,51,52,53,54,55,56,5,5,5,5,5,5,5,42,43,47,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,49,56,5,5,5,5,5,45,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,5,42,48,42,49,43,48,42,49,43,50,5,5,5,5,5,5,5,5,48,42,49,43,50,51,52,53,54,55,62,62,56,45,47,5,48,48,48,42,49,43,50,51,52,53,54,55,62,56,47,43,5,5,5,5,5,5,5,42,43,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,5,5,5,42,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,5,5,5,5,5,5,42,5,5,5,5,42,5,42,43,5,5,54,45,5,5,5,5,5,5,42,43,42,42,5,5,42,43,5,47,42,43,5,5,55,55,55,5,5,5,47,5,5,5,48,42,49,43,50,51,52,53,54,55,56,62,47,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,45,47,5,48,42,49,43,50,51,52,53,54,55,62,56,5,5,50,5,5,5,123,123,124,124,91,0,0,0,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,79,75,0,0,0,0,0,0,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,75,0,0,91,79,0,0,0,0,83,0,83,0,114,0,0,0,0,0,0,0,0,0,0,0,87,0,0,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,75,87,90,90,0,0,0,0,84,81,106,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,108,108,78,78,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,77,76,86,85,92,96,76,76,78,81,85,86,88,89,92,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,89,90,91,117,118,119,92,115,78,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,76,80,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,74,75,77,78,79,80,81,82,83,89,90,91,108,101,108,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,98,119,76,74,84,77,119,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,81,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,76,106,76,113,106,88,106,74,94,101,0,81,108,111,89,94,100,105,111,82,117,103,111,89,74,97,110,81,115,104,109,89,89,111,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,89,90,91,117,118,119,93,97,99,100,102,103,104,105,110,80,82,112,115,76,85,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,86,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,112,113,114,115,116,120,89,90,91,121,117,118,119,92,94,113,88,82,89,108],"f":[0,0,0,0,[[1,2],[[4,[3]]]],0,[[5,6],4],[5,7],0,0,0,0,0,0,[[]],[[]],[8,8],[[]],[9],[9],[9],0,[[]],[[],9],[[]],[8,10],[8,10],0,[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,0,0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[13,13],10],[[],10],[[14,15],16],[[17,15],16],[[18,15],16],[[19,15],16],[[20,15],16],[[21,15],16],[[22,15],16],[[23,15],16],[[24,15],16],[[25,15],16],[[26,15],16],[[27,15],16],[[13,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[28,[14]]]],[[],14],[1,[[11,[13]]]],[[[30,[29]]],[[28,[14]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,31],[20,31],[21,31],[[22,8],31],[23,31],[24,31],[25,31],[26,31],[27,31],0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[14,8],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[32,32],[[]],[9],[9],[9],[9],[9],[9],[[32,32],10],[[],10],[[32,15],16],[[]],[[]],[[],9],[[],9],[[]],[[]],0,[[33,[35,[34,34]],36],31],[[37,38,36,39],31],0,[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,[30,[40]]]],[[5,41]],[42,10],[43,10],[5,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,45],[5,46],[5,38],[5,10],0,0,[5,10],[5,[[30,[34]]]],[5,[[35,[34,34]]]],[5,10],[5,47],[5,5],[48,48],[42,42],[49,49],[43,43],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,10],[5,10],[5,10],[5,10],[5,10],[5,57],[5,10],0,0,0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[58,[[11,[49]]]],[58,[[11,[56]]]],[5],[5,59],0,[5,10],[5,10],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[5,[[35,[[60,[1]],60]]]],0,[[48,48],10],[[42,42],10],[[49,49],10],[[43,43],10],[[],10],[[],10],[[],10],[[],10],0,[5,10],[5,10],[5,[[30,[34]]]],[5,[[35,[34,34]]]],[5,50],[5,10],[5,61],[[5,15],16],[[48,15],16],[[42,15],16],[[49,15],16],[[43,15],16],[[50,15],16],[[51,15],16],[[52,15],16],[[53,15],16],[[54,15],16],[[55,15],16],[[62,15],16],[[62,15],16],[[56,15],16],[[]],[[]],[[]],[63,48],[64,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5,10],[5,10],[5,65],[5,66],[5,10],[5,67],[5,43],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[5,68],[5,10],[5,10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,69],[[],2],[5,42],[5,10],[5,[[30,[48]]]],[5,10],0,[5,10],[5,[[70,[9]]]],[5,[[70,[[35,[[60,[1]],9]]]]]],[5,9],0,[[71,46,[30,[71]]],5],[42,10],[43,10],[5,52],[5,10],0,0,0,[5,10],[5,72],[5,[[70,[71]]]],[5,10],[5],[42,10],0,0,0,[[5,73]],[5,71],0,0,[5,10],0,[42,10],[43,10],[5,54],[5,53],0,0,0,[5,10],[5,10],[5,10],0,[5,10],[5,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[5,10],[[5,2],[[11,[62]]]],0,[5,10],[5,10],[5,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],76],[[],78],[[],81],[[],85],[[],86],[[],88],[[],89],[[],92],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[58,[[11,[93]]]],[58,[[11,[94]]]],[58,[[11,[95]]]],[58,[[11,[96]]]],[58,[[11,[97]]]],[58,[[11,[98]]]],[58,[[11,[99]]]],[58,[[11,[100]]]],[58,[[11,[101]]]],[58,[[11,[102]]]],[58,[[11,[103]]]],[58,[[11,[104]]]],[58,[[11,[105]]]],[58,[[11,[106]]]],[58,[[11,[107]]]],[58,[[11,[108]]]],[58,[[11,[109]]]],[58,[[11,[110]]]],[58,[[11,[111]]]],[58,[[11,[74]]]],[58,[[11,[75]]]],[58,[[11,[76]]]],[58,[[11,[77]]]],[58,[[11,[78]]]],[58,[[11,[79]]]],[58,[[11,[80]]]],[58,[[11,[81]]]],[58,[[11,[82]]]],[58,[[11,[83]]]],[58,[[11,[84]]]],[58,[[11,[85]]]],[58,[[11,[86]]]],[58,[[11,[87]]]],[58,[[11,[88]]]],[58,[[11,[112]]]],[58,[[11,[113]]]],[58,[[11,[114]]]],[58,[[11,[115]]]],[58,[[11,[116]]]],[58,[[11,[89]]]],[58,[[11,[90]]]],[58,[[11,[91]]]],[58,[[11,[117]]]],[58,[[11,[118]]]],[58,[[11,[119]]]],[58,[[11,[92]]]],0,0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,[[74,74],10],[[75,75],10],[[76,76],10],[[77,77],10],[[78,78],10],[[79,79],10],[[80,80],10],[[81,81],10],[[82,82],10],[[83,83],10],[[84,84],10],[[85,85],10],[[86,86],10],[[87,87],10],[[88,88],10],[[89,89],10],[[90,90],10],[[91,91],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[93,15],16],[[94,15],16],[[95,15],16],[[96,15],16],[[97,15],16],[[98,15],16],[[99,15],16],[[100,15],16],[[101,15],16],[[102,15],16],[[103,15],16],[[104,15],16],[[105,15],16],[[106,15],16],[[107,15],16],[[108,15],16],[[109,15],16],[[110,15],16],[[111,15],16],[[76,15],16],[[77,15],16],[[78,15],16],[[79,15],16],[[80,15],16],[[81,15],16],[[82,15],16],[[83,15],16],[[84,15],16],[[85,15],16],[[86,15],16],[[87,15],16],[[88,15],16],[[112,15],16],[[113,15],16],[[114,15],16],[[115,15],16],[[116,15],16],[[120,15],16],[[89,15],16],[[90,15],16],[[91,15],16],[[121,15],16],[[117,15],16],[[118,15],16],[[119,15],16],[[92,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[93,122],11],[[94,122],11],[[95,122],11],[[96,122],11],[[97,122],11],[[98,122],11],[[99,122],11],[[100,122],11],[[101,122],11],[[102,122],11],[[103,122],11],[[104,122],11],[[105,122],11],[[106,122],11],[[107,122],11],[[108,122],11],[[109,122],11],[[110,122],11],[[111,122],11],[[74,122],11],[[75,122],11],[[76,122],11],[[77,122],11],[[78,122],11],[[79,122],11],[[80,122],11],[[81,122],11],[[82,122],11],[[83,122],11],[[84,122],11],[[85,122],11],[[86,122],11],[[87,122],11],[[88,122],11],[[112,122],11],[[113,122],11],[[114,122],11],[[115,122],11],[[116,122],11],[[89,122],11],[[90,122],11],[[91,122],11],[[117,122],11],[[118,122],11],[[119,122],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0],"c":[],"p":[[15,"str"],[4,"Value"],[8,"DeserializeOwned"],[6,"Result"],[3,"Config"],[3,"Connection"],[3,"ServerCapabilities"],[4,"Verbosity"],[15,"usize"],[15,"bool"],[4,"Result"],[3,"TypeId"],[4,"OutputFormat"],[3,"RustAnalyzer"],[3,"Formatter"],[6,"Result"],[4,"RustAnalyzerCmd"],[3,"LspServer"],[3,"Parse"],[3,"Symbols"],[3,"Highlight"],[3,"AnalysisStats"],[3,"Diagnostics"],[3,"Ssr"],[3,"Search"],[3,"Lsif"],[3,"Scip"],[6,"Result"],[3,"OsString"],[3,"Vec"],[6,"Result"],[4,"ProcMacroServerChoice"],[4,"ProjectWorkspace"],[3,"String"],[6,"FxHashMap"],[3,"LoadCargoConfig"],[3,"Path"],[3,"CargoConfig"],[8,"Fn"],[3,"ProjectJsonData"],[8,"Iterator"],[3,"LensConfig"],[3,"HoverActionsConfig"],[3,"AssistConfig"],[3,"CallInfoConfig"],[3,"ClientCapabilities"],[3,"ClientCommandsConfig"],[4,"LinkedProject"],[4,"AnnotationLocation"],[3,"FilesConfig"],[4,"FilesWatcher"],[3,"NotificationsConfig"],[4,"RustfmtConfig"],[3,"RunnablesConfig"],[3,"WorkspaceSymbolConfig"],[4,"MemoryLayoutHoverRenderKindDef"],[3,"CompletionConfig"],[8,"Deserializer"],[3,"DiagnosticsConfig"],[3,"Box"],[4,"FlycheckConfig"],[3,"ConfigError"],[3,"ProjectJson"],[4,"ProjectManifest"],[3,"HighlightRelatedConfig"],[3,"HighlightConfig"],[3,"HoverConfig"],[3,"InlayHintsConfig"],[3,"JoinLinesConfig"],[4,"Option"],[3,"AbsPathBuf"],[15,"u8"],[3,"AbsPath"],[3,"ServerStatusParams"],[4,"Health"],[3,"CodeAction"],[3,"CodeActionData"],[3,"SnippetWorkspaceEdit"],[4,"SnippetDocumentChangeOperation"],[3,"SnippetTextDocumentEdit"],[3,"SnippetTextEdit"],[3,"HoverParams"],[4,"PositionOrRange"],[3,"Hover"],[3,"CommandLinkGroup"],[3,"CommandLink"],[4,"ExternalDocsResponse"],[3,"ExternalDocsPair"],[3,"WorkspaceSymbolParams"],[4,"WorkspaceSymbolSearchScope"],[4,"WorkspaceSymbolSearchKind"],[3,"ClientCommandOptions"],[3,"AnalyzerStatusParams"],[3,"CrateInfoResult"],[3,"FetchDependencyListParams"],[3,"FetchDependencyListResult"],[3,"SyntaxTreeParams"],[3,"ViewCrateGraphParams"],[3,"ViewItemTreeParams"],[3,"ExpandMacroParams"],[3,"ExpandedMacro"],[3,"RunFlycheckParams"],[3,"MatchingBraceParams"],[3,"JoinLinesParams"],[3,"RunnablesParams"],[3,"Runnable"],[4,"RunnableKind"],[3,"CargoRunnable"],[3,"TestInfo"],[3,"InlayHintsParams"],[3,"SsrParams"],[3,"OpenCargoTomlParams"],[3,"CodeLensResolveData"],[4,"CodeLensResolveDataKind"],[3,"MoveItemParams"],[4,"MoveItemDirection"],[3,"CompletionResolveData"],[3,"InlayHintResolveData"],[3,"CompletionImport"],[4,"WorkspaceSymbol"],[4,"OnTypeFormatting"],[8,"Serializer"],[13,"CustomCommand"],[13,"Rustfmt"],[4,"AnalyzerStatus"],[4,"FetchDependencyList"],[4,"MemoryUsage"],[4,"ShuffleCrateGraph"],[4,"ReloadWorkspace"],[4,"RebuildProcMacros"],[4,"SyntaxTree"],[4,"ViewHir"],[4,"ViewMir"],[4,"InterpretFunction"],[4,"ViewFileText"],[4,"ViewCrateGraph"],[4,"ViewItemTree"],[4,"ExpandMacro"],[4,"CancelFlycheck"],[4,"RunFlycheck"],[4,"ClearFlycheck"],[4,"OpenServerLogs"],[4,"MatchingBrace"],[4,"ParentModule"],[4,"JoinLines"],[4,"OnEnter"],[4,"Runnables"],[4,"RelatedTests"],[4,"Ssr"],[4,"ServerStatusNotification"],[4,"CodeActionRequest"],[4,"CodeActionResolveRequest"],[4,"HoverRequest"],[4,"ExternalDocs"],[4,"OpenCargoToml"],[4,"MoveItem"]]},\
"rust_analyzer_proc_macro_srv":{"doc":"A standalone binary for <code>proc-macro-srv</code>. Driver for proc …","t":"FF","n":["main","run"],"q":[[0,"rust_analyzer_proc_macro_srv"]],"d":["",""],"i":[0,0],"f":[[[],1],[[],1]],"c":[],"p":[[6,"Result"]]},\
"sourcegen":{"doc":"rust-analyzer relies heavily on source code generation.","t":"DDFLLLLLLMFLLMLLLLMLLMMFFFFLLLLLLLL","n":["CommentBlock","Location","add_preamble","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contents","ensure_file_contents","extract","extract_untagged","file","fmt","fmt","from","from","id","into","into","line","line","list_files","list_rust_files","project_root","reformat","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"sourcegen"]],"d":["","","","","","","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,3,6,3,6,3,3,3,0,3,3,6,6,6,3,6,3,3,6,3,6,0,0,0,0,3,6,3,6,3,6,3,6],"f":[0,0,[[1,2],2],[[]],[[]],[[]],[[]],[3,3],[[]],0,[[4,1]],[[1,1],[[5,[3]]]],[1,[[5,[3]]]],0,[[6,7],8],[[6,7],8],[[]],[[]],0,[[]],[[]],0,0,[4,[[5,[9]]]],[4,[[5,[9]]]],[[],9],[2,2],[[]],[[],2],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11]],"c":[],"p":[[15,"str"],[3,"String"],[3,"CommentBlock"],[3,"Path"],[3,"Vec"],[3,"Location"],[3,"Formatter"],[6,"Result"],[3,"PathBuf"],[4,"Result"],[3,"TypeId"]]},\
"stdx":{"doc":"Missing batteries for standard libraries.","t":"DOLLFLLLOFLOLOLLFFOAAFAAFFLAFFFFLLLDLLLLLLLLLLLLLDLLLFLLLLLFFFFDDNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLL","n":["JodChild","always","borrow","borrow_mut","defer","deref","deref_mut","drop","eprintln","equal_range_by","fmt","format_to","from","impl_from","into","into_inner","is_ci","iter_eq_by","never","non_empty_vec","panic_context","print_backtrace","process","rand","replace","slice_tails","spawn","thread","timeit","to_lower_snake_case","to_upper_snake_case","trim_indent","try_from","try_into","type_id","NonEmptyVec","borrow","borrow_mut","from","into","into_last","last_mut","len","new","pop","push","try_from","try_into","type_id","PanicContext","borrow","borrow_mut","drop","enter","from","into","try_from","try_into","type_id","spawn_with_streaming_output","streaming_output","seed","shuffle","Builder","JoinHandle","LatencySensitive","Pool","ThreadIntent","Worker","allow_leak","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","drop","eq","fmt","fmt","from","from","from","from","into","into","into","into","join","len","name","new","new","partial_cmp","spawn","spawn","spawn","stack_size","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"stdx"],[35,"stdx::non_empty_vec"],[49,"stdx::panic_context"],[59,"stdx::process"],[61,"stdx::rand"],[63,"stdx::thread"]],"d":["A <code>std::process::Child</code> wrapper that will kill the child on …","Asserts that the condition is always true and returns its …","","","","","","","","","","Appends formatted string to a <code>String</code>.","Returns the argument unchanged.","Generates <code>From</code> impls for <code>Enum E { Foo(Foo), Bar(Bar) }</code> …","Calls <code>U::from(self)</code>.","","","","Asserts that the condition is never true and returns its …","See <code>NonEmptyVec</code>.","A micro-crate to enhance panic messages with context info.","Prints backtrace to stderr, useful for debugging.","Read both stdout and stderr of child without deadlocks.","We don’t use <code>rand</code>, as that’s too many things for us.","","Returns all final segments of the argument, longest first.","","A utility module for working with threads that …","","","","","","","","A <code>Vec</code> that is guaranteed to at least contain one element.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Any thread which does work caused by the user typing (e.g. …","","","Any thread which does work that isn’t in the critical …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,3,3,0,3,3,3,0,0,3,0,3,0,3,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,3,3,0,20,20,20,20,20,20,20,20,20,20,20,20,20,0,22,22,22,0,22,22,22,22,22,0,0,0,0,0,0,28,0,0,28,27,31,27,30,28,31,27,30,28,28,28,28,30,28,30,28,31,27,30,28,31,27,30,28,30,31,27,31,27,28,0,31,27,27,28,31,27,30,28,31,27,30,28,31,27,30,28],"f":[0,0,[[]],[[]],[1,2],[3,4],[3,4],[3],0,[5,[[7,[6]]]],[[3,8],9],0,[[]],0,[[]],[3,4],[[],10],[[11,11,5],10],0,0,0,[[]],0,0,[[12,13,14]],[[],15],[16,[[17,[3]]]],0,[14,2],[14,12],[14,12],[14,12],[[],18],[[],18],[[],19],0,[[]],[[]],[[]],[[]],[20],[20],[20,6],[[],20],[20,21],[20],[[],18],[[],18],[[],19],0,[[]],[[]],[22],[12,22],[[]],[[]],[[],18],[[],18],[[],19],[[16,5,5],[[17,[23]]]],[[24,25,5,5],17],[[],26],[5],0,0,0,0,0,0,[[27,10],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[[]],[[28,28],29],[30],[[28,28],10],[[30,8],9],[[28,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30],[31,6],[[27,12],27],[6,31],[28,27],[[28,28],[[21,[29]]]],[[28,[0,[1,32]]],[[30,[32]]]],[[31,28,[0,[1,32]]]],[[27,[0,[1,32]]],[[17,[[30,[32]]]]]],[[27,6],27],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19]],"c":[],"p":[[8,"FnOnce"],[8,"Drop"],[3,"JodChild"],[3,"Child"],[8,"FnMut"],[15,"usize"],[3,"Range"],[3,"Formatter"],[6,"Result"],[15,"bool"],[8,"IntoIterator"],[3,"String"],[15,"char"],[15,"str"],[8,"Iterator"],[3,"Command"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"NonEmptyVec"],[4,"Option"],[3,"PanicContext"],[3,"Output"],[3,"ChildStdout"],[3,"ChildStderr"],[15,"u64"],[3,"Builder"],[4,"ThreadIntent"],[4,"Ordering"],[3,"JoinHandle"],[3,"Pool"],[8,"Send"]]},\
"syntax":{"doc":"Syntax Tree library used throughout the rust-analyzer.","t":"NNNNNNNNNNNNNNNNCDCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNDDGNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNDCGGDEGGGDGDONNNNNNNNNNNNNNNNNNNNNDDNEDNNNNNNNNNNNNNNNNNNNENNNNLLLLLLLLLALLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALDFLLFFFLLFLLLFFFFFLLLSDNENDDDDDDDDDDENDNEDNNEDDNDIINDDEDNDNNENNNNNDNENDNDNDNDNDNDNNDNEDNDNDNENDDEEDNNNNDNDNDNDNNNNNDDNNEDNNNNEDNDNDNEDDNEEDNDNNNDNDNDNNEDEDNIIIIIIIIINDDNDNNDNDNNNNDNDNNNDNIENDDNNDDNDNDNNDNDNNDNEDNENDNEDNNNDNNDNDDNDNNDDNDDDNDDNDNDNNNDNNNNEEDNNNDNNNNDNNENNNDDDNDNDNEDDNDNDEDNNDNDNNNNNDSEDNEDNNDNDDDDNDNDDNDNDNDNNDNDNDDNNDENLNNDNDDNDDNNEDDNDNNENNDDNNDNNENDNNDNDDNDNDNDNENNDNNNDNDEDEDNEDNDNNNNDNDDDDDEDDDNDDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLMLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMIDLLLLLLLLLLLLLLLLLLLLLLLLIIIILKKLLLKLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFLLFLLFLFFLLLFLFIDLFFLLLLLLFFFFLLFFFFFFKLLLFF","n":["ABI","AMP","AMP2","AMPEQ","ARG_LIST","ARRAY_EXPR","ARRAY_TYPE","ASSOC_ITEM_LIST","ASSOC_TYPE_ARG","ASYNC_KW","AS_KW","AT","ATTR","AUTO_KW","AWAIT_EXPR","AWAIT_KW","AstNode","AstPtr","AstToken","BANG","BIN_EXPR","BLOCK_EXPR","BOX_EXPR","BOX_KW","BOX_PAT","BREAK_EXPR","BREAK_KW","BYTE","BYTE_STRING","Between","CALL_EXPR","CARET","CARETEQ","CAST_EXPR","CHAR","CLOSURE_EXPR","COLON","COLON2","COMMA","COMMENT","CONST","CONST_ARG","CONST_BLOCK_PAT","CONST_KW","CONST_PARAM","CONTINUE_EXPR","CONTINUE_KW","CRATE_KW","C_STRING","DEFAULT_KW","DOLLAR","DOT","DOT2","DOT2EQ","DOT3","DO_KW","DYN_KW","DYN_TRAIT_TYPE","Direction","ELSE_KW","ENUM","ENUM_KW","EQ","EQ2","ERROR","EXISTENTIAL_KW","EXPR_STMT","EXTERN_BLOCK","EXTERN_CRATE","EXTERN_ITEM_LIST","EXTERN_KW","Enter","FALSE_KW","FAT_ARROW","FIELD_EXPR","FLOAT_NUMBER","FN","FN_KW","FN_PTR_TYPE","FOR_EXPR","FOR_KW","FOR_TYPE","GENERIC_ARG_LIST","GENERIC_PARAM","GENERIC_PARAM_LIST","GTEQ","GreenNode","IDENT","IDENT_PAT","IF_EXPR","IF_KW","IMPL","IMPL_KW","IMPL_TRAIT_TYPE","INDEX_EXPR","INFER_TYPE","INT_NUMBER","IN_KW","ITEM_LIST","LABEL","LET_ELSE","LET_EXPR","LET_KW","LET_STMT","LIFETIME","LIFETIME_ARG","LIFETIME_IDENT","LIFETIME_PARAM","LITERAL","LITERAL_PAT","LOOP_EXPR","LOOP_KW","LTEQ","L_ANGLE","L_BRACK","L_CURLY","L_PAREN","Leave","MACRO_ARM","MACRO_CALL","MACRO_DEF","MACRO_EXPR","MACRO_ITEMS","MACRO_KW","MACRO_PAT","MACRO_RULES","MACRO_RULES_KW","MACRO_STMTS","MACRO_TYPE","MATCH_ARM","MATCH_ARM_LIST","MATCH_EXPR","MATCH_GUARD","MATCH_KW","META","METHOD_CALL_EXPR","MINUS","MINUSEQ","MODULE","MOD_KW","MOVE_KW","MUT_KW","NAME","NAME_REF","NEQ","NEVER_TYPE","Next","Node","NodeOrToken","None","OR_PAT","PARAM","PARAM_LIST","PAREN_EXPR","PAREN_PAT","PAREN_TYPE","PATH","PATH_EXPR","PATH_PAT","PATH_SEGMENT","PATH_TYPE","PERCENT","PERCENTEQ","PIPE","PIPE2","PIPEEQ","PLUS","PLUSEQ","POUND","PREFIX_EXPR","PTR_TYPE","PUB_KW","Parse","Preorder","PreorderWithTokens","Prev","QUESTION","RANGE_EXPR","RANGE_PAT","RAW_KW","RECORD_EXPR","RECORD_EXPR_FIELD","RECORD_EXPR_FIELD_LIST","RECORD_FIELD","RECORD_FIELD_LIST","RECORD_PAT","RECORD_PAT_FIELD","RECORD_PAT_FIELD_LIST","REF_EXPR","REF_KW","REF_PAT","REF_TYPE","RENAME","REST_PAT","RETURN_EXPR","RETURN_KW","RETURN_TYPE_ARG","RET_TYPE","R_ANGLE","R_BRACK","R_CURLY","R_PAREN","RustLanguage","SELF_KW","SELF_PARAM","SELF_TYPE_KW","SEMICOLON","SHEBANG","SHL","SHLEQ","SHR","SHREQ","SLASH","SLASHEQ","SLICE_PAT","SLICE_TYPE","SOURCE_FILE","STAR","STAREQ","STATIC","STATIC_KW","STMT_LIST","STRING","STRUCT","STRUCT_KW","SUPER_KW","Single","SmolStr","SourceFile","SyntaxElement","SyntaxElementChildren","SyntaxError","SyntaxKind","SyntaxNode","SyntaxNodeChildren","SyntaxNodePtr","SyntaxText","SyntaxToken","SyntaxTreeBuilder","T","THIN_ARROW","TILDE","TOKEN_TREE","TRAIT","TRAIT_ALIAS","TRAIT_KW","TRUE_KW","TRY_EXPR","TRY_KW","TUPLE_EXPR","TUPLE_FIELD","TUPLE_FIELD_LIST","TUPLE_PAT","TUPLE_STRUCT_PAT","TUPLE_TYPE","TYPE_ALIAS","TYPE_ARG","TYPE_BOUND","TYPE_BOUND_LIST","TYPE_KW","TYPE_PARAM","TextRange","TextSize","Token","TokenAtOffset","TokenText","UNDERSCORE","UNDERSCORE_EXPR","UNION","UNION_KW","UNSAFE_KW","USE","USE_KW","USE_TREE","USE_TREE_LIST","VARIANT","VARIANT_LIST","VISIBILITY","WHERE_CLAUSE","WHERE_KW","WHERE_PRED","WHILE_EXPR","WHILE_KW","WHITESPACE","WILDCARD_PAT","WalkEvent","YEET_EXPR","YEET_KW","YIELD_EXPR","YIELD_KW","add","add","add","add","add","add","add_assign","add_assign","add_assign","algo","ancestors","ancestors","as_node","as_ref","as_ref","as_str","as_str","as_token","ast","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","char_at","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","contains_char","contains_inclusive","contains_range","cover","cover_offset","debug_dump","default","default","default","default","deref","deref","deref","detach","detach","empty","end","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","errors","find_char","finish","finish_node","first_token","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_chunk","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_char","from_contextual_keyword","from_iter","from_iter","from_iter","from_iter","from_keyword","from_str","hacks","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","index","index","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_node","into_token","is_empty","is_empty","is_empty","is_heap_allocated","is_keyword","is_literal","is_punct","is_trivia","kind","kind","kind","kind","kind_from_raw","kind_to_raw","last_token","left_biased","len","len","len","map","map","match_ast","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","new","new","new","new","new_at_offset","new_inline","new_inline_from_ascii","next","next","next_sibling_or_token","next_sibling_or_token","of","ok","ordering","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prev_sibling_or_token","prev_sibling_or_token","range","reparse","right_biased","size_hint","skip_subtree","slice","start","start_bound","start_node","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","syntax_element","syntax_element","syntax_element","syntax_node","syntax_node_ptr","ted","text_len","text_len","text_range","text_range","text_range","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_syntax","token","tree","try_fold_chunks","try_for_each_chunk","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_raw","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up_to","upcast","utils","with_range","TreeDiff","ancestors_at_offset","borrow","borrow_mut","diff","find_node_at_offset","find_node_at_range","fmt","from","has_errors","into","into_text_edit","is_empty","least_common_ancestor","neighbor","non_trivia_sibling","skip_trivia_token","skip_whitespace_token","try_from","try_into","type_id","ALL","Abi","Add","Adt","And","AnyHasArgList","AnyHasAttrs","AnyHasDocComments","AnyHasGenericParams","AnyHasLoopBody","AnyHasModuleItem","AnyHasName","AnyHasTypeBounds","AnyHasVisibility","ArgList","ArithOp","ArithOp","ArrayExpr","ArrayExpr","ArrayExprKind","ArrayType","ArrayType","Assignment","AssocItem","AssocItemList","AssocTypeArg","AssocTypeArg","AstChildren","AstNode","AstToken","Async","Attr","AttrDocCommentIter","AttrKind","AwaitExpr","AwaitExpr","BinExpr","BinExpr","Binary","BinaryOp","BitAnd","BitOr","BitXor","Block","Block","BlockExpr","BlockExpr","BlockModifier","Bool","BoxExpr","BoxExpr","BoxPat","BoxPat","BreakExpr","BreakExpr","Byte","Byte","ByteString","ByteString","CString","CString","Call","CallExpr","CallExpr","CallableExpr","CastExpr","CastExpr","Char","Char","ClosureExpr","ClosureExpr","CmpOp","CmpOp","Comment","CommentKind","CommentPlacement","CommentShape","Const","Const","Const","Const","Const","ConstArg","ConstArg","ConstBlockPat","ConstBlockPat","ConstParam","ConstParam","ContinueExpr","ContinueExpr","CrateKw","Decimal","Deref","Div","DocCommentIter","DynTraitType","DynTraitType","ElementList","ElseBranch","Enum","Enum","Enum","Eq","Exclusive","Expr","ExprStmt","ExprStmt","ExternBlock","ExternBlock","ExternCrate","ExternCrate","ExternItem","ExternItemList","FieldExpr","FieldExpr","FieldKind","FieldList","FloatNumber","FloatNumber","Fn","Fn","Fn","Fn","FnPtrType","FnPtrType","ForExpr","ForExpr","ForType","ForType","ForType","GenericArg","GenericArgList","GenericParam","GenericParamList","Greater","HasArgList","HasAttrs","HasDocComments","HasGenericParams","HasLoopBody","HasModuleItem","HasName","HasTypeBounds","HasVisibility","Hexadecimal","Ident","IdentPat","IdentPat","IfExpr","IfExpr","IfExpr","Impl","Impl","ImplTraitType","ImplTraitType","In","Inclusive","Index","IndexExpr","IndexExpr","InferType","InferType","Inner","Inner","IntNumber","IntNumber","IsString","Item","Item","ItemList","Label","Label","Less","LetElse","LetExpr","LetExpr","LetStmt","LetStmt","Lifetime","Lifetime","Lifetime","LifetimeArg","LifetimeArg","LifetimeParam","LifetimeParam","Line","Literal","Literal","LiteralKind","LiteralPat","LiteralPat","LogicOp","LogicOp","LoopExpr","LoopExpr","Macro","MacroCall","MacroCall","MacroCall","MacroCall","MacroDef","MacroDef","MacroDef","MacroExpr","MacroExpr","MacroItems","MacroPat","MacroPat","MacroRules","MacroRules","MacroRules","MacroStmts","MacroType","MacroType","MatchArm","MatchArmList","MatchExpr","MatchExpr","MatchGuard","Meta","MethodCall","MethodCallExpr","MethodCallExpr","Module","Module","Mul","MutRef","Name","Name","Name","Name","Name","NameLike","NameOrNameRef","NameRef","NameRef","NameRef","Neg","NeverType","NeverType","Not","Octal","Or","OrPat","OrPat","Ord","Ordering","Outer","Outer","Owned","Param","ParamList","ParenExpr","ParenExpr","ParenPat","ParenPat","ParenType","ParenType","Pat","Path","PathExpr","PathExpr","PathPat","PathPat","PathSegment","PathSegmentKind","PathType","PathType","PathType","PrefixExpr","PrefixExpr","PtrType","PtrType","Pub","PubCrate","PubSelf","PubSuper","QuoteOffsets","RAW_PREFIX","Radix","RangeExpr","RangeExpr","RangeOp","RangePat","RangePat","Record","RecordExpr","RecordExpr","RecordExprField","RecordExprFieldList","RecordField","RecordFieldList","RecordFieldList","RecordPat","RecordPat","RecordPatField","RecordPatFieldList","Ref","RefExpr","RefExpr","RefPat","RefPat","RefType","RefType","Rem","Rename","Repeat","RestPat","RestPat","RetType","ReturnExpr","ReturnExpr","SelfKw","SelfParam","SelfParamKind","SelfTypeKw","Self_token","Shl","Shr","SlicePat","SlicePat","SlicePatComponents","SliceType","SliceType","SourceFile","Static","Static","Static","Stmt","StmtList","String","String","Struct","Struct","Struct","StructKind","Sub","SuperKw","TokenTree","Trait","Trait","Trait","TraitAlias","TraitAlias","TraitAlias","TraitOrAlias","Try","TryExpr","TryExpr","Tuple","TupleExpr","TupleExpr","TupleField","TupleFieldList","TupleFieldList","TuplePat","TuplePat","TupleStructPat","TupleStructPat","TupleType","TupleType","Type","Type","Type","TypeAlias","TypeAlias","TypeAlias","TypeAlias","TypeArg","TypeArg","TypeBound","TypeBoundKind","TypeBoundList","TypeOrConstParam","TypeParam","TypeParam","UnaryOp","UnderscoreExpr","UnderscoreExpr","Union","Union","Union","Unit","Unsafe","Use","Use","UseTree","UseTreeList","Variant","VariantList","Visibility","VisibilityKind","WhereClause","WherePred","WhileExpr","WhileExpr","Whitespace","WildcardPat","WildcardPat","YeetExpr","YeetExpr","YieldExpr","YieldExpr","abi","abi","abi","add_arm","add_field","add_field","add_generic_param","add_item","add_predicate","add_use_tree","add_variant","amp_token","amp_token","amp_token","amp_token","arg_list","arg_list","args","args","arms","as_lifetime","as_name_ref","as_simple_atom","as_simple_call","as_single_name_ref","as_single_segment","as_token","as_token","as_token","as_tuple_field","assoc_item_list","assoc_item_list","assoc_items","async_token","async_token","async_token","async_token","at_token","attrs","attrs","auto_token","await_token","base","block_expr","block_expr","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","box_token","box_token","break_token","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_for_update","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_subtree","close_quote_text_range","close_quote_text_range","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","coloncolon_token","coloncolon_token","coloncolon_token","coloncolon_token","comma_token","comma_token","components","condition","condition","condition","const_arg","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","contents","continue_token","crate_token","crate_token","crate_token","default_token","default_token","default_token","default_token","default_type","default_val","do_token","doc","doc_comment","doc_comments","doc_comments","doc_comments_and_attrs","doc_comments_and_attrs","dot_token","dot_token","dot_token","dotdot_token","dotdot_token","dotdotdot_token","dyn_token","edit","edit_in_place","else_branch","else_token","else_token","end","end","enum_token","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","escaped_char_ranges","escaped_char_ranges","excl_token","excl_token","excl_token","excl_token","excl_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","exprs","extern_item_list","extern_items","extern_token","extern_token","fat_arrow_token","field_access","field_list","field_list","field_name","field_name","fields","fields","fields","fields","fields","fields","fields","fields","first_qualifier_or_self","first_segment","float_value","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_field_name","for_field_name","for_field_name_ref","for_name_ref","for_token","for_token","for_token","for_token","for_token","for_trait_name_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_syntax_node","from_syntax_node","generic_arg_list","generic_arg_list","generic_arg_list","generic_args","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_params","get_or_create_assoc_item_list","get_or_create_body","get_or_create_generic_arg_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_use_tree_list","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","guard","has_atom_attr","has_atom_attr","has_inner_comment","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ident_token","ident_token","if_token","if_token","impl_token","impl_token","in_token","in_token","index","index_token","initializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_block","is_block_like","is_doc","is_inner","is_inner","is_line","is_outer","is_outer","is_raw","is_raw","is_simple_glob","is_simple_ident","is_simple_path","is_standalone","item_list","items","items","iterable","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind","l_angle_token","l_angle_token","l_angle_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","label","label","label","left_delimiter_token","let_else","let_token","let_token","lhs","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime_args","lifetime_bounds","lifetime_ident_token","lifetime_params","literal","loop_body","loop_body","loop_body","loop_body","loop_token","macro_call","macro_call","macro_call","macro_rules_token","macro_token","make","map_range_up","map_range_up","match_arm_list","match_token","meta","minus_token","mod_token","modifier","move_token","mut_token","mut_token","mut_token","mut_token","mut_token","mut_token","mut_token","name","name","name","name","name","name_ref","name_ref","name_ref","name_ref","name_ref","name_ref","name_ref","needs_parens_in","new","new","new","new","new","new","new","new","new","next","next","next","op_details","op_kind","op_kind","op_kind","op_token","op_token","op_token","open_quote_text_range","open_quote_text_range","param_list","param_list","param_list","param_list","param_list","params","parent","parent_attr","parent_enum","parent_meta","parent_path","parent_path","parent_record_lit","parent_record_pat","parent_use_tree","parse","pat","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path_type","pats","pats","pipe_token","pound_token","prec","predicates","prefix","prefix","prefix","pub_token","push_front","qualifier","qualifiers","question_mark_token","question_mark_token","quote_offsets","quote_offsets","quotes","r_angle_token","r_angle_token","r_angle_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","radix","raw_token","receiver","record_expr_field_list","record_field_list","record_pat_field_list","ref_token","remove","remove","remove","remove","remove_default","remove_default","remove_generic_param","rename","rename","replace_expr","rest_pat","ret_type","ret_type","ret_type","ret_type","ret_type","return_token","rhs","right_delimiter_token","segment","segments","self_param","self_token","self_token","self_token","self_ty","self_type_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","shape","shebang_token","simple_name","slice","spans_multiple_lines","split_into_parts","split_into_parts","split_prefix","spread","star_token","star_token","start","start","statements","statements","statements","static_token","static_token","stmt_list","struct_token","sub_exprs","suffix","suffix","suffix","super_token","super_token","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","tail_expr","tail_expr","text","text","text","text","text","text","text_range_between_quotes","text_range_between_quotes","then_branch","thin_arrow_token","tilde_token","to_generic_args","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token","token_kind","token_tree","token_tree","token_tree","token_tree","token_trees_and_tokens","top_path","trait_","trait_token","trait_token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_bound_list","type_bound_list","type_bound_list","type_bound_list","type_bound_list","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_or_const_params","type_token","underscore_token","underscore_token","underscore_token","underscore_token","underscore_token","union_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","use_token","use_tree","use_tree_list","use_trees","value","value","value","value","value","value","value","variant_list","variants","visibility","visibility","where_clause","where_clause","where_token","while_token","yeet_token","yield_token","initializer","repeat","op","negated","ordering","strict","trait_ref","type_ref","AstNodeEdit","IndentLevel","add","borrow","borrow_mut","clone","clone_into","dedent","fmt","fmt","from","from","from_element","from_node","from_token","indent","indent_level","into","is_zero","reset_indent","single","to_owned","to_string","try_from","try_into","type_id","AttrsOwnerEdit","GenericParamsOwnerEdit","Indent","Removable","dedent","get_or_create_generic_param_list","get_or_create_where_clause","indent","indent_level","reindent_to","remove","remove_attrs_and_docs","arg_list","assoc_item_list","block_expr","expr_assignment","expr_await","expr_bin_op","expr_break","expr_call","expr_closure","expr_continue","expr_empty_block","expr_field","expr_for_loop","expr_if","expr_let","expr_literal","expr_loop","expr_macro_call","expr_match","expr_method_call","expr_paren","expr_path","expr_prefix","expr_ref","expr_return","expr_stmt","expr_try","expr_tuple","expr_unit","ext","fn_","generic_param_list","hacky_block_expr","ident_pat","impl_","impl_trait","impl_trait_type","item_const","join_paths","let_else_stmt","let_stmt","lifetime","lifetime_arg","lifetime_param","literal_pat","match_arm","match_arm_list","match_arm_with_guard","name","name_ref","param","param_list","path_concat","path_from_segments","path_from_text","path_pat","path_qualified","path_segment","path_segment_crate","path_segment_self","path_segment_super","path_segment_ty","path_unqualified","record_expr","record_expr_field","record_expr_field_list","record_field","record_field_list","record_pat","record_pat_field","record_pat_field_list","record_pat_field_shorthand","record_pat_with_fields","ret_type","self_param","slice_pat","struct_","tail_only_block_expr","token","tokens","tuple_field","tuple_field_list","tuple_pat","tuple_struct_pat","ty","ty_alias","ty_path","ty_placeholder","ty_ref","ty_tuple","ty_unit","type_arg","type_bound","type_bound_list","type_param","use_","use_tree","use_tree_glob","use_tree_list","variant","visibility_pub","visibility_pub_crate","where_clause","where_pred","wildcard_pat","default_bool","empty_block_expr","empty_char","empty_str","expr_todo","expr_ty_default","expr_ty_new","expr_unreachable","field_from_idents","ident_path","option_none","path_from_idents","simple_ident_pat","ty_bool","ty_name","ty_option","ty_result","zero_float","zero_number","WsBuilder","blank_line","borrow","borrow_mut","doc_comment","from","into","literal","new","single_newline","single_space","try_from","try_into","type_id","whitespace","ws","parse_expr_from_str","Element","Position","after","append_child","append_child_raw","before","borrow","borrow_mut","first_child_of","fmt","from","insert","insert_all","insert_all_raw","insert_raw","into","last_child_of","remove","remove_all","remove_all_iter","replace","replace_all","replace_with_many","syntax_element","try_from","try_into","type_id","is_raw_identifier","path_to_string_stripping_turbo_fish"],"q":[[0,"syntax"],[726,"syntax::algo"],[747,"syntax::ast"],[5445,"syntax::ast::ArrayExprKind"],[5447,"syntax::ast::BinaryOp"],[5448,"syntax::ast::CmpOp"],[5451,"syntax::ast::PathSegmentKind"],[5453,"syntax::ast::edit"],[5479,"syntax::ast::edit_in_place"],[5491,"syntax::ast::make"],[5596,"syntax::ast::make::ext"],[5615,"syntax::ast::make::tokens"],[5631,"syntax::hacks"],[5632,"syntax::ted"],[5659,"syntax::utils"]],"d":["","","","","","","","","","","","","","","","","","Like <code>SyntaxNodePtr</code>, but remembers the type of node.","","","","","","","","","","","","Offset is exactly between two leaves.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fired before traversing the node.","","","","","","","","","","","","","","","Internal node in the immutable tree. It has other nodes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fired after the node is traversed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No leaves at offset – possible for the empty file.","","","","","","","","","","","","","","","","","","","","","","","<code>Parse</code> is the result of the parsing: a syntax tree and a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only a single leaf at offset.","A <code>SmolStr</code> is a string type that has the following …","<code>SourceFile</code> represents a parse tree for a single Rust file.","","","Represents the result of unsuccessful tokenization, parsing","The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.","","","A “pointer” to a <code>SyntaxNode</code>, via location in the …","","","","","","","","","","","","","","","","","","","","","","","","","","A range in text, represented as a pair of <code>TextSize</code>.","A measure of text length. Also, equivalently, an index …","","There might be zero, one or two leaves at a given offset.","","","","","","","","","","","","","","","","","","","","","<code>WalkEvent</code> describes tree walking process.","","","","","","","","","","","","","","Collection of assorted algorithms for syntax trees.","","","","","","","","","Abstract Syntax Tree, layered on top of untyped <code>SyntaxNode</code>s","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if this range contains an offset.","","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","","","","","","","","","Create a zero-length range at the specified offset (…","The end point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Things which exist to solve practical issues, but which …","","","","","","","","","","","","","The range covered by both ranges, if it exists. If the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Check if this range is empty.","","","","","","","Returns kind of this element.","","Returns kind of this element.","","","","","Convert to option, preferring the left leaf in case of a …","","The size of this range.","","","","Matches a <code>SyntaxNode</code> against an <code>ast</code> type.","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","Creates new Node.","","","","Constructs inline variant of <code>SmolStr</code>.","","","","","","The text size of some primitive text-like object.","","Relative order of the two ranges (overlapping ranges are …","","","","","","","","","","","","","","Convert to option, preferring the right leaf in case of a …","","","","The start point of this range.","","","","","","","","","","","","","","","","","Primitive tree editor, ed for trees.","Returns the length of the text covered by this element.","Returns the length of the text covered by this element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>SyntaxNodePtr::cast</code> but the trait bounds work out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a range up to the given end (<code>..end</code>).","","A set of utils methods to reuse on other abstraction levels","","","Returns ancestors of the node at the offset, sorted by …","","","Finds a (potentially minimal) diff, which, applied to <code>from</code>…","Finds a node of specific Ast type at offset. Note that …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Finds the first sibling in the given direction which is …","Skip to next non <code>trivia</code> token","Skip to next non <code>whitespace</code> token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over <code>SyntaxNode</code> children of a particular AST …","The main trait to go from untyped <code>SyntaxNode</code>  to a typed …","Like <code>AstNode</code>, but wraps tokens rather than interior nodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>*</code>","","","","","","","","","","","<code>..</code>","","","","","","","","","","","","","","","","","","","","","","","","","","for&lt;’a&gt; …","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>..=</code>","","","","","","","","","","","","","","","","","","","","","","","","’a","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&amp;mut self","","","","","","","","","","","<code>-</code>","","","<code>!</code>","","","","","","","","","self","","","","","","","","","","","","","","","","","","","Trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&amp;self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attention! This function does align the first line of <code>item</code> …eturns the textual content of a doc comment node as a …","","","","","","","","","","","","This module contains functions for editing syntax trees. …","Structural editing for asteals with field init shorthand","Deals with field init shorthand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns <code>true</code> if the attr_kind is <code>Inner</code>.","","","Returns <code>true</code> if the attr_kind is <code>Outer</code>.","","","","","","false if the block is an intrinsic part of the syntax and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module contains free-standing functions for creating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>self</code> would need to be wrapped in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the parent ast::Module, this is different than the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Precedence representation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the existing generic param","","","This will either replace the initializer, or in the case …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Splits off the given prefix, making it the path component …onstructs a matching <code>ast::GenericArgList</codeoft-deprecated in favor of mutable tree editing API …","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","While the parent module defines basic atomic “…","","","Ideally this function wouldn’t exist since it involves …","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>BindPat</code> if the path has just one segment, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a tuple of patterns from an iterator of patterns.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Utility trait to allow calling <code>ted</code> functions with …","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"ifc":[593],"p":[[3,"TextRange"],[3,"TextSize"],[4,"Delta"],[3,"SyntaxNode"],[3,"SyntaxToken"],[4,"NodeOrToken"],[8,"Iterator"],[8,"Language"],[3,"SyntaxNode"],[3,"SyntaxToken"],[4,"Option"],[3,"SmolStr"],[15,"str"],[3,"TokenText"],[3,"GreenNode"],[3,"GreenNodeData"],[8,"AstNode"],[3,"AstPtr"],[6,"SyntaxNode"],[3,"Parse"],[3,"SyntaxText"],[15,"char"],[4,"SyntaxKind"],[8,"Clone"],[4,"Direction"],[4,"WalkEvent"],[4,"TokenAtOffset"],[4,"RustLanguage"],[3,"SyntaxError"],[4,"Ordering"],[8,"Ord"],[15,"bool"],[3,"SourceFile"],[3,"String"],[3,"SyntaxTreeBuilder"],[4,"Bound"],[8,"PartialEq"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Debug"],[8,"Display"],[8,"FnMut"],[3,"Global"],[3,"Box"],[4,"Cow"],[6,"SyntaxNodePtr"],[15,"u32"],[15,"u16"],[3,"GreenToken"],[3,"GreenTokenData"],[8,"IntoIterator"],[8,"Hasher"],[8,"Hash"],[15,"usize"],[3,"SyntaxKind"],[8,"FnOnce"],[8,"Fn"],[8,"AsRef"],[8,"Into"],[3,"Preorder"],[8,"TextLen"],[3,"Vec"],[3,"Arc"],[8,"PartialOrd"],[3,"Indel"],[8,"SyntaxTextRange"],[6,"SyntaxElement"],[6,"SyntaxToken"],[3,"TryFromIntError"],[3,"TypeId"],[3,"TreeDiff"],[3,"TextEditBuilder"],[3,"NameRef"],[3,"ExternBlock"],[3,"Abi"],[3,"Fn"],[3,"FnPtrType"],[3,"MatchArmList"],[3,"MatchArm"],[3,"RecordExprFieldList"],[3,"RecordExprField"],[3,"RecordPatFieldList"],[3,"RecordPatField"],[3,"GenericParamList"],[4,"GenericParam"],[3,"AssocItemList"],[4,"AssocItem"],[3,"WhereClause"],[3,"WherePred"],[3,"UseTreeList"],[3,"UseTree"],[3,"VariantList"],[3,"Variant"],[3,"SelfParam"],[3,"RefExpr"],[3,"RefType"],[3,"RefPat"],[3,"ArgList"],[3,"MacroDef"],[3,"TokenTree"],[4,"Expr"],[3,"AstChildren"],[4,"NameLike"],[3,"Lifetime"],[3,"Attr"],[3,"Path"],[3,"PathSegment"],[3,"Rename"],[3,"CastExpr"],[3,"Impl"],[3,"Trait"],[3,"BlockExpr"],[3,"ClosureExpr"],[3,"IdentPat"],[3,"AwaitExpr"],[3,"IndexExpr"],[3,"LetElse"],[3,"ConstBlockPat"],[3,"Const"],[3,"Static"],[3,"TypeBoundList"],[3,"TypeBound"],[3,"BoxExpr"],[3,"BoxPat"],[3,"BreakExpr"],[8,"Sized"],[3,"Name"],[3,"GenericArgList"],[3,"ParamList"],[3,"RetType"],[3,"PathType"],[3,"TypeArg"],[3,"AssocTypeArg"],[3,"LifetimeArg"],[3,"ConstArg"],[3,"MacroCall"],[3,"MacroItems"],[3,"MacroStmts"],[3,"Enum"],[3,"ExternCrate"],[3,"MacroRules"],[3,"Module"],[3,"Struct"],[3,"TraitAlias"],[3,"TypeAlias"],[3,"Union"],[3,"Use"],[3,"Visibility"],[3,"ItemList"],[3,"Param"],[3,"RecordFieldList"],[3,"TupleFieldList"],[3,"RecordField"],[3,"TupleField"],[3,"ExternItemList"],[3,"ConstParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"Meta"],[3,"ExprStmt"],[3,"LetStmt"],[3,"ArrayExpr"],[3,"BinExpr"],[3,"CallExpr"],[3,"ContinueExpr"],[3,"FieldExpr"],[3,"ForExpr"],[3,"IfExpr"],[3,"Literal"],[3,"LoopExpr"],[3,"MacroExpr"],[3,"MatchExpr"],[3,"MethodCallExpr"],[3,"ParenExpr"],[3,"PathExpr"],[3,"PrefixExpr"],[3,"RangeExpr"],[3,"RecordExpr"],[3,"ReturnExpr"],[3,"TryExpr"],[3,"TupleExpr"],[3,"WhileExpr"],[3,"YieldExpr"],[3,"YeetExpr"],[3,"LetExpr"],[3,"UnderscoreExpr"],[3,"StmtList"],[3,"Label"],[3,"MatchGuard"],[3,"ArrayType"],[3,"DynTraitType"],[3,"ForType"],[3,"ImplTraitType"],[3,"InferType"],[3,"MacroType"],[3,"NeverType"],[3,"ParenType"],[3,"PtrType"],[3,"SliceType"],[3,"TupleType"],[3,"RestPat"],[3,"LiteralPat"],[3,"MacroPat"],[3,"OrPat"],[3,"ParenPat"],[3,"PathPat"],[3,"WildcardPat"],[3,"RangePat"],[3,"RecordPat"],[3,"SlicePat"],[3,"TuplePat"],[3,"TupleStructPat"],[4,"GenericArg"],[4,"Type"],[4,"Item"],[4,"Stmt"],[4,"Pat"],[4,"FieldList"],[4,"Adt"],[4,"ExternItem"],[3,"AnyHasArgList"],[3,"AnyHasAttrs"],[3,"AnyHasDocComments"],[3,"AnyHasGenericParams"],[3,"AnyHasLoopBody"],[3,"AnyHasModuleItem"],[3,"AnyHasName"],[3,"AnyHasTypeBounds"],[3,"AnyHasVisibility"],[3,"Whitespace"],[3,"Comment"],[3,"String"],[3,"ByteString"],[3,"CString"],[3,"IntNumber"],[3,"FloatNumber"],[3,"Char"],[3,"Byte"],[3,"Ident"],[4,"Macro"],[4,"TypeOrConstParam"],[4,"TraitOrAlias"],[4,"CallableExpr"],[3,"CommentKind"],[4,"CommentShape"],[4,"CommentPlacement"],[4,"Radix"],[4,"AttrKind"],[4,"PathSegmentKind"],[4,"StructKind"],[4,"NameOrNameRef"],[4,"FieldKind"],[4,"SelfParamKind"],[4,"TypeBoundKind"],[4,"ElseBranch"],[4,"LiteralKind"],[4,"RangeOp"],[4,"UnaryOp"],[4,"BinaryOp"],[4,"LogicOp"],[4,"CmpOp"],[4,"Ordering"],[4,"ArithOp"],[3,"SlicePatComponents"],[3,"DocCommentIter"],[3,"AttrDocCommentIter"],[15,"f64"],[4,"VisibilityKind"],[4,"ArrayExprKind"],[4,"BlockModifier"],[8,"HasArgList"],[8,"HasAttrs"],[8,"HasDocComments"],[8,"HasGenericParams"],[8,"HasLoopBody"],[8,"HasModuleItem"],[8,"HasName"],[8,"HasTypeBounds"],[8,"HasVisibility"],[3,"QuoteOffsets"],[15,"u128"],[15,"u8"],[3,"IndentLevel"],[4,"Either"],[3,"WsBuilder"],[8,"Element"],[3,"Position"],[3,"RangeInclusive"],[8,"IsString"],[8,"AstToken"],[13,"Repeat"],[13,"Assignment"],[13,"Eq"],[13,"Ord"],[13,"Type"],[8,"AstNodeEdit"],[8,"Indent"],[8,"GenericParamsOwnerEdit"],[8,"Removable"],[8,"AttrsOwnerEdit"]]},\
"test_utils":{"doc":"Assorted testing utilities.","t":"DRRDDGDNNEFFOLFALLLLLLLLLLMMLLLMLMFMLLLMFFFFFMLLFLLLLLLLLLLLMMMLLMMFLLFLMMLMFLLLLLLLLLLLLLLLFFFF","n":["AssertLinear","CURSOR_MARKER","ESCAPED_CURSOR_MARKER","Fixture","FixtureWithProjectMeta","FxHashMap","MiniCore","Offset","Range","RangeOrOffset","__diff","add_cursor","assert_eq_text","available_flags","bench","bench_fixture","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg_atoms","cfg_key_values","clone","clone_into","default","deps","drop","edition","ensure_file_contents","env","eq","expect_offset","expect_range","extern_prelude","extract_annotations","extract_offset","extract_range","extract_range_or_offset","extract_tags","fixture","fmt","fmt","format_diff","from","from","from","from","from","from_flags","into","into","into","into","into","introduce_new_source_root","krate","mini_core","next_round","parse","path","proc_macro_names","project_root","range_or_empty","sample","skip_slow_tests","source_code","target_data_layout","text","to_owned","toolchain","try_ensure_file_contents","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","big_struct","big_struct_n","glorious_old_parser","numerous_macro_rules"],"q":[[0,"test_utils"],[92,"test_utils::bench_fixture"]],"d":["","","","","","Type alias for a hashmap using the <code>fx</code> hash algorithm.","","","","","","Inserts <code>$0</code> marker into the <code>text</code> at <code>offset</code>.","Asserts that two strings are equal, otherwise displays a …","","Utility for writing benchmark tests.","Generates large snippets of Rust code for usage in the …","","","","","","","","","","","","","","","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","Extracts <code>//^^^ some text</code> annotations.","Infallible version of <code>try_extract_offset()</code>.","Infallible version of <code>try_extract_range()</code>.","Extracts <code>TextRange</code> or <code>TextSize</code> depending on the amount of …","Extracts ranges, marked with <code>&lt;tag&gt; &lt;/tag&gt;</code> pairs from the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Parses text which looks like this:","","","Returns the path to the root directory of <code>rust-analyzer</code> …","","","Returns <code>false</code> if slow tests should not run, otherwise …","Strips parts of minicore.rs which are flagged by inactive …","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,9,9,0,0,0,0,18,0,0,18,19,10,12,9,18,19,10,12,9,12,12,9,9,10,12,10,12,0,12,12,9,9,12,0,0,0,0,0,19,12,9,0,18,19,10,12,9,18,18,19,10,12,9,12,12,19,10,19,12,19,0,9,10,0,18,12,12,9,19,0,18,19,10,12,9,18,19,10,12,9,18,19,10,12,9,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[1,1],[[4,[2,3]]]],[[1,5],6],0,[[],7],[1,8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[9,9],[[]],[[],10],0,[10],0,[[11,1]],0,[[12,12],13],[9,5],[9,14],0,[1,4],[1],[1],[1],[[1,1]],0,[[12,15],16],[[9,15],16],[[[4,[2]]],6],[[]],[[]],[[]],[[]],[[]],[17,18],[[]],[[]],[[]],[[]],[[]],0,0,0,[10,13],[1,19],0,0,[[],20],[9,14],[[10,21,21]],[[],13],[18,6],0,0,[[]],0,[[11,1],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],6],[24,6],[[],6],[[],6]],"c":[],"p":[[15,"str"],[4,"Chunk"],[3,"Global"],[3,"Vec"],[3,"TextSize"],[3,"String"],[8,"Iterator"],[8,"Drop"],[4,"RangeOrOffset"],[3,"AssertLinear"],[3,"Path"],[3,"Fixture"],[15,"bool"],[3,"TextRange"],[3,"Formatter"],[6,"Result"],[8,"IntoIterator"],[3,"MiniCore"],[3,"FixtureWithProjectMeta"],[3,"PathBuf"],[15,"f64"],[4,"Result"],[3,"TypeId"],[15,"u32"]]},\
"text_edit":{"doc":"Representation of a <code>TextEdit</code>.","t":"DDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Indel","TextEdit","TextEditBuilder","TextRange","TextSize","add","add","add","add","add","add","add_assign","add_assign","apply","apply","apply_to_offset","at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","contains_inclusive","contains_range","cover","cover_offset","default","default","default","default","delete","delete","delete","delete","empty","end","end_bound","eq","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","insert","insert","insert","insert","intersect","into","into","into","into","into","into_iter","into_iter","invalidates_offset","is_empty","is_empty","is_empty","iter","len","len","new","of","ordering","partial_cmp","replace","replace","replace","start","start_bound","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","up_to"],"q":[[0,"text_edit"]],"d":["<code>InsertDelete</code> – a single “atomic” change to text","","","A range in text, represented as a pair of <code>TextSize</code>.","A measure of text length. Also, equivalently, an index …","","","","","","","","","","","","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","","","","","","","","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","","","","","","Refers to offsets in the original text","Create a zero-length range at the specified offset (…","The end point of this range.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","The range covered by both ranges, if it exists. If the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Check if this range is empty.","","","The size of this range.","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","The text size of some primitive text-like object.","Relative order of the two ranges (overlapping ranges are …","","","","","The start point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a range up to the given end (<code>..end</code>)."],"i":[0,0,0,0,0,1,1,1,2,2,2,1,2,3,5,5,1,3,5,7,1,2,3,5,7,1,2,5,1,2,1,2,3,5,7,1,2,3,5,7,1,2,2,1,1,1,1,1,5,7,1,2,3,5,7,3,1,1,1,3,1,2,7,3,5,7,1,2,3,5,7,1,2,2,3,1,2,3,5,7,3,1,3,5,7,1,2,5,5,7,5,7,1,5,5,1,1,2,1,2,3,5,7,1,1,1,1,1,2,2,2,1,2,2,3,5,7,1,2,3,5,7,1,2,2,3,5,7,1,2,3,5,7,1,2,5,1],"f":[0,0,0,0,0,[[1,2],1],[[1,2],1],[1,1],[[2,2],2],[[2,2],2],[2,2],[1],[2],[[3,4]],[[5,4]],[[5,2],[[6,[2]]]],[[2,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[1,2],[[6,[1]]]],[[2,2],[[6,[2]]]],[[1,2],[[6,[1]]]],[[2,2],[[6,[2]]]],[3,3],[5,5],[7,7],[1,1],[2,2],[[]],[[]],[[]],[[]],[[]],[[2,2],8],[[1,2],9],[[1,2],9],[[1,1],9],[[1,1],1],[[1,2],1],[[],5],[[],7],[[],1],[[],2],[1,3],[1,5],[[7,1]],0,[2,1],[1,2],[1,[[10,[2]]]],[[3,3],9],[[1,1],9],[[2,2],9],[7,5],[[3,11],12],[[5,11],12],[[7,11],12],[[1,11],[[14,[13]]]],[[2,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[15,2],[[]],[[3,16]],[[1,16]],[[2,16]],[[2,4],3],[[2,4],5],[[7,2,4]],0,[[1,1],[[6,[1]]]],[[]],[[]],[[]],[[]],[[]],[5],[5],[[7,2],9],[5,9],[7,9],[1,9],[5,[[17,[3]]]],[5,18],[1,2],[[2,2],1],[19,2],[[1,1],8],[[2,2],[[6,[8]]]],[[1,4],3],[[1,4],5],[[7,1,4]],[1,2],[1,[[10,[2]]]],[1,1],[[1,2],1],[[1,2],1],[[2,2],2],[[2,2],2],[2,2],[1],[2],[20,2],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[18,[[14,[2,21]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],22],[[],22],[[],22],[[],22],[[],22],[[5,5],[[14,[5]]]],[2,1]],"c":[],"p":[[3,"TextRange"],[3,"TextSize"],[3,"Indel"],[3,"String"],[3,"TextEdit"],[4,"Option"],[3,"TextEditBuilder"],[4,"Ordering"],[15,"bool"],[4,"Bound"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[15,"u32"],[8,"Hasher"],[3,"Iter"],[15,"usize"],[8,"TextLen"],[8,"Iterator"],[3,"TryFromIntError"],[3,"TypeId"]]},\
"toolchain":{"doc":"Discovery of <code>cargo</code> &amp; <code>rustc</code> executables.","t":"FFFF","n":["cargo","rustc","rustfmt","rustup"],"q":[[0,"toolchain"]],"d":["","","",""],"i":[0,0,0,0],"f":[[[],1],[[],1],[[],1],[[],1]],"c":[],"p":[[3,"PathBuf"]]},\
"tt":{"doc":"<code>tt</code> crate defines a <code>TokenTree</code> data structure: this is the …","t":"NNNDEDNNNENDNNDNDEDNDDESSLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLFMLMMMMMLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGCGGGGCGGCGSALLLGGG","n":["Alone","Brace","Bracket","Delimiter","DelimiterKind","Ident","Ident","Invisible","Joint","Leaf","Leaf","Literal","Literal","Parenthesis","Punct","Punct","SmolStr","Spacing","Subtree","Subtree","SyntaxContext","TokenId","TokenTree","UNSPECIFIED","UNSPECIFIED","as_debug_string","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","char","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","count","default","delimiter","deref","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_heap_allocated","kind","len","new","new","new_inline","new_inline_from_ascii","open","partial_cmp","pretty","spacing","span","span","span","span","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_id","token_trees","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unspecified","unspecified","Cursor","Leaf","Subtree","TokenBuffer","TokenTreeRef","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bump","bump_subtree","clone","clone_into","cloned","end","eof","eq","fmt","fmt","fmt","from","from","from","from_subtree","from_tokens","into","into","into","is_root","subtree","to_owned","token_tree","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Delimiter","DelimiterKind","Ident","Leaf","Literal","Punct","Spacing","Span","Subtree","TokenId","TokenTree","UNSPECIFIED","buffer","empty","empty","unspecified","Cursor","TokenBuffer","TokenTreeRef"],"q":[[0,"tt"],[252,"tt::buffer"],[296,"tt::token_id"],[312,"tt::token_id::buffer"]],"d":["","","","","","Identifier or keyword. Unlike rustc, we keep “r#” …","","","","","","","","","","","A <code>SmolStr</code> is a string type that has the following …","","","","","Represents identity of the token.","","","","A simple line string used for debugging","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stateful iteration over token trees.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Count the number of tokens recursively","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constructs inline variant of <code>SmolStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A safe version of <code>Cursor</code> from <code>syn</code> crate …","","","A token tree buffer The safe version of <code>syn</code> <code>TokenBuffer</code>","","Creates a cursor referencing the first token in the buffer …","","","","","","","Bump the cursor","Bump the cursor, if it is a subtree, returns a cursor into …","","","","If the cursor is pointing at the end of a subtree, returns …","Check whether it is eof","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether it is a top level","If the cursor is pointing at a <code>Subtree</code>, returns a cursor …","","If the cursor is pointing at a <code>TokenTree</code>, returns it","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[14,11,11,0,0,0,9,11,14,0,8,0,9,11,0,9,0,0,0,8,0,0,0,5,10,1,3,3,5,3,3,6,8,9,1,10,11,12,13,14,15,5,3,6,8,9,1,10,11,12,13,14,15,0,13,5,3,6,8,9,1,10,11,12,13,14,15,5,3,6,8,9,1,10,11,12,13,14,15,10,3,1,3,1,3,8,1,5,3,3,3,3,3,6,8,9,1,10,11,12,13,14,15,5,3,3,6,8,8,9,9,1,1,10,11,12,12,13,13,14,15,15,5,3,3,3,3,3,3,3,6,8,8,8,9,9,9,9,1,10,11,12,13,14,15,3,3,3,3,3,5,3,6,8,9,1,10,11,12,13,14,15,5,3,6,8,9,1,10,11,12,13,14,15,3,3,10,3,3,15,3,3,10,3,0,13,9,12,13,15,12,15,5,3,6,8,9,1,10,11,12,13,14,15,3,3,8,9,1,12,13,15,0,1,5,3,6,8,9,1,10,11,12,13,14,15,5,3,6,8,9,1,10,11,12,13,14,15,5,3,6,8,9,1,10,11,12,13,14,15,5,10,0,37,37,0,0,35,35,37,36,35,37,36,36,36,36,36,37,36,36,36,35,37,36,35,37,36,35,35,35,37,36,36,36,36,36,35,37,36,35,37,36,35,37,36,0,0,0,0,0,0,0,0,0,0,0,40,0,38,39,40,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[3,4],[[]],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5,5],[3,3],[6,6],[[[8,[7]]],[[8,[7]]]],[[[9,[7]]],[[9,[7]]]],[[[1,[7]]],[[1,[7]]]],[[[10,[7]]],[[10,[7]]]],[11,11],[[[12,[7]]],[[12,[7]]]],[[[13,[7]]],[[13,[7]]]],[14,14],[[[15,[7]]],[[15,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[3,3],16],[1,17],[[],3],0,[3,4],[[],[[8,[5]]]],[[],[[1,[5]]]],[[5,5],18],[[3,2],18],[[3,4],18],[[3,3],18],[[3,4],18],[[3,2],18],[[6,6],18],[[[8,[19]],[8,[19]]],18],[[[9,[19]],[9,[19]]],18],[[[1,[19]],[1,[19]]],18],[[[10,[19]],[10,[19]]],18],[[11,11],18],[[[12,[19]],[12,[19]]],18],[[[13,[19]],[13,[19]]],18],[[14,14],18],[[[15,[19]],[15,[19]]],18],[[5,20],21],[[3,20],[[23,[22]]]],[[3,20],[[23,[22]]]],[[6,20],21],[[[8,[24]],20],21],[[8,20],21],[[9,20],21],[[[9,[24]],20],21],[[1,20],21],[[[1,[24]],20],21],[[[10,[24]],20],21],[[11,20],21],[[12,20],21],[[[12,[24]],20],21],[[13,20],21],[[[13,[24]],20],21],[[14,20],21],[[15,20],21],[[[15,[24]],20],21],[[]],[[]],[4,3],[[[26,[4,25]]],3],[4,3],[2,3],[2,3],[[[27,[4]]],3],[[]],[1,8],[[]],[9,8],[13,9],[[]],[12,9],[15,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,3],[28,3],[28,3],[28,3],[4,[[23,[3]]]],[[5,29]],[[3,29]],[[6,29]],[[[8,[30]],29]],[[[9,[30]],29]],[[[1,[30]],29]],[[[10,[30]],29]],[[11,29]],[[[12,[30]],29]],[[[13,[30]],29]],[[14,29]],[[[15,[30]],29]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,18],[3,18],0,[3,17],[[[31,[4]]],3],[[[32,[3]]],15],[4,3],[17,3],0,[[3,3],[[33,[16]]]],[[],2],0,[9],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],5],[[],[[10,[5]]]],0,0,0,0,0,[35,36],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[36,36],[[[36,[7]]],[[36,[7]]]],[[]],[[[37,[7]]],[[8,[7]]]],[36,[[33,[1]]]],[36,18],[[36,36],18],[[[35,[24]],20],21],[[[37,[24]],20],21],[[[36,[24]],20],21],[[]],[[]],[[]],[1,35],[[],35],[[]],[[]],[[]],[36,18],[36,[[33,[36]]]],[[]],[36,[[33,[37]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],34],[[],34],[[],34],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],38],[[],39],[[],40],0,0,0],"c":[181],"p":[[3,"Subtree"],[3,"String"],[3,"SmolStr"],[15,"str"],[3,"TokenId"],[3,"SyntaxContext"],[8,"Clone"],[4,"TokenTree"],[4,"Leaf"],[3,"Delimiter"],[4,"DelimiterKind"],[3,"Literal"],[3,"Punct"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[15,"usize"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Debug"],[3,"Global"],[3,"Box"],[4,"Cow"],[8,"IntoIterator"],[8,"Hasher"],[8,"Hash"],[8,"AsRef"],[8,"Into"],[4,"Option"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"TokenTreeRef"],[6,"Subtree"],[6,"TokenTree"],[6,"Delimiter"]]},\
"vfs":{"doc":"Virtual File System","t":"DDDDEDNNDNDDLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDNENINENGLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLKMKLLKKLLLLLLLLLLLLLLMMMMMM","n":["AbsPath","AbsPathBuf","AnchoredPath","AnchoredPathBuf","ChangeKind","ChangedFile","Create","Delete","FileId","Modify","Vfs","VfsPath","absolutize","anchor","anchor","as_os_str","as_path","as_path","as_ref","as_ref","as_ref","assert","assert","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","change_kind","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","deref","display","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","exists","extension","file_contents","file_id","file_id","file_name","file_path","file_set","file_stem","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","has_changes","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_created_or_deleted","iter","join","join","loader","memory_usage","name_and_extension","name_and_extension","new_real_path","new_virtual_path","normalize","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","pop","pop","set_file_contents","starts_with","starts_with","strip_prefix","strip_prefix","take_changes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_buf","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FileSet","FileSetConfig","FileSetConfigBuilder","add_file_set","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","default","default","default","eq","equivalent","file_for_path","fmt","fmt","from","from","from","insert","into","into","into","iter","len","len","partition","path_for_file","resolve_path","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Config","Directories","Directories","Entry","Files","Handle","Loaded","Message","Progress","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_package_dependency","clone","clone","clone_into","clone_into","contains_dir","contains_dir","contains_file","contains_file","default","exclude","extensions","fmt","fmt","fmt","fmt","from","from","from","from","include","into","into","into","into","invalidate","load","load_sync","local_cargo_package","rs_files_recursively","set_config","spawn","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","watch","config_version","files","n_done","n_total"],"q":[[0,"vfs"],[185,"vfs::file_set"],[230,"vfs::loader"],[296,"vfs::loader::Message"]],"d":["Wrapper around an absolute <code>Path</code>.","Wrapper around an absolute <code>PathBuf</code>.","Path relative to a file.","Path relative to a file.","Kind of file change.","Changed file in the <code>Vfs</code>.","The file was (re-)created","The file was deleted","Handle to a file in <code>Vfs</code>","The file was modified","Storage for all files read by rust-analyzer.","Path in <code>Vfs</code>.","Equivalent of <code>Path::join</code> for <code>AbsPath</code> with an additional …","File that this path is relative to.","File that this path is relative to.","","Coerces to an <code>AbsPath</code> slice.","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","","","","Wrap the given absolute path in <code>AbsPathBuf</code>","Wrap the given absolute path in <code>AbsPath</code>","","","","","","","","","","","","","","","","","","","","","Kind of change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the change is not <code>Delete</code>.","","File content corresponding to the given <code>file_id</code>.","Id of the given path if it exists in the <code>Vfs</code> and is not …","Id of the changed file","","File path corresponding to the given <code>file_id</code>.","Partitions a list of files into disjoint subsets.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>true</code> if the <code>Vfs</code> contains changes.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the change is <code>Create</code> or <code>Delete</code>.","Returns an iterator over the stored ids and their …","Equivalent of <code>Path::join</code> for <code>AbsPath</code>.","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","Object safe interface for file watching and reading.","Returns the overall memory usage for the stored files.","","Returns <code>self</code>’s base name and file extension.","Create a path from string. Input should be a string …","Creates an “in-memory” path from <code>/</code>-separated string.","Normalize the given path:","Equivalent of <code>Path::parent</code> for <code>AbsPath</code>.","Returns the <code>VfsPath</code> without its final component, if there …","","","","","Path relative to <code>anchor</code>’s containing directory.","Path relative to <code>anchor</code>’s containing directory.","Equivalent of <code>PathBuf::pop</code> for <code>AbsPathBuf</code>.","Remove the last component of <code>self</code> if there is one.","Update the <code>path</code> with the given <code>contents</code>. <code>None</code> means the …","","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","Equivalent of <code>Path::strip_prefix</code> for <code>AbsPath</code>.","","Drain and returns all the changes in the <code>Vfs</code>.","","","","","","","","Equivalent of <code>Path::to_path_buf</code> for <code>AbsPath</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of <code>VfsPath</code>s identified by <code>FileId</code>s.","This contains path prefixes to partition a <code>Vfs</code> into <code>FileSet</code>…","Builder for <code>FileSetConfig</code>.","Add a new set of paths prefixes.","","","","","","","Build the <code>FileSetConfig</code>.","Returns a builder for <code>FileSetConfig</code>.","","","","","","","","Get the id corresponding to <code>path</code> if it exists in the set.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insert the <code>file_id, path</code> pair into the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate over this set’s ids.","Returns the number of stored paths.","Returns the number of sets currently held.","Partition <code>vfs</code> into <code>FileSet</code>s.","Get the path corresponding to <code>file</code> if it exists in the set.","Get the id of the file corresponding to <code>path</code>.","","","","","","","","","","","<code>Handle</code>’s configuration.","Specifies a set of files on the file system.","The <code>Entry</code> is represented by <code>Directories</code>.","A set of files on the file system.","The <code>Entry</code> is represented by a raw set of files.","Interface for reading and watching files.","The handle loaded the following files’ content.","Message about an action taken by a <code>Handle</code>.","Indicate a gradual progress.","Type that will receive <code>Messages</code> from a <code>Handle</code>.","","","","","","","","","Returns:","","","","","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The file’s content at <code>path</code> has been modified, and should …","Set of initially loaded files.","Load the content of the given file, returning <code>None</code> if it …","Returns:","Returns:","Set this handle’s configuration.","Spawn a new handle with the given <code>sender</code>.","","","","","","","","","","","","","","","Version number to associate progress updates to the right …","Index of watched entries in <code>load</code>.","","","",""],"i":[0,0,0,0,0,0,13,13,0,13,0,0,1,10,11,1,4,6,4,4,1,4,1,4,4,1,10,11,6,12,15,19,13,4,1,10,11,6,12,15,19,13,1,19,4,10,11,6,12,13,4,10,11,6,12,13,4,1,6,12,15,4,1,1,4,4,1,10,11,6,12,13,4,1,10,11,6,12,13,1,19,1,15,15,19,1,15,0,1,4,1,10,11,6,6,12,15,19,13,4,10,11,6,6,12,15,19,13,15,4,1,6,12,4,10,11,6,12,15,19,13,19,15,1,6,0,15,1,6,6,6,1,1,6,4,1,6,12,10,11,4,6,15,1,6,1,6,15,4,1,10,11,6,12,13,1,6,4,4,4,1,10,11,6,12,15,19,13,4,10,11,6,12,15,19,13,4,1,10,11,6,12,15,19,13,0,0,0,32,34,33,32,34,33,32,32,33,34,34,34,33,32,34,34,34,34,33,34,33,32,34,34,33,32,34,34,32,33,34,34,34,34,33,32,34,33,32,34,33,32,0,0,35,0,35,0,37,0,37,0,37,35,36,38,37,35,36,38,35,35,36,35,36,35,36,35,36,36,36,36,37,35,36,38,37,35,36,38,36,37,35,36,38,41,38,41,35,35,41,41,35,36,37,35,36,38,37,35,36,38,37,35,36,38,38,38,42,43,42,42],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],4],0,0,[1,5],[4,1],[6,[[7,[1]]]],[4,2],[4,1],[1,2],[8,4],[2,1],[4,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,9],0,[4,4],[10,10],[11,11],[6,6],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],14],[[1,1],14],[[6,6],14],[[12,12],14],[[],15],[4,1],[1,16],[[1,17],18],[[4,4],18],[[4,1],18],[[1,1],18],[[10,10],18],[[11,11],18],[[6,6],18],[[12,12],18],[[13,13],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[1,18],[19,18],[1,[[7,[5]]]],[[15,12]],[[15,6],[[7,[12]]]],0,[1,[[7,[5]]]],[[15,12],6],0,[1,[[7,[5]]]],[[4,20],[[22,[21]]]],[[1,20],[[22,[21]]]],[[10,20],23],[[11,20],23],[[6,20],23],[[6,20],23],[[12,20],23],[[15,20],23],[[19,20],23],[[13,20],23],[[]],[[]],[[]],[4,6],[[]],[[]],[[]],[[]],[[]],[15,18],[[4,24]],[[1,24]],[[6,24]],[[12,24]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,18],[15,25],[[1,[3,[2]]],4],[[6,26],[[7,[6]]]],0,[15,27],[1,7],[6,7],[28,6],[28,6],[1,4],[1,[[7,[1]]]],[6,[[7,[6]]]],[[4,4],[[7,[14]]]],[[1,1],[[7,[14]]]],[[6,6],[[7,[14]]]],[[12,12],[[7,[14]]]],0,0,[4,18],[6,18],[[15,6,[7,[[30,[29]]]]],18],[[1,1],18],[[6,6],18],[[1,1],[[7,[17]]]],[[6,6],[[7,[17]]]],[15,[[30,[19]]]],[[]],[1],[[]],[[]],[[]],[[]],[[]],[1,4],[[],28],[26,[[22,[4,8]]]],[[],22],[8,[[22,[4,8]]]],[2,[[22,[1,2]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,0,0,[[32,[30,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[32,33],[[],32],[34,34],[[]],[[],34],[[],33],[[],32],[[34,34],18],[[],18],[[34,6],[[7,[12]]]],[[34,20],23],[[33,20],23],[[]],[[]],[[]],[[34,12,6]],[[]],[[]],[[]],[34,25],[34,27],[32,27],[[33,15],[[30,[34]]]],[[34,12],[[7,[6]]]],[[34,11],[[7,[12]]]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],31],[[],31],[[],31],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,35],[35,35],[36,36],[[]],[[]],[[35,1],18],[[36,1],18],[[35,1],18],[[36,1],18],[[],36],0,0,[[37,20],23],[[35,20],23],[[36,20],23],[[38,20],23],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[4],0,[1,[[7,[[30,[29]]]]]],[4,35],[4,35],[38],[39,40],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],31],[[],31],[[],31],[[],31],0,0,0,0,0,0],"c":[79],"p":[[3,"AbsPath"],[3,"Path"],[8,"AsRef"],[3,"AbsPathBuf"],[3,"OsStr"],[3,"VfsPath"],[4,"Option"],[3,"PathBuf"],[15,"never"],[3,"AnchoredPathBuf"],[3,"AnchoredPath"],[3,"FileId"],[4,"ChangeKind"],[4,"Ordering"],[3,"Vfs"],[3,"Display"],[3,"RelPath"],[15,"bool"],[3,"ChangedFile"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Hasher"],[8,"Iterator"],[15,"str"],[15,"usize"],[3,"String"],[15,"u8"],[3,"Vec"],[3,"TypeId"],[3,"FileSetConfigBuilder"],[3,"FileSetConfig"],[3,"FileSet"],[4,"Entry"],[3,"Directories"],[4,"Message"],[3,"Config"],[6,"Sender"],[8,"Sized"],[8,"Handle"],[13,"Progress"],[13,"Loaded"]]},\
"vfs_notify":{"doc":"An implementation of <code>loader::Handle</code>, based on <code>walkdir</code> and …","t":"DLLLLLLLLLLLL","n":["NotifyHandle","borrow","borrow_mut","fmt","from","into","invalidate","load_sync","set_config","spawn","try_from","try_into","type_id"],"q":[[0,"vfs_notify"]],"d":["","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[1,2],3],[[]],[[]],[[1,4]],[[1,5],[[8,[[7,[6]]]]]],[[1,9]],[10,1],[[],11],[[],11],[[],12]],"c":[],"p":[[3,"NotifyHandle"],[3,"Formatter"],[6,"Result"],[3,"AbsPathBuf"],[3,"AbsPath"],[15,"u8"],[3,"Vec"],[4,"Option"],[3,"Config"],[6,"Sender"],[4,"Result"],[3,"TypeId"]]},\
"xtask":{"doc":"See https://github.com/matklad/cargo-xtask/.","t":"FAAAFFAFAAFDDRRRMLLLLLMFFLLLLFLLMLMMLMMLLLLLLFDNDNDNSDNDNDNDNDNDELLLLLLLLLLLLLLLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDNENRDNRLLLLLLLLMFLLLFFLLLMLLLLLLLLLLDDGLLLLMLLLLMLLLLLLLMMLLMFMFLMMLLLLLLLLFFAFNEDNRNRREDDNNNRMLLLLLLLLLLFLLLLLLLLLFFFLLLLLLLMLMLLLMFLLLLLLFLLLLLLLFMLLLLLLLLLLLLLLLLLLLLARNNRNNRDENLLLLLLLLFLLMMFFFLLLLLLLF","n":["date_iso","dist","flags","install","is_release_tag","main","metrics","project_root","publish","release","run_fuzzer","Patch","Target","VERSION_DEV","VERSION_NIGHTLY","VERSION_STABLE","artifact_name","borrow","borrow","borrow_mut","borrow_mut","commit","contents","dist_client","dist_server","drop","from","from","get","gzip","into","into","name","new","original_contents","path","replace","server_path","symbols_path","try_from","try_from","try_into","try_into","type_id","type_id","zip","Bb","Bb","Dist","Dist","FuzzTests","FuzzTests","HELP_","Install","Install","Metrics","Metrics","Promote","Promote","PublishReleaseNotes","PublishReleaseNotes","Release","Release","Xtask","XtaskCmd","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changelog","client","client","client_patch_version","code_bin","dry_run","dry_run","dry_run","dry_run","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_env","from_env_","from_env_or_exit","from_env_or_exit_","from_vec","from_vec_","into","into","into","into","into","into","into","into","into","into","jemalloc","mimalloc","parse_","run","run","run","run","run","run","server","server","subcommand","suffix","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","COMMON_APP_PATH","ClientOpt","Jemalloc","Malloc","Mimalloc","ROOT_DIR","ServerOpt","System","VS_CODES","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","code_bin","fix_path_for_mac","from","from","from","install_client","install_server","into","into","into","malloc","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Host","Metrics","Unit","borrow","borrow","borrow_mut","borrow_mut","cpu","fmt","fmt","from","from","host","into","into","json","measure_analysis_stats","measure_analysis_stats_path","measure_analysis_stats_self","measure_build","mem","metrics","new","new","os","parse_metrics","perf_revision","read_field","report","revision","timestamp","to_json","to_json","try_from","try_from","try_into","try_into","type_id","type_id","check_file_name","create_original_changelog_url","notes","update_release","Asterisk","Component","Converter","Dot","HYPHEN_MARKER","Hyphen","IMAGE_BLOCK_PREFIX","LISTING_DELIMITER","ListMarker","ListNesting","Macro","Macro","None","Text","VIDEO_BLOCK_PREFIX","attrs","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert_asciidoc_to_markdown","current","eq","fmt","fmt","from","from","from","from","from","get_list_item","get_next_line_component","get_title","in_markdown","indent","into","into","into","into","into","iter","marker","name","new","new","new","output","parse_media_block","process","process","process_block_with_title","process_document_header","process_document_title","process_image_block","process_inline_macros","process_list","process_listing_block","process_paragraph","process_source_code_block","process_video_block","set_current","skip_blank_lines","strip_prefix_symbol","target","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_caption_line","write_indent","write_line","write_list_item","write_title","changelog","BORS_PREFIX","Feature","Fix","HOMU_PREFIX","Internal","Other","PREFIXES","PrInfo","PrKind","Skip","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","get_changelog","into","into","kind","message","parse_changelog_line","parse_pr_number","parse_title_line","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unescape"],"q":[[0,"xtask"],[11,"xtask::dist"],[46,"xtask::flags"],[173,"xtask::install"],[211,"xtask::metrics"],[250,"xtask::publish"],[254,"xtask::publish::notes"],[344,"xtask::release"],[345,"xtask::release::changelog"]],"d":["","","","Installs rust-analyzer language server and/or editor …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,7,8,7,7,7,0,0,7,8,7,8,0,8,7,8,7,7,7,7,8,8,8,7,8,7,8,7,0,0,19,0,19,0,19,16,0,19,0,19,0,19,0,19,0,19,0,0,16,19,14,20,21,22,23,24,25,26,16,19,14,20,21,22,23,24,25,26,24,14,14,23,14,21,22,24,25,16,19,14,20,21,22,23,24,25,26,16,19,14,20,21,22,23,24,25,26,16,16,16,16,16,16,16,19,14,20,21,22,23,24,25,26,14,14,16,14,21,22,23,24,25,14,14,16,26,16,19,14,20,21,22,23,24,25,26,16,19,14,20,21,22,23,24,25,26,16,19,14,20,21,22,23,24,25,26,0,0,53,0,53,0,0,53,0,31,53,15,31,53,15,15,15,15,0,31,53,15,0,0,31,53,15,31,15,31,53,15,31,53,15,31,53,15,0,0,0,32,33,32,33,33,32,33,32,33,32,32,33,32,32,32,32,32,33,32,32,33,33,0,32,0,32,32,32,32,33,32,33,32,33,32,33,0,0,0,0,39,0,0,39,0,39,0,0,0,0,0,41,41,41,0,46,45,41,46,38,39,45,41,46,38,39,0,38,39,38,39,45,41,46,38,39,0,0,0,39,38,45,41,46,38,39,45,38,46,45,46,38,45,0,45,46,45,45,45,45,0,45,45,45,45,45,38,45,0,46,45,41,46,38,39,45,41,46,38,39,45,41,46,38,39,45,45,45,45,45,0,0,50,50,0,50,50,0,0,0,50,51,50,51,50,50,50,51,50,0,51,50,51,51,0,0,0,50,51,50,51,50,51,50,0],"f":[[1,[[3,[2]]]],0,0,0,[4,5],[[],3],0,[[],6],0,0,[1,3],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[7,1],3],0,[[1,4,4,8],3],[[1,4,8],3],[7],[[]],[[]],[9,8],[[9,9],3],[[]],[[]],0,[[1,[10,[6]]],[[3,[7]]]],0,0,[[7,4,4],7],0,0,[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[9,[13,[6]],9],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[14,[[13,[15]]]],0,0,0,0,0,0,0,[[16,17],18],[[19,17],18],[[14,17],18],[[20,17],18],[[21,17],18],[[22,17],18],[[23,17],18],[[24,17],18],[[25,17],18],[[26,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[27,[16]]]],[[],[[27,[16]]]],[[],16],[[],16],[[[29,[28]]],[[27,[16]]]],[[[29,[28]]],[[27,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[30,[[27,[16]]]],[[14,1],3],[[21,1],3],[[22,1],3],[[23,1],3],[[24,1],3],[[25,1],3],[14,[[13,[31]]]],0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[[]],0,[1,3],[[]],[[]],[[]],[[1,15],3],[[1,31],3],[[]],[[]],[[]],0,[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,[[]],[[]],[[]],[[]],0,[[32,17],18],[[33,17],18],[[]],[[]],0,[[]],[[]],[32,2],[[32,1,4],3],[[32,1,4,4],3],[[32,1],3],[[32,1],3],0,0,[1,[[3,[32]]]],[1,[[3,[33]]]],0,[4,29],0,[[1,4,4],[[3,[2]]]],[[32,4,34,2]],0,0,[[32,35]],[[33,35]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[[36,[9]]],[[3,[2]]]],[4,2],0,[[1,4,4],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[3,[2]]]],[38,[[13,[39]]]],[[39,39],5],[[38,17],18],[[39,17],18],[[]],[[]],[[]],[[]],[[]],[4,13],[40,41],[4,13],[39,4],[38,42],[[]],[[]],[[]],[[]],[[]],0,[38],0,[[[44,[[43,[37]]]],2],[[45,[37]]]],[[2,2,2],46],[[],38],0,[[4,4],13],[[[45,[37]]],3],[46,[[3,[2]]]],[[[45,[37]],42],3],[[[45,[37]]],3],[[[45,[37]]],3],[[[45,[37]],[13,[4]],42],3],[4,[[3,[[47,[4]]]]]],[[[45,[37]]],3],[[[45,[37]],[13,[4]],42],3],[[[45,[37]],42,48],3],[[[45,[37]],42],3],[[[45,[37]],[13,[4]],42],3],[[38,39]],[[[45,[37]]],3],[[4,49],13],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[[45,[37]],4,42]],[[[45,[37]],42]],[[[45,[37]],4,42]],[[[45,[37]],4,38]],[[[45,[37]],42,4]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[50,50],[[]],[[]],[[]],[[1,42,4,4,4],[[3,[2]]]],[[]],[[]],0,0,[4,[[13,[51]]]],[4,[[13,[52]]]],[4,51],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[4,2]],"c":[],"p":[[3,"Shell"],[3,"String"],[6,"Result"],[15,"str"],[15,"bool"],[3,"PathBuf"],[3,"Patch"],[3,"Target"],[3,"Path"],[8,"Into"],[4,"Result"],[3,"TypeId"],[4,"Option"],[3,"Install"],[3,"ClientOpt"],[3,"Xtask"],[3,"Formatter"],[6,"Result"],[4,"XtaskCmd"],[3,"FuzzTests"],[3,"Release"],[3,"Promote"],[3,"Dist"],[3,"PublishReleaseNotes"],[3,"Metrics"],[3,"Bb"],[6,"Result"],[3,"OsString"],[3,"Vec"],[3,"Parser"],[3,"ServerOpt"],[3,"Metrics"],[3,"Host"],[15,"u64"],[3,"Object"],[8,"AsRef"],[8,"BufRead"],[3,"ListNesting"],[4,"ListMarker"],[3,"CharIndices"],[4,"Component"],[15,"usize"],[3,"Lines"],[3,"Peekable"],[3,"Converter"],[3,"Macro"],[4,"Cow"],[8,"Fn"],[15,"char"],[4,"PrKind"],[3,"PrInfo"],[15,"u32"],[4,"Malloc"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
